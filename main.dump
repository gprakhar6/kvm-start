
main:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0x1cab>
 328:	78 38                	js     362 <_init-0x1c9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 33                	add    %dh,(%rbx)
 369:	23 74 7f bb          	and    -0x45(%rdi,%rdi,2),%esi
 36d:	84 c4                	test   %al,%ah
 36f:	66 48 76 59          	data16 rex.W jbe 3cc <_init-0x1c34>
 373:	53                   	push   %rbx
 374:	b1 28                	mov    $0x28,%cl
 376:	5c                   	pop    %rsp
 377:	58                   	pop    %rax
 378:	8f                   	(bad)  
 379:	d3 f0                	shl    %cl,%eax
 37b:	e7                   	.byte 0xe7

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	37                   	(bad)  
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 01                	add    %al,(%rcx)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 06                	add    %al,(%rsi)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 37                	add    %dh,(%rdi)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	e1 01                	loope  3e3 <_init-0x1c1d>
 3e2:	00 00                	add    %al,(%rax)
 3e4:	12 00                	adc    (%rax),%al
	...
 3f6:	00 00                	add    %al,(%rax)
 3f8:	0f 01 00             	sgdt   (%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 75 00             	add    %dh,0x0(%rbp)
 412:	00 00                	add    %al,(%rax)
 414:	12 00                	adc    (%rax),%al
	...
 426:	00 00                	add    %al,(%rax)
 428:	47 00 00             	rex.RXB add %r8b,(%r8)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 ec                	add    %ch,%ah
 441:	00 00                	add    %al,(%rax)
 443:	00 12                	add    %dl,(%rdx)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 cd                	add    %cl,%ch
 459:	00 00                	add    %al,(%rax)
 45b:	00 12                	add    %dl,(%rdx)
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 11                	add    %dl,(%rcx)
 471:	00 00                	add    %al,(%rax)
 473:	00 20                	add    %ah,(%rax)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 af 00 00 00 12    	add    %ch,0x12000000(%rdi)
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 59 01             	add    %bl,0x1(%rcx)
 4a2:	00 00                	add    %al,(%rax)
 4a4:	12 00                	adc    (%rax),%al
	...
 4b6:	00 00                	add    %al,(%rax)
 4b8:	f4                   	hlt    
 4b9:	00 00                	add    %al,(%rax)
 4bb:	00 12                	add    %dl,(%rdx)
	...
 4cd:	00 00                	add    %al,(%rax)
 4cf:	00 9d 01 00 00 12    	add    %bl,0x12000001(%rbp)
	...
 4e5:	00 00                	add    %al,(%rax)
 4e7:	00 77 01             	add    %dh,0x1(%rdi)
 4ea:	00 00                	add    %al,(%rax)
 4ec:	12 00                	adc    (%rax),%al
	...
 4fe:	00 00                	add    %al,(%rax)
 500:	1e                   	(bad)  
 501:	01 00                	add    %eax,(%rax)
 503:	00 12                	add    %dl,(%rdx)
	...
 515:	00 00                	add    %al,(%rax)
 517:	00 70 01             	add    %dh,0x1(%rax)
 51a:	00 00                	add    %al,(%rax)
 51c:	12 00                	adc    (%rax),%al
	...
 52e:	00 00                	add    %al,(%rax)
 530:	38 01                	cmp    %al,(%rcx)
 532:	00 00                	add    %al,(%rax)
 534:	12 00                	adc    (%rax),%al
	...
 546:	00 00                	add    %al,(%rax)
 548:	fe 00                	incb   (%rax)
 54a:	00 00                	add    %al,(%rax)
 54c:	12 00                	adc    (%rax),%al
	...
 55e:	00 00                	add    %al,(%rax)
 560:	2c 01                	sub    $0x1,%al
 562:	00 00                	add    %al,(%rax)
 564:	12 00                	adc    (%rax),%al
	...
 576:	00 00                	add    %al,(%rax)
 578:	8f 01                	popq   (%rcx)
 57a:	00 00                	add    %al,(%rax)
 57c:	12 00                	adc    (%rax),%al
	...
 58e:	00 00                	add    %al,(%rax)
 590:	c1 00 00             	roll   $0x0,(%rax)
 593:	00 12                	add    %dl,(%rdx)
	...
 5a5:	00 00                	add    %al,(%rax)
 5a7:	00 25 01 00 00 12    	add    %ah,0x12000001(%rip)        # 120005ae <_end+0x11ff33ee>
	...
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 a3 01 00 00 12    	add    %ah,0x12000001(%rbx)
	...
 5d5:	00 00                	add    %al,(%rax)
 5d7:	00 bb 00 00 00 12    	add    %bh,0x12000000(%rbx)
	...
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 3f                	add    %bh,(%rdi)
 5f1:	01 00                	add    %eax,(%rax)
 5f3:	00 12                	add    %dl,(%rdx)
	...
 605:	00 00                	add    %al,(%rax)
 607:	00 89 01 00 00 12    	add    %cl,0x12000001(%rcx)
	...
 61d:	00 00                	add    %al,(%rax)
 61f:	00 71 01             	add    %dh,0x1(%rcx)
 622:	00 00                	add    %al,(%rax)
 624:	12 00                	adc    (%rax),%al
	...
 636:	00 00                	add    %al,(%rax)
 638:	9e                   	sahf   
 639:	01 00                	add    %eax,(%rax)
 63b:	00 12                	add    %dl,(%rdx)
	...
 64d:	00 00                	add    %al,(%rax)
 64f:	00 cf                	add    %cl,%bh
 651:	01 00                	add    %eax,(%rax)
 653:	00 12                	add    %dl,(%rdx)
	...
 665:	00 00                	add    %al,(%rax)
 667:	00 31                	add    %dh,(%rcx)
 669:	01 00                	add    %eax,(%rax)
 66b:	00 12                	add    %dl,(%rdx)
	...
 67d:	00 00                	add    %al,(%rax)
 67f:	00 bf 01 00 00 12    	add    %bh,0x12000001(%rdi)
	...
 695:	00 00                	add    %al,(%rax)
 697:	00 e5                	add    %ah,%ch
 699:	00 00                	add    %al,(%rax)
 69b:	00 12                	add    %dl,(%rdx)
	...
 6ad:	00 00                	add    %al,(%rax)
 6af:	00 5f 00             	add    %bl,0x0(%rdi)
 6b2:	00 00                	add    %al,(%rax)
 6b4:	12 00                	adc    (%rax),%al
	...
 6c6:	00 00                	add    %al,(%rax)
 6c8:	1a 02                	sbb    (%rdx),%al
 6ca:	00 00                	add    %al,(%rax)
 6cc:	20 00                	and    %al,(%rax)
	...
 6de:	00 00                	add    %al,(%rax)
 6e0:	69 01 00 00 12 00    	imul   $0x120000,(%rcx),%eax
	...
 6f6:	00 00                	add    %al,(%rax)
 6f8:	96                   	xchg   %eax,%esi
 6f9:	01 00                	add    %eax,(%rax)
 6fb:	00 12                	add    %dl,(%rdx)
	...
 70d:	00 00                	add    %al,(%rax)
 70f:	00 82 01 00 00 12    	add    %al,0x12000001(%rdx)
	...
 725:	00 00                	add    %al,(%rax)
 727:	00 d5                	add    %dl,%ch
 729:	00 00                	add    %al,(%rax)
 72b:	00 12                	add    %dl,(%rdx)
	...
 73d:	00 00                	add    %al,(%rax)
 73f:	00 e6                	add    %ah,%dh
 741:	01 00                	add    %eax,(%rax)
 743:	00 12                	add    %dl,(%rdx)
	...
 755:	00 00                	add    %al,(%rax)
 757:	00 17                	add    %dl,(%rdi)
 759:	01 00                	add    %eax,(%rax)
 75b:	00 12                	add    %dl,(%rdx)
	...
 76d:	00 00                	add    %al,(%rax)
 76f:	00 4b 01             	add    %cl,0x1(%rbx)
 772:	00 00                	add    %al,(%rax)
 774:	12 00                	adc    (%rax),%al
	...
 786:	00 00                	add    %al,(%rax)
 788:	8d 00                	lea    (%rax),%eax
 78a:	00 00                	add    %al,(%rax)
 78c:	12 00                	adc    (%rax),%al
	...
 79e:	00 00                	add    %al,(%rax)
 7a0:	96                   	xchg   %eax,%esi
 7a1:	00 00                	add    %al,(%rax)
 7a3:	00 12                	add    %dl,(%rdx)
	...
 7b5:	00 00                	add    %al,(%rax)
 7b7:	00 46 01             	add    %al,0x1(%rsi)
 7ba:	00 00                	add    %al,(%rax)
 7bc:	12 00                	adc    (%rax),%al
	...
 7ce:	00 00                	add    %al,(%rax)
 7d0:	84 00                	test   %al,(%rax)
 7d2:	00 00                	add    %al,(%rax)
 7d4:	12 00                	adc    (%rax),%al
	...
 7e6:	00 00                	add    %al,(%rax)
 7e8:	c8 00 00 00          	enterq $0x0,$0x0
 7ec:	12 00                	adc    (%rax),%al
	...
 7fe:	00 00                	add    %al,(%rax)
 800:	c7 00 00 00 12 00    	movl   $0x120000,(%rax)
	...
 816:	00 00                	add    %al,(%rax)
 818:	68 00 00 00 12       	pushq  $0x12000000
	...
 82d:	00 00                	add    %al,(%rax)
 82f:	00 58 00             	add    %bl,0x0(%rax)
 832:	00 00                	add    %al,(%rax)
 834:	12 00                	adc    (%rax),%al
	...
 846:	00 00                	add    %al,(%rax)
 848:	b6 00                	mov    $0x0,%dh
 84a:	00 00                	add    %al,(%rax)
 84c:	12 00                	adc    (%rax),%al
	...
 85e:	00 00                	add    %al,(%rax)
 860:	51                   	push   %rcx
 861:	01 00                	add    %eax,(%rax)
 863:	00 12                	add    %dl,(%rdx)
	...
 875:	00 00                	add    %al,(%rax)
 877:	00 2d 00 00 00 20    	add    %ch,0x20000000(%rip)        # 2000087d <_end+0x1fff36bd>
	...
 88d:	00 00                	add    %al,(%rax)
 88f:	00 c6                	add    %al,%dh
 891:	01 00                	add    %eax,(%rax)
 893:	00 12                	add    %dl,(%rdx)
	...
 8a5:	00 00                	add    %al,(%rax)
 8a7:	00 63 00             	add    %ah,0x0(%rbx)
 8aa:	00 00                	add    %al,(%rax)
 8ac:	12 00                	adc    (%rax),%al
	...
 8be:	00 00                	add    %al,(%rax)
 8c0:	f9                   	stc    
 8c1:	00 00                	add    %al,(%rax)
 8c3:	00 12                	add    %dl,(%rdx)
	...
 8d5:	00 00                	add    %al,(%rax)
 8d7:	00 a8 00 00 00 12    	add    %ch,0x12000000(%rax)
	...
 8ed:	00 00                	add    %al,(%rax)
 8ef:	00 b0 01 00 00 22    	add    %dh,0x22000001(%rax)
	...

Disassembly of section .dynstr:

0000000000000908 <.dynstr>:
 908:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 90c:	70 74                	jo     982 <_init-0x167e>
 90e:	68 72 65 61 64       	pushq  $0x64616572
 913:	2e 73 6f             	jae,pn 985 <_init-0x167b>
 916:	2e 30 00             	xor    %al,%cs:(%rax)
 919:	5f                   	pop    %rdi
 91a:	49 54                	rex.WB push %r12
 91c:	4d 5f                	rex.WRB pop %r15
 91e:	64 65 72 65          	fs gs jb 987 <_init-0x1679>
 922:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 929:	4d 
 92a:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 92c:	6f                   	outsl  %ds:(%rsi),(%dx)
 92d:	6e                   	outsb  %ds:(%rsi),(%dx)
 92e:	65 54                	gs push %rsp
 930:	61                   	(bad)  
 931:	62                   	(bad)  
 932:	6c                   	insb   (%dx),%es:(%rdi)
 933:	65 00 5f 49          	add    %bl,%gs:0x49(%rdi)
 937:	54                   	push   %rsp
 938:	4d 5f                	rex.WRB pop %r15
 93a:	72 65                	jb     9a1 <_init-0x165f>
 93c:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 943:	4d 
 944:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 946:	6f                   	outsl  %ds:(%rsi),(%dx)
 947:	6e                   	outsb  %ds:(%rsi),(%dx)
 948:	65 54                	gs push %rsp
 94a:	61                   	(bad)  
 94b:	62                   	(bad)  
 94c:	6c                   	insb   (%dx),%es:(%rdi)
 94d:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 951:	65 72 72             	gs jb  9c6 <_init-0x163a>
 954:	6e                   	outsb  %ds:(%rsi),(%dx)
 955:	6f                   	outsl  %ds:(%rsi),(%dx)
 956:	5f                   	pop    %rdi
 957:	6c                   	insb   (%dx),%es:(%rdi)
 958:	6f                   	outsl  %ds:(%rsi),(%dx)
 959:	63 61 74             	movslq 0x74(%rcx),%esp
 95c:	69 6f 6e 00 61 63 63 	imul   $0x63636100,0x6e(%rdi),%ebp
 963:	65 70 74             	gs jo  9da <_init-0x1626>
 966:	00 73 65             	add    %dh,0x65(%rbx)
 969:	6d                   	insl   (%dx),%es:(%rdi)
 96a:	5f                   	pop    %rdi
 96b:	77 61                	ja     9ce <_init-0x1632>
 96d:	69 74 00 70 74 68 72 	imul   $0x65726874,0x70(%rax,%rax,1),%esi
 974:	65 
 975:	61                   	(bad)  
 976:	64 5f                	fs pop %rdi
 978:	6a 6f                	pushq  $0x6f
 97a:	69 6e 00 70 74 68 72 	imul   $0x72687470,0x0(%rsi),%ebp
 981:	65 61                	gs (bad) 
 983:	64 5f                	fs pop %rdi
 985:	63 72 65             	movslq 0x65(%rdx),%esi
 988:	61                   	(bad)  
 989:	74 65                	je     9f0 <_init-0x1610>
 98b:	00 73 65             	add    %dh,0x65(%rbx)
 98e:	6d                   	insl   (%dx),%es:(%rdi)
 98f:	5f                   	pop    %rdi
 990:	69 6e 69 74 00 73 65 	imul   $0x65730074,0x69(%rsi),%ebp
 997:	6d                   	insl   (%dx),%es:(%rdi)
 998:	5f                   	pop    %rdi
 999:	70 6f                	jo     a0a <_init-0x15f6>
 99b:	73 74                	jae    a11 <_init-0x15ef>
 99d:	00 72 65             	add    %dh,0x65(%rdx)
 9a0:	63 76 6d             	movslq 0x6d(%rsi),%esi
 9a3:	73 67                	jae    a0c <_init-0x15f4>
 9a5:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 9a9:	63 2e                	movslq (%rsi),%ebp
 9ab:	73 6f                	jae    a1c <_init-0x15e4>
 9ad:	2e 36 00 73 6f       	cs add %dh,%ss:0x6f(%rbx)
 9b2:	63 6b 65             	movslq 0x65(%rbx),%ebp
 9b5:	74 00                	je     9b7 <_init-0x1649>
 9b7:	73 74                	jae    a2d <_init-0x15d3>
 9b9:	72 63                	jb     a1e <_init-0x15e2>
 9bb:	70 79                	jo     a36 <_init-0x15ca>
 9bd:	00 65 78             	add    %ah,0x78(%rbp)
 9c0:	69 74 00 68 74 6f 6e 	imul   $0x6c6e6f74,0x68(%rax,%rax,1),%esi
 9c7:	6c 
 9c8:	00 68 74             	add    %ch,0x74(%rax)
 9cb:	6f                   	outsl  %ds:(%rsi),(%dx)
 9cc:	6e                   	outsb  %ds:(%rsi),(%dx)
 9cd:	73 00                	jae    9cf <_init-0x1631>
 9cf:	66 6f                	outsw  %ds:(%rsi),(%dx)
 9d1:	70 65                	jo     a38 <_init-0x15c8>
 9d3:	6e                   	outsb  %ds:(%rsi),(%dx)
 9d4:	00 73 74             	add    %dh,0x74(%rbx)
 9d7:	72 6e                	jb     a47 <_init-0x15b9>
 9d9:	63 6d 70             	movslq 0x70(%rbp),%ebp
 9dc:	00 5f 5f             	add    %bl,0x5f(%rdi)
 9df:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
 9e6:	73 73                	jae    a5b <_init-0x15a5>
 9e8:	63 61 6e             	movslq 0x6e(%rcx),%esp
 9eb:	66 00 73 69          	data16 add %dh,0x69(%rbx)
 9ef:	67 6e                	outsb  %ds:(%esi),(%dx)
 9f1:	61                   	(bad)  
 9f2:	6c                   	insb   (%dx),%es:(%rdi)
 9f3:	00 73 74             	add    %dh,0x74(%rbx)
 9f6:	72 6e                	jb     a66 <_init-0x159a>
 9f8:	63 70 79             	movslq 0x79(%rax),%esi
 9fb:	00 70 75             	add    %dh,0x75(%rax)
 9fe:	74 73                	je     a73 <_init-0x158d>
 a00:	00 66 6f             	add    %ah,0x6f(%rsi)
 a03:	72 6b                	jb     a70 <_init-0x1590>
 a05:	00 5f 5f             	add    %bl,0x5f(%rdi)
 a08:	73 74                	jae    a7e <_init-0x1582>
 a0a:	61                   	(bad)  
 a0b:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 a0e:	63 68 6b             	movslq 0x6b(%rax),%ebp
 a11:	5f                   	pop    %rdi
 a12:	66 61                	data16 (bad) 
 a14:	69 6c 00 70 75 74 63 	imul   $0x68637475,0x70(%rax,%rax,1),%ebp
 a1b:	68 
 a1c:	61                   	(bad)  
 a1d:	72 00                	jb     a1f <_init-0x15e1>
 a1f:	6c                   	insb   (%dx),%es:(%rdi)
 a20:	69 73 74 65 6e 00 67 	imul   $0x67006e65,0x74(%rbx),%esi
 a27:	65 74 70             	gs je  a9a <_init-0x1566>
 a2a:	69 64 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%esp
 a31:	74 
 a32:	66 00 6d 6d          	data16 add %ch,0x6d(%rbp)
 a36:	61                   	(bad)  
 a37:	70 00                	jo     a39 <_init-0x15c7>
 a39:	63 61 6c             	movslq 0x6c(%rcx),%esp
 a3c:	6c                   	insb   (%dx),%es:(%rdi)
 a3d:	6f                   	outsl  %ds:(%rsi),(%dx)
 a3e:	63 00                	movslq (%rax),%eax
 a40:	73 74                	jae    ab6 <_init-0x154a>
 a42:	72 6c                	jb     ab0 <_init-0x1550>
 a44:	65 6e                	outsb  %gs:(%rsi),(%dx)
 a46:	00 6d 65             	add    %ch,0x65(%rbp)
 a49:	6d                   	insl   (%dx),%es:(%rdi)
 a4a:	73 65                	jae    ab1 <_init-0x154f>
 a4c:	74 00                	je     a4e <_init-0x15b2>
 a4e:	62                   	(bad)  
 a4f:	69 6e 64 00 66 73 65 	imul   $0x65736600,0x64(%rsi),%ebp
 a56:	65 6b 00 65          	imul   $0x65,%gs:(%rax),%eax
 a5a:	76 65                	jbe    ac1 <_init-0x153f>
 a5c:	6e                   	outsb  %ds:(%rsi),(%dx)
 a5d:	74 66                	je     ac5 <_init-0x153b>
 a5f:	64 00 5f 5f          	add    %bl,%fs:0x5f(%rdi)
 a63:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
 a6a:	66 73 63             	data16 jae ad0 <_init-0x1530>
 a6d:	61                   	(bad)  
 a6e:	6e                   	outsb  %ds:(%rsi),(%dx)
 a6f:	66 00 6d 65          	data16 add %ch,0x65(%rbp)
 a73:	6d                   	insl   (%dx),%es:(%rdi)
 a74:	63 70 79             	movslq 0x79(%rax),%esi
 a77:	00 66 63             	add    %ah,0x63(%rsi)
 a7a:	6c                   	insb   (%dx),%es:(%rdi)
 a7b:	6f                   	outsl  %ds:(%rsi),(%dx)
 a7c:	73 65                	jae    ae3 <_init-0x151d>
 a7e:	00 73 65             	add    %dh,0x65(%rbx)
 a81:	74 73                	je     af6 <_init-0x150a>
 a83:	6f                   	outsl  %ds:(%rsi),(%dx)
 a84:	63 6b 6f             	movslq 0x6f(%rbx),%ebp
 a87:	70 74                	jo     afd <_init-0x1503>
 a89:	00 6d 61             	add    %ch,0x61(%rbp)
 a8c:	6c                   	insb   (%dx),%es:(%rdi)
 a8d:	6c                   	insb   (%dx),%es:(%rdi)
 a8e:	6f                   	outsl  %ds:(%rsi),(%dx)
 a8f:	63 00                	movslq (%rax),%eax
 a91:	69 6f 63 74 6c 00 73 	imul   $0x73006c74,0x63(%rdi),%ebp
 a98:	79 73                	jns    b0d <_init-0x14f3>
 a9a:	74 65                	je     b01 <_init-0x14ff>
 a9c:	6d                   	insl   (%dx),%es:(%rdi)
 a9d:	00 66 69             	add    %ah,0x69(%rsi)
 aa0:	6c                   	insb   (%dx),%es:(%rdi)
 aa1:	65 6e                	outsb  %gs:(%rsi),(%dx)
 aa3:	6f                   	outsl  %ds:(%rsi),(%dx)
 aa4:	00 66 72             	add    %ah,0x72(%rsi)
 aa7:	65 61                	gs (bad) 
 aa9:	64 00 67 65          	add    %ah,%fs:0x65(%rdi)
 aad:	74 74                	je     b23 <_init-0x14dd>
 aaf:	69 6d 65 6f 66 64 61 	imul   $0x6164666f,0x65(%rbp),%ebp
 ab6:	79 00                	jns    ab8 <_init-0x1548>
 ab8:	5f                   	pop    %rdi
 ab9:	5f                   	pop    %rdi
 aba:	63 78 61             	movslq 0x61(%rax),%edi
 abd:	5f                   	pop    %rdi
 abe:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 ac4:	7a 65                	jp     b2b <_init-0x14d5>
 ac6:	00 73 74             	add    %dh,0x74(%rbx)
 ac9:	72 63                	jb     b2e <_init-0x14d2>
 acb:	6d                   	insl   (%dx),%es:(%rdi)
 acc:	70 00                	jo     ace <_init-0x1532>
 ace:	73 74                	jae    b44 <_init-0x14bc>
 ad0:	72 65                	jb     b37 <_init-0x14c9>
 ad2:	72 72                	jb     b46 <_init-0x14ba>
 ad4:	6f                   	outsl  %ds:(%rsi),(%dx)
 ad5:	72 00                	jb     ad7 <_init-0x1529>
 ad7:	5f                   	pop    %rdi
 ad8:	5f                   	pop    %rdi
 ad9:	6c                   	insb   (%dx),%es:(%rdi)
 ada:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 ae1:	72 74                	jb     b57 <_init-0x14a9>
 ae3:	5f                   	pop    %rdi
 ae4:	6d                   	insl   (%dx),%es:(%rdi)
 ae5:	61                   	(bad)  
 ae6:	69 6e 00 66 72 65 65 	imul   $0x65657266,0x0(%rsi),%ebp
 aed:	00 5f 5f             	add    %bl,0x5f(%rdi)
 af0:	66 78 73             	data16 js b66 <_init-0x149a>
 af3:	74 61                	je     b56 <_init-0x14aa>
 af5:	74 00                	je     af7 <_init-0x1509>
 af7:	47                   	rex.RXB
 af8:	4c                   	rex.WR
 af9:	49                   	rex.WB
 afa:	42                   	rex.X
 afb:	43 5f                	rex.XB pop %r15
 afd:	32 2e                	xor    (%rsi),%ch
 aff:	32 2e                	xor    (%rsi),%ch
 b01:	35 00 47 4c 49       	xor    $0x494c4700,%eax
 b06:	42                   	rex.X
 b07:	43 5f                	rex.XB pop %r15
 b09:	32 2e                	xor    (%rsi),%ch
 b0b:	31 34 00             	xor    %esi,(%rax,%rax,1)
 b0e:	47                   	rex.RXB
 b0f:	4c                   	rex.WR
 b10:	49                   	rex.WB
 b11:	42                   	rex.X
 b12:	43 5f                	rex.XB pop %r15
 b14:	32 2e                	xor    (%rsi),%ch
 b16:	34 00                	xor    $0x0,%al
 b18:	47                   	rex.RXB
 b19:	4c                   	rex.WR
 b1a:	49                   	rex.WB
 b1b:	42                   	rex.X
 b1c:	43 5f                	rex.XB pop %r15
 b1e:	32 2e                	xor    (%rsi),%ch
 b20:	37                   	(bad)  
 b21:	00 5f 5f             	add    %bl,0x5f(%rdi)
 b24:	67 6d                	insl   (%dx),%es:(%edi)
 b26:	6f                   	outsl  %ds:(%rsi),(%dx)
 b27:	6e                   	outsb  %ds:(%rsi),(%dx)
 b28:	5f                   	pop    %rdi
 b29:	73 74                	jae    b9f <_init-0x1461>
 b2b:	61                   	(bad)  
 b2c:	72 74                	jb     ba2 <_init-0x145e>
 b2e:	5f                   	pop    %rdi
 b2f:	5f                   	pop    %rdi
	...

Disassembly of section .gnu.version:

0000000000000b32 <.gnu.version>:
 b32:	00 00                	add    %al,(%rax)
 b34:	02 00                	add    (%rax),%al
 b36:	02 00                	add    (%rax),%al
 b38:	03 00                	add    (%rax),%eax
 b3a:	03 00                	add    (%rax),%eax
 b3c:	02 00                	add    (%rax),%al
 b3e:	02 00                	add    (%rax),%al
 b40:	00 00                	add    %al,(%rax)
 b42:	02 00                	add    (%rax),%al
 b44:	04 00                	add    $0x0,%al
 b46:	02 00                	add    (%rax),%al
 b48:	02 00                	add    (%rax),%al
 b4a:	02 00                	add    (%rax),%al
 b4c:	02 00                	add    (%rax),%al
 b4e:	02 00                	add    (%rax),%al
 b50:	02 00                	add    (%rax),%al
 b52:	05 00 02 00 02       	add    $0x2000200,%eax
 b57:	00 02                	add    %al,(%rdx)
 b59:	00 02                	add    %al,(%rdx)
 b5b:	00 02                	add    %al,(%rdx)
 b5d:	00 02                	add    %al,(%rdx)
 b5f:	00 02                	add    %al,(%rdx)
 b61:	00 02                	add    %al,(%rdx)
 b63:	00 03                	add    %al,(%rbx)
 b65:	00 03                	add    %al,(%rbx)
 b67:	00 02                	add    %al,(%rdx)
 b69:	00 02                	add    %al,(%rdx)
 b6b:	00 02                	add    %al,(%rdx)
 b6d:	00 02                	add    %al,(%rdx)
 b6f:	00 03                	add    %al,(%rbx)
 b71:	00 00                	add    %al,(%rax)
 b73:	00 06                	add    %al,(%rsi)
 b75:	00 02                	add    %al,(%rdx)
 b77:	00 02                	add    %al,(%rdx)
 b79:	00 04 00             	add    %al,(%rax,%rax,1)
 b7c:	02 00                	add    (%rax),%al
 b7e:	02 00                	add    (%rax),%al
 b80:	02 00                	add    (%rax),%al
 b82:	03 00                	add    (%rax),%eax
 b84:	03 00                	add    (%rax),%eax
 b86:	02 00                	add    (%rax),%al
 b88:	03 00                	add    (%rax),%eax
 b8a:	03 00                	add    (%rax),%eax
 b8c:	02 00                	add    (%rax),%al
 b8e:	03 00                	add    (%rax),%eax
 b90:	03 00                	add    (%rax),%eax
 b92:	02 00                	add    (%rax),%al
 b94:	04 00                	add    $0x0,%al
 b96:	00 00                	add    %al,(%rax)
 b98:	02 00                	add    (%rax),%al
 b9a:	02 00                	add    (%rax),%al
 b9c:	02 00                	add    (%rax),%al
 b9e:	02 00                	add    (%rax),%al
 ba0:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000ba8 <.gnu.version_r>:
 ba8:	01 00                	add    %eax,(%rax)
 baa:	01 00                	add    %eax,(%rax)
 bac:	01 00                	add    %eax,(%rax)
 bae:	00 00                	add    %al,(%rax)
 bb0:	10 00                	adc    %al,(%rax)
 bb2:	00 00                	add    %al,(%rax)
 bb4:	20 00                	and    %al,(%rax)
 bb6:	00 00                	add    %al,(%rax)
 bb8:	75 1a                	jne    bd4 <_init-0x142c>
 bba:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
 bc0:	ef                   	out    %eax,(%dx)
 bc1:	01 00                	add    %eax,(%rax)
 bc3:	00 00                	add    %al,(%rax)
 bc5:	00 00                	add    %al,(%rax)
 bc7:	00 01                	add    %al,(%rcx)
 bc9:	00 04 00             	add    %al,(%rax,%rax,1)
 bcc:	9e                   	sahf   
 bcd:	00 00                	add    %al,(%rax)
 bcf:	00 10                	add    %dl,(%rax)
 bd1:	00 00                	add    %al,(%rax)
 bd3:	00 00                	add    %al,(%rax)
 bd5:	00 00                	add    %al,(%rax)
 bd7:	00 94 91 96 06 00 00 	add    %dl,0x696(%rcx,%rdx,4)
 bde:	06                   	(bad)  
 bdf:	00 fb                	add    %bh,%bl
 be1:	01 00                	add    %eax,(%rax)
 be3:	00 10                	add    %dl,(%rax)
 be5:	00 00                	add    %al,(%rax)
 be7:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 bea:	69 0d 00 00 05 00 06 	imul   $0x206,0x50000(%rip),%ecx        # 50bf4 <_end+0x43a34>
 bf1:	02 00 00 
 bf4:	10 00                	adc    %al,(%rax)
 bf6:	00 00                	add    %al,(%rax)
 bf8:	17                   	(bad)  
 bf9:	69 69 0d 00 00 04 00 	imul   $0x40000,0xd(%rcx),%ebp
 c00:	10 02                	adc    %al,(%rdx)
 c02:	00 00                	add    %al,(%rax)
 c04:	10 00                	adc    %al,(%rax)
 c06:	00 00                	add    %al,(%rax)
 c08:	75 1a                	jne    c24 <_init-0x13dc>
 c0a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 c10:	ef                   	out    %eax,(%dx)
 c11:	01 00                	add    %eax,(%rax)
 c13:	00 00                	add    %al,(%rax)
 c15:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000c18 <.rela.dyn>:
 c18:	20 bc 00 00 00 00 00 	and    %bh,0x0(%rax,%rax,1)
 c1f:	00 08                	add    %cl,(%rax)
 c21:	00 00                	add    %al,(%rax)
 c23:	00 00                	add    %al,(%rax)
 c25:	00 00                	add    %al,(%rax)
 c27:	00 60 27             	add    %ah,0x27(%rax)
 c2a:	00 00                	add    %al,(%rax)
 c2c:	00 00                	add    %al,(%rax)
 c2e:	00 00                	add    %al,(%rax)
 c30:	28 bc 00 00 00 00 00 	sub    %bh,0x0(%rax,%rax,1)
 c37:	00 08                	add    %cl,(%rax)
 c39:	00 00                	add    %al,(%rax)
 c3b:	00 00                	add    %al,(%rax)
 c3d:	00 00                	add    %al,(%rax)
 c3f:	00 20                	add    %ah,(%rax)
 c41:	27                   	(bad)  
 c42:	00 00                	add    %al,(%rax)
 c44:	00 00                	add    %al,(%rax)
 c46:	00 00                	add    %al,(%rax)
 c48:	08 c0                	or     %al,%al
 c4a:	00 00                	add    %al,(%rax)
 c4c:	00 00                	add    %al,(%rax)
 c4e:	00 00                	add    %al,(%rax)
 c50:	08 00                	or     %al,(%rax)
 c52:	00 00                	add    %al,(%rax)
 c54:	00 00                	add    %al,(%rax)
 c56:	00 00                	add    %al,(%rax)
 c58:	08 c0                	or     %al,%al
 c5a:	00 00                	add    %al,(%rax)
 c5c:	00 00                	add    %al,(%rax)
 c5e:	00 00                	add    %al,(%rax)
 c60:	d8 bf 00 00 00 00    	fdivrs 0x0(%rdi)
 c66:	00 00                	add    %al,(%rax)
 c68:	06                   	(bad)  
 c69:	00 00                	add    %al,(%rax)
 c6b:	00 07                	add    %al,(%rdi)
	...
 c75:	00 00                	add    %al,(%rax)
 c77:	00 e0                	add    %ah,%al
 c79:	bf 00 00 00 00       	mov    $0x0,%edi
 c7e:	00 00                	add    %al,(%rax)
 c80:	06                   	(bad)  
 c81:	00 00                	add    %al,(%rax)
 c83:	00 1b                	add    %bl,(%rbx)
	...
 c8d:	00 00                	add    %al,(%rax)
 c8f:	00 e8                	add    %ch,%al
 c91:	bf 00 00 00 00       	mov    $0x0,%edi
 c96:	00 00                	add    %al,(%rax)
 c98:	06                   	(bad)  
 c99:	00 00                	add    %al,(%rax)
 c9b:	00 20                	add    %ah,(%rax)
	...
 ca5:	00 00                	add    %al,(%rax)
 ca7:	00 f0                	add    %dh,%al
 ca9:	bf 00 00 00 00       	mov    $0x0,%edi
 cae:	00 00                	add    %al,(%rax)
 cb0:	06                   	(bad)  
 cb1:	00 00                	add    %al,(%rax)
 cb3:	00 32                	add    %dh,(%rdx)
	...
 cbd:	00 00                	add    %al,(%rax)
 cbf:	00 f8                	add    %bh,%al
 cc1:	bf 00 00 00 00       	mov    $0x0,%edi
 cc6:	00 00                	add    %al,(%rax)
 cc8:	06                   	(bad)  
 cc9:	00 00                	add    %al,(%rax)
 ccb:	00 37                	add    %dh,(%rdi)
	...

Disassembly of section .rela.plt:

0000000000000cd8 <.rela.plt>:
     cd8:	48 be 00 00 00 00 00 	movabs $0x7000000000000,%rsi
     cdf:	00 07 00 
     ce2:	00 00                	add    %al,(%rax)
     ce4:	01 00                	add    %eax,(%rax)
	...
     cee:	00 00                	add    %al,(%rax)
     cf0:	50                   	push   %rax
     cf1:	be 00 00 00 00       	mov    $0x0,%esi
     cf6:	00 00                	add    %al,(%rax)
     cf8:	07                   	(bad)  
     cf9:	00 00                	add    %al,(%rax)
     cfb:	00 02                	add    %al,(%rdx)
	...
     d05:	00 00                	add    %al,(%rax)
     d07:	00 58 be             	add    %bl,-0x42(%rax)
     d0a:	00 00                	add    %al,(%rax)
     d0c:	00 00                	add    %al,(%rax)
     d0e:	00 00                	add    %al,(%rax)
     d10:	07                   	(bad)  
     d11:	00 00                	add    %al,(%rax)
     d13:	00 03                	add    %al,(%rbx)
	...
     d1d:	00 00                	add    %al,(%rax)
     d1f:	00 60 be             	add    %ah,-0x42(%rax)
     d22:	00 00                	add    %al,(%rax)
     d24:	00 00                	add    %al,(%rax)
     d26:	00 00                	add    %al,(%rax)
     d28:	07                   	(bad)  
     d29:	00 00                	add    %al,(%rax)
     d2b:	00 04 00             	add    %al,(%rax,%rax,1)
	...
     d36:	00 00                	add    %al,(%rax)
     d38:	68 be 00 00 00       	pushq  $0xbe
     d3d:	00 00                	add    %al,(%rax)
     d3f:	00 07                	add    %al,(%rdi)
     d41:	00 00                	add    %al,(%rax)
     d43:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # d49 <_init-0x12b7>
     d49:	00 00                	add    %al,(%rax)
     d4b:	00 00                	add    %al,(%rax)
     d4d:	00 00                	add    %al,(%rax)
     d4f:	00 70 be             	add    %dh,-0x42(%rax)
     d52:	00 00                	add    %al,(%rax)
     d54:	00 00                	add    %al,(%rax)
     d56:	00 00                	add    %al,(%rax)
     d58:	07                   	(bad)  
     d59:	00 00                	add    %al,(%rax)
     d5b:	00 06                	add    %al,(%rsi)
	...
     d65:	00 00                	add    %al,(%rax)
     d67:	00 78 be             	add    %bh,-0x42(%rax)
     d6a:	00 00                	add    %al,(%rax)
     d6c:	00 00                	add    %al,(%rax)
     d6e:	00 00                	add    %al,(%rax)
     d70:	07                   	(bad)  
     d71:	00 00                	add    %al,(%rax)
     d73:	00 08                	add    %cl,(%rax)
	...
     d7d:	00 00                	add    %al,(%rax)
     d7f:	00 80 be 00 00 00    	add    %al,0xbe(%rax)
     d85:	00 00                	add    %al,(%rax)
     d87:	00 07                	add    %al,(%rdi)
     d89:	00 00                	add    %al,(%rax)
     d8b:	00 09                	add    %cl,(%rcx)
	...
     d95:	00 00                	add    %al,(%rax)
     d97:	00 88 be 00 00 00    	add    %cl,0xbe(%rax)
     d9d:	00 00                	add    %al,(%rax)
     d9f:	00 07                	add    %al,(%rdi)
     da1:	00 00                	add    %al,(%rax)
     da3:	00 0a                	add    %cl,(%rdx)
	...
     dad:	00 00                	add    %al,(%rax)
     daf:	00 90 be 00 00 00    	add    %dl,0xbe(%rax)
     db5:	00 00                	add    %al,(%rax)
     db7:	00 07                	add    %al,(%rdi)
     db9:	00 00                	add    %al,(%rax)
     dbb:	00 0b                	add    %cl,(%rbx)
	...
     dc5:	00 00                	add    %al,(%rax)
     dc7:	00 98 be 00 00 00    	add    %bl,0xbe(%rax)
     dcd:	00 00                	add    %al,(%rax)
     dcf:	00 07                	add    %al,(%rdi)
     dd1:	00 00                	add    %al,(%rax)
     dd3:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
     dde:	00 00                	add    %al,(%rax)
     de0:	a0 be 00 00 00 00 00 	movabs 0x7000000000000be,%al
     de7:	00 07 
     de9:	00 00                	add    %al,(%rax)
     deb:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # df1 <_init-0x120f>
     df1:	00 00                	add    %al,(%rax)
     df3:	00 00                	add    %al,(%rax)
     df5:	00 00                	add    %al,(%rax)
     df7:	00 a8 be 00 00 00    	add    %ch,0xbe(%rax)
     dfd:	00 00                	add    %al,(%rax)
     dff:	00 07                	add    %al,(%rdi)
     e01:	00 00                	add    %al,(%rax)
     e03:	00 0e                	add    %cl,(%rsi)
	...
     e0d:	00 00                	add    %al,(%rax)
     e0f:	00 b0 be 00 00 00    	add    %dh,0xbe(%rax)
     e15:	00 00                	add    %al,(%rax)
     e17:	00 07                	add    %al,(%rdi)
     e19:	00 00                	add    %al,(%rax)
     e1b:	00 0f                	add    %cl,(%rdi)
	...
     e25:	00 00                	add    %al,(%rax)
     e27:	00 b8 be 00 00 00    	add    %bh,0xbe(%rax)
     e2d:	00 00                	add    %al,(%rax)
     e2f:	00 07                	add    %al,(%rdi)
     e31:	00 00                	add    %al,(%rax)
     e33:	00 10                	add    %dl,(%rax)
	...
     e3d:	00 00                	add    %al,(%rax)
     e3f:	00 c0                	add    %al,%al
     e41:	be 00 00 00 00       	mov    $0x0,%esi
     e46:	00 00                	add    %al,(%rax)
     e48:	07                   	(bad)  
     e49:	00 00                	add    %al,(%rax)
     e4b:	00 11                	add    %dl,(%rcx)
	...
     e55:	00 00                	add    %al,(%rax)
     e57:	00 c8                	add    %cl,%al
     e59:	be 00 00 00 00       	mov    $0x0,%esi
     e5e:	00 00                	add    %al,(%rax)
     e60:	07                   	(bad)  
     e61:	00 00                	add    %al,(%rax)
     e63:	00 12                	add    %dl,(%rdx)
	...
     e6d:	00 00                	add    %al,(%rax)
     e6f:	00 d0                	add    %dl,%al
     e71:	be 00 00 00 00       	mov    $0x0,%esi
     e76:	00 00                	add    %al,(%rax)
     e78:	07                   	(bad)  
     e79:	00 00                	add    %al,(%rax)
     e7b:	00 13                	add    %dl,(%rbx)
	...
     e85:	00 00                	add    %al,(%rax)
     e87:	00 d8                	add    %bl,%al
     e89:	be 00 00 00 00       	mov    $0x0,%esi
     e8e:	00 00                	add    %al,(%rax)
     e90:	07                   	(bad)  
     e91:	00 00                	add    %al,(%rax)
     e93:	00 14 00             	add    %dl,(%rax,%rax,1)
	...
     e9e:	00 00                	add    %al,(%rax)
     ea0:	e0 be                	loopne e60 <_init-0x11a0>
     ea2:	00 00                	add    %al,(%rax)
     ea4:	00 00                	add    %al,(%rax)
     ea6:	00 00                	add    %al,(%rax)
     ea8:	07                   	(bad)  
     ea9:	00 00                	add    %al,(%rax)
     eab:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # eb1 <_init-0x114f>
     eb1:	00 00                	add    %al,(%rax)
     eb3:	00 00                	add    %al,(%rax)
     eb5:	00 00                	add    %al,(%rax)
     eb7:	00 e8                	add    %ch,%al
     eb9:	be 00 00 00 00       	mov    $0x0,%esi
     ebe:	00 00                	add    %al,(%rax)
     ec0:	07                   	(bad)  
     ec1:	00 00                	add    %al,(%rax)
     ec3:	00 16                	add    %dl,(%rsi)
	...
     ecd:	00 00                	add    %al,(%rax)
     ecf:	00 f0                	add    %dh,%al
     ed1:	be 00 00 00 00       	mov    $0x0,%esi
     ed6:	00 00                	add    %al,(%rax)
     ed8:	07                   	(bad)  
     ed9:	00 00                	add    %al,(%rax)
     edb:	00 17                	add    %dl,(%rdi)
	...
     ee5:	00 00                	add    %al,(%rax)
     ee7:	00 f8                	add    %bh,%al
     ee9:	be 00 00 00 00       	mov    $0x0,%esi
     eee:	00 00                	add    %al,(%rax)
     ef0:	07                   	(bad)  
     ef1:	00 00                	add    %al,(%rax)
     ef3:	00 18                	add    %bl,(%rax)
	...
     f01:	bf 00 00 00 00       	mov    $0x0,%edi
     f06:	00 00                	add    %al,(%rax)
     f08:	07                   	(bad)  
     f09:	00 00                	add    %al,(%rax)
     f0b:	00 19                	add    %bl,(%rcx)
	...
     f15:	00 00                	add    %al,(%rax)
     f17:	00 08                	add    %cl,(%rax)
     f19:	bf 00 00 00 00       	mov    $0x0,%edi
     f1e:	00 00                	add    %al,(%rax)
     f20:	07                   	(bad)  
     f21:	00 00                	add    %al,(%rax)
     f23:	00 1a                	add    %bl,(%rdx)
	...
     f2d:	00 00                	add    %al,(%rax)
     f2f:	00 10                	add    %dl,(%rax)
     f31:	bf 00 00 00 00       	mov    $0x0,%edi
     f36:	00 00                	add    %al,(%rax)
     f38:	07                   	(bad)  
     f39:	00 00                	add    %al,(%rax)
     f3b:	00 1c 00             	add    %bl,(%rax,%rax,1)
	...
     f46:	00 00                	add    %al,(%rax)
     f48:	18 bf 00 00 00 00    	sbb    %bh,0x0(%rdi)
     f4e:	00 00                	add    %al,(%rax)
     f50:	07                   	(bad)  
     f51:	00 00                	add    %al,(%rax)
     f53:	00 1d 00 00 00 00    	add    %bl,0x0(%rip)        # f59 <_init-0x10a7>
     f59:	00 00                	add    %al,(%rax)
     f5b:	00 00                	add    %al,(%rax)
     f5d:	00 00                	add    %al,(%rax)
     f5f:	00 20                	add    %ah,(%rax)
     f61:	bf 00 00 00 00       	mov    $0x0,%edi
     f66:	00 00                	add    %al,(%rax)
     f68:	07                   	(bad)  
     f69:	00 00                	add    %al,(%rax)
     f6b:	00 1e                	add    %bl,(%rsi)
	...
     f75:	00 00                	add    %al,(%rax)
     f77:	00 28                	add    %ch,(%rax)
     f79:	bf 00 00 00 00       	mov    $0x0,%edi
     f7e:	00 00                	add    %al,(%rax)
     f80:	07                   	(bad)  
     f81:	00 00                	add    %al,(%rax)
     f83:	00 1f                	add    %bl,(%rdi)
	...
     f8d:	00 00                	add    %al,(%rax)
     f8f:	00 30                	add    %dh,(%rax)
     f91:	bf 00 00 00 00       	mov    $0x0,%edi
     f96:	00 00                	add    %al,(%rax)
     f98:	07                   	(bad)  
     f99:	00 00                	add    %al,(%rax)
     f9b:	00 21                	add    %ah,(%rcx)
	...
     fa5:	00 00                	add    %al,(%rax)
     fa7:	00 38                	add    %bh,(%rax)
     fa9:	bf 00 00 00 00       	mov    $0x0,%edi
     fae:	00 00                	add    %al,(%rax)
     fb0:	07                   	(bad)  
     fb1:	00 00                	add    %al,(%rax)
     fb3:	00 22                	add    %ah,(%rdx)
	...
     fbd:	00 00                	add    %al,(%rax)
     fbf:	00 40 bf             	add    %al,-0x41(%rax)
     fc2:	00 00                	add    %al,(%rax)
     fc4:	00 00                	add    %al,(%rax)
     fc6:	00 00                	add    %al,(%rax)
     fc8:	07                   	(bad)  
     fc9:	00 00                	add    %al,(%rax)
     fcb:	00 23                	add    %ah,(%rbx)
	...
     fd5:	00 00                	add    %al,(%rax)
     fd7:	00 48 bf             	add    %cl,-0x41(%rax)
     fda:	00 00                	add    %al,(%rax)
     fdc:	00 00                	add    %al,(%rax)
     fde:	00 00                	add    %al,(%rax)
     fe0:	07                   	(bad)  
     fe1:	00 00                	add    %al,(%rax)
     fe3:	00 24 00             	add    %ah,(%rax,%rax,1)
	...
     fee:	00 00                	add    %al,(%rax)
     ff0:	50                   	push   %rax
     ff1:	bf 00 00 00 00       	mov    $0x0,%edi
     ff6:	00 00                	add    %al,(%rax)
     ff8:	07                   	(bad)  
     ff9:	00 00                	add    %al,(%rax)
     ffb:	00 25 00 00 00 00    	add    %ah,0x0(%rip)        # 1001 <_init-0xfff>
    1001:	00 00                	add    %al,(%rax)
    1003:	00 00                	add    %al,(%rax)
    1005:	00 00                	add    %al,(%rax)
    1007:	00 58 bf             	add    %bl,-0x41(%rax)
    100a:	00 00                	add    %al,(%rax)
    100c:	00 00                	add    %al,(%rax)
    100e:	00 00                	add    %al,(%rax)
    1010:	07                   	(bad)  
    1011:	00 00                	add    %al,(%rax)
    1013:	00 26                	add    %ah,(%rsi)
	...
    101d:	00 00                	add    %al,(%rax)
    101f:	00 60 bf             	add    %ah,-0x41(%rax)
    1022:	00 00                	add    %al,(%rax)
    1024:	00 00                	add    %al,(%rax)
    1026:	00 00                	add    %al,(%rax)
    1028:	07                   	(bad)  
    1029:	00 00                	add    %al,(%rax)
    102b:	00 27                	add    %ah,(%rdi)
	...
    1035:	00 00                	add    %al,(%rax)
    1037:	00 68 bf             	add    %ch,-0x41(%rax)
    103a:	00 00                	add    %al,(%rax)
    103c:	00 00                	add    %al,(%rax)
    103e:	00 00                	add    %al,(%rax)
    1040:	07                   	(bad)  
    1041:	00 00                	add    %al,(%rax)
    1043:	00 28                	add    %ch,(%rax)
	...
    104d:	00 00                	add    %al,(%rax)
    104f:	00 70 bf             	add    %dh,-0x41(%rax)
    1052:	00 00                	add    %al,(%rax)
    1054:	00 00                	add    %al,(%rax)
    1056:	00 00                	add    %al,(%rax)
    1058:	07                   	(bad)  
    1059:	00 00                	add    %al,(%rax)
    105b:	00 29                	add    %ch,(%rcx)
	...
    1065:	00 00                	add    %al,(%rax)
    1067:	00 78 bf             	add    %bh,-0x41(%rax)
    106a:	00 00                	add    %al,(%rax)
    106c:	00 00                	add    %al,(%rax)
    106e:	00 00                	add    %al,(%rax)
    1070:	07                   	(bad)  
    1071:	00 00                	add    %al,(%rax)
    1073:	00 2a                	add    %ch,(%rdx)
	...
    107d:	00 00                	add    %al,(%rax)
    107f:	00 80 bf 00 00 00    	add    %al,0xbf(%rax)
    1085:	00 00                	add    %al,(%rax)
    1087:	00 07                	add    %al,(%rdi)
    1089:	00 00                	add    %al,(%rax)
    108b:	00 2b                	add    %ch,(%rbx)
	...
    1095:	00 00                	add    %al,(%rax)
    1097:	00 88 bf 00 00 00    	add    %cl,0xbf(%rax)
    109d:	00 00                	add    %al,(%rax)
    109f:	00 07                	add    %al,(%rdi)
    10a1:	00 00                	add    %al,(%rax)
    10a3:	00 2c 00             	add    %ch,(%rax,%rax,1)
	...
    10ae:	00 00                	add    %al,(%rax)
    10b0:	90                   	nop
    10b1:	bf 00 00 00 00       	mov    $0x0,%edi
    10b6:	00 00                	add    %al,(%rax)
    10b8:	07                   	(bad)  
    10b9:	00 00                	add    %al,(%rax)
    10bb:	00 2d 00 00 00 00    	add    %ch,0x0(%rip)        # 10c1 <_init-0xf3f>
    10c1:	00 00                	add    %al,(%rax)
    10c3:	00 00                	add    %al,(%rax)
    10c5:	00 00                	add    %al,(%rax)
    10c7:	00 98 bf 00 00 00    	add    %bl,0xbf(%rax)
    10cd:	00 00                	add    %al,(%rax)
    10cf:	00 07                	add    %al,(%rdi)
    10d1:	00 00                	add    %al,(%rax)
    10d3:	00 2e                	add    %ch,(%rsi)
	...
    10dd:	00 00                	add    %al,(%rax)
    10df:	00 a0 bf 00 00 00    	add    %ah,0xbf(%rax)
    10e5:	00 00                	add    %al,(%rax)
    10e7:	00 07                	add    %al,(%rdi)
    10e9:	00 00                	add    %al,(%rax)
    10eb:	00 2f                	add    %ch,(%rdi)
	...
    10f5:	00 00                	add    %al,(%rax)
    10f7:	00 a8 bf 00 00 00    	add    %ch,0xbf(%rax)
    10fd:	00 00                	add    %al,(%rax)
    10ff:	00 07                	add    %al,(%rdi)
    1101:	00 00                	add    %al,(%rax)
    1103:	00 30                	add    %dh,(%rax)
	...
    110d:	00 00                	add    %al,(%rax)
    110f:	00 b0 bf 00 00 00    	add    %dh,0xbf(%rax)
    1115:	00 00                	add    %al,(%rax)
    1117:	00 07                	add    %al,(%rdi)
    1119:	00 00                	add    %al,(%rax)
    111b:	00 31                	add    %dh,(%rcx)
	...
    1125:	00 00                	add    %al,(%rax)
    1127:	00 b8 bf 00 00 00    	add    %bh,0xbf(%rax)
    112d:	00 00                	add    %al,(%rax)
    112f:	00 07                	add    %al,(%rdi)
    1131:	00 00                	add    %al,(%rax)
    1133:	00 33                	add    %dh,(%rbx)
	...
    113d:	00 00                	add    %al,(%rax)
    113f:	00 c0                	add    %al,%al
    1141:	bf 00 00 00 00       	mov    $0x0,%edi
    1146:	00 00                	add    %al,(%rax)
    1148:	07                   	(bad)  
    1149:	00 00                	add    %al,(%rax)
    114b:	00 34 00             	add    %dh,(%rax,%rax,1)
	...
    1156:	00 00                	add    %al,(%rax)
    1158:	c8 bf 00 00          	enterq $0xbf,$0x0
    115c:	00 00                	add    %al,(%rax)
    115e:	00 00                	add    %al,(%rax)
    1160:	07                   	(bad)  
    1161:	00 00                	add    %al,(%rax)
    1163:	00 35 00 00 00 00    	add    %dh,0x0(%rip)        # 1169 <_init-0xe97>
    1169:	00 00                	add    %al,(%rax)
    116b:	00 00                	add    %al,(%rax)
    116d:	00 00                	add    %al,(%rax)
    116f:	00 d0                	add    %dl,%al
    1171:	bf 00 00 00 00       	mov    $0x0,%edi
    1176:	00 00                	add    %al,(%rax)
    1178:	07                   	(bad)  
    1179:	00 00                	add    %al,(%rax)
    117b:	00 36                	add    %dh,(%rsi)
	...

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    $0x8,%rsp
    2008:	48 8b 05 d9 9f 00 00 	mov    0x9fd9(%rip),%rax        # bfe8 <__gmon_start__>
    200f:	48 85 c0             	test   %rax,%rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	callq  *%rax
    2016:	48 83 c4 08          	add    $0x8,%rsp
    201a:	c3                   	retq   

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 12 9e 00 00    	pushq  0x9e12(%rip)        # be38 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 13 9e 00 00 	bnd jmpq *0x9e13(%rip)        # be40 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nopl   (%rax)
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	pushq  $0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmpq 2020 <.plt>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	pushq  $0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmpq 2020 <.plt>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	pushq  $0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmpq 2020 <.plt>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	pushq  $0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmpq 2020 <.plt>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	pushq  $0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmpq 2020 <.plt>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	pushq  $0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmpq 2020 <.plt>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	pushq  $0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmpq 2020 <.plt>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	pushq  $0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmpq 2020 <.plt>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	pushq  $0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmpq 2020 <.plt>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	pushq  $0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmpq 2020 <.plt>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	pushq  $0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmpq 2020 <.plt>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	pushq  $0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmpq 2020 <.plt>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	pushq  $0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmpq 2020 <.plt>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	pushq  $0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmpq 2020 <.plt>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	pushq  $0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmpq 2020 <.plt>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	pushq  $0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmpq 2020 <.plt>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	pushq  $0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmpq 2020 <.plt>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	pushq  $0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmpq 2020 <.plt>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	pushq  $0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmpq 2020 <.plt>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	pushq  $0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmpq 2020 <.plt>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	pushq  $0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmpq 2020 <.plt>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	pushq  $0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmpq 2020 <.plt>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	pushq  $0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmpq 2020 <.plt>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	pushq  $0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmpq 2020 <.plt>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	pushq  $0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmpq 2020 <.plt>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	pushq  $0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmpq 2020 <.plt>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	pushq  $0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmpq 2020 <.plt>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	pushq  $0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmpq 2020 <.plt>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	pushq  $0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmpq 2020 <.plt>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	pushq  $0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmpq 2020 <.plt>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	pushq  $0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmpq 2020 <.plt>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	pushq  $0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmpq 2020 <.plt>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	pushq  $0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmpq 2020 <.plt>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	pushq  $0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmpq 2020 <.plt>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	pushq  $0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmpq 2020 <.plt>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	pushq  $0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmpq 2020 <.plt>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	pushq  $0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmpq 2020 <.plt>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	pushq  $0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmpq 2020 <.plt>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	pushq  $0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmpq 2020 <.plt>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	pushq  $0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmpq 2020 <.plt>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	pushq  $0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmpq 2020 <.plt>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	pushq  $0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmpq 2020 <.plt>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	pushq  $0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmpq 2020 <.plt>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	pushq  $0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmpq 2020 <.plt>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	pushq  $0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmpq 2020 <.plt>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	pushq  $0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmpq 2020 <.plt>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	pushq  $0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmpq 2020 <.plt>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	pushq  $0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmpq 2020 <.plt>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	pushq  $0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmpq 2020 <.plt>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	pushq  $0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmpq 2020 <.plt>
    234f:	90                   	nop

Disassembly of section .plt.got:

0000000000002350 <__cxa_finalize@plt>:
    2350:	f3 0f 1e fa          	endbr64 
    2354:	f2 ff 25 9d 9c 00 00 	bnd jmpq *0x9c9d(%rip)        # bff8 <__cxa_finalize@GLIBC_2.2.5>
    235b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000002360 <free@plt>:
    2360:	f3 0f 1e fa          	endbr64 
    2364:	f2 ff 25 dd 9a 00 00 	bnd jmpq *0x9add(%rip)        # be48 <free@GLIBC_2.2.5>
    236b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002370 <putchar@plt>:
    2370:	f3 0f 1e fa          	endbr64 
    2374:	f2 ff 25 d5 9a 00 00 	bnd jmpq *0x9ad5(%rip)        # be50 <putchar@GLIBC_2.2.5>
    237b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002380 <pthread_create@plt>:
    2380:	f3 0f 1e fa          	endbr64 
    2384:	f2 ff 25 cd 9a 00 00 	bnd jmpq *0x9acd(%rip)        # be58 <pthread_create@GLIBC_2.2.5>
    238b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002390 <__errno_location@plt>:
    2390:	f3 0f 1e fa          	endbr64 
    2394:	f2 ff 25 c5 9a 00 00 	bnd jmpq *0x9ac5(%rip)        # be60 <__errno_location@GLIBC_2.2.5>
    239b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023a0 <strncpy@plt>:
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	f2 ff 25 bd 9a 00 00 	bnd jmpq *0x9abd(%rip)        # be68 <strncpy@GLIBC_2.2.5>
    23ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023b0 <strncmp@plt>:
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	f2 ff 25 b5 9a 00 00 	bnd jmpq *0x9ab5(%rip)        # be70 <strncmp@GLIBC_2.2.5>
    23bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023c0 <strcpy@plt>:
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	f2 ff 25 ad 9a 00 00 	bnd jmpq *0x9aad(%rip)        # be78 <strcpy@GLIBC_2.2.5>
    23cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023d0 <__isoc99_fscanf@plt>:
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	f2 ff 25 a5 9a 00 00 	bnd jmpq *0x9aa5(%rip)        # be80 <__isoc99_fscanf@GLIBC_2.7>
    23db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023e0 <puts@plt>:
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	f2 ff 25 9d 9a 00 00 	bnd jmpq *0x9a9d(%rip)        # be88 <puts@GLIBC_2.2.5>
    23eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023f0 <fread@plt>:
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	f2 ff 25 95 9a 00 00 	bnd jmpq *0x9a95(%rip)        # be90 <fread@GLIBC_2.2.5>
    23fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002400 <setsockopt@plt>:
    2400:	f3 0f 1e fa          	endbr64 
    2404:	f2 ff 25 8d 9a 00 00 	bnd jmpq *0x9a8d(%rip)        # be98 <setsockopt@GLIBC_2.2.5>
    240b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002410 <getpid@plt>:
    2410:	f3 0f 1e fa          	endbr64 
    2414:	f2 ff 25 85 9a 00 00 	bnd jmpq *0x9a85(%rip)        # bea0 <getpid@GLIBC_2.2.5>
    241b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002420 <fclose@plt>:
    2420:	f3 0f 1e fa          	endbr64 
    2424:	f2 ff 25 7d 9a 00 00 	bnd jmpq *0x9a7d(%rip)        # bea8 <fclose@GLIBC_2.2.5>
    242b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002430 <strlen@plt>:
    2430:	f3 0f 1e fa          	endbr64 
    2434:	f2 ff 25 75 9a 00 00 	bnd jmpq *0x9a75(%rip)        # beb0 <strlen@GLIBC_2.2.5>
    243b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002440 <__stack_chk_fail@plt>:
    2440:	f3 0f 1e fa          	endbr64 
    2444:	f2 ff 25 6d 9a 00 00 	bnd jmpq *0x9a6d(%rip)        # beb8 <__stack_chk_fail@GLIBC_2.4>
    244b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002450 <mmap@plt>:
    2450:	f3 0f 1e fa          	endbr64 
    2454:	f2 ff 25 65 9a 00 00 	bnd jmpq *0x9a65(%rip)        # bec0 <mmap@GLIBC_2.2.5>
    245b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002460 <system@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 5d 9a 00 00 	bnd jmpq *0x9a5d(%rip)        # bec8 <system@GLIBC_2.2.5>
    246b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002470 <htons@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 55 9a 00 00 	bnd jmpq *0x9a55(%rip)        # bed0 <htons@GLIBC_2.2.5>
    247b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002480 <printf@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 4d 9a 00 00 	bnd jmpq *0x9a4d(%rip)        # bed8 <printf@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002490 <gettimeofday@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 45 9a 00 00 	bnd jmpq *0x9a45(%rip)        # bee0 <gettimeofday@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024a0 <htonl@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 3d 9a 00 00 	bnd jmpq *0x9a3d(%rip)        # bee8 <htonl@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024b0 <memset@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 35 9a 00 00 	bnd jmpq *0x9a35(%rip)        # bef0 <memset@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024c0 <ioctl@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 2d 9a 00 00 	bnd jmpq *0x9a2d(%rip)        # bef8 <ioctl@GLIBC_2.2.5>
    24cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024d0 <close@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 25 9a 00 00 	bnd jmpq *0x9a25(%rip)        # bf00 <close@GLIBC_2.2.5>
    24db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024e0 <read@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 1d 9a 00 00 	bnd jmpq *0x9a1d(%rip)        # bf08 <read@GLIBC_2.2.5>
    24eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024f0 <calloc@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 15 9a 00 00 	bnd jmpq *0x9a15(%rip)        # bf10 <calloc@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002500 <strcmp@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 0d 9a 00 00 	bnd jmpq *0x9a0d(%rip)        # bf18 <strcmp@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002510 <signal@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 05 9a 00 00 	bnd jmpq *0x9a05(%rip)        # bf20 <signal@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002520 <sem_wait@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 fd 99 00 00 	bnd jmpq *0x99fd(%rip)        # bf28 <sem_wait@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002530 <memcpy@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 f5 99 00 00 	bnd jmpq *0x99f5(%rip)        # bf30 <memcpy@GLIBC_2.14>
    253b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002540 <fileno@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 ed 99 00 00 	bnd jmpq *0x99ed(%rip)        # bf38 <fileno@GLIBC_2.2.5>
    254b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002550 <malloc@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 e5 99 00 00 	bnd jmpq *0x99e5(%rip)        # bf40 <malloc@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002560 <__isoc99_sscanf@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 dd 99 00 00 	bnd jmpq *0x99dd(%rip)        # bf48 <__isoc99_sscanf@GLIBC_2.7>
    256b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002570 <__fxstat@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 d5 99 00 00 	bnd jmpq *0x99d5(%rip)        # bf50 <__fxstat@GLIBC_2.2.5>
    257b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002580 <listen@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 cd 99 00 00 	bnd jmpq *0x99cd(%rip)        # bf58 <listen@GLIBC_2.2.5>
    258b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002590 <fseek@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 c5 99 00 00 	bnd jmpq *0x99c5(%rip)        # bf60 <fseek@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025a0 <sem_post@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 bd 99 00 00 	bnd jmpq *0x99bd(%rip)        # bf68 <sem_post@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025b0 <recvmsg@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 b5 99 00 00 	bnd jmpq *0x99b5(%rip)        # bf70 <recvmsg@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025c0 <bind@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 ad 99 00 00 	bnd jmpq *0x99ad(%rip)        # bf78 <bind@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025d0 <sem_init@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 a5 99 00 00 	bnd jmpq *0x99a5(%rip)        # bf80 <sem_init@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025e0 <open@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 9d 99 00 00 	bnd jmpq *0x999d(%rip)        # bf88 <open@GLIBC_2.2.5>
    25eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025f0 <fopen@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 95 99 00 00 	bnd jmpq *0x9995(%rip)        # bf90 <fopen@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002600 <pthread_join@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 8d 99 00 00 	bnd jmpq *0x998d(%rip)        # bf98 <pthread_join@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002610 <accept@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 85 99 00 00 	bnd jmpq *0x9985(%rip)        # bfa0 <accept@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002620 <exit@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 7d 99 00 00 	bnd jmpq *0x997d(%rip)        # bfa8 <exit@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002630 <eventfd@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 75 99 00 00 	bnd jmpq *0x9975(%rip)        # bfb0 <eventfd@GLIBC_2.7>
    263b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002640 <strerror@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 6d 99 00 00 	bnd jmpq *0x996d(%rip)        # bfb8 <strerror@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002650 <wait@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 65 99 00 00 	bnd jmpq *0x9965(%rip)        # bfc0 <wait@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002660 <fork@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 5d 99 00 00 	bnd jmpq *0x995d(%rip)        # bfc8 <fork@GLIBC_2.2.5>
    266b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002670 <socket@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 55 99 00 00 	bnd jmpq *0x9955(%rip)        # bfd0 <socket@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000002680 <_start>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	31 ed                	xor    %ebp,%ebp
    2686:	49 89 d1             	mov    %rdx,%r9
    2689:	5e                   	pop    %rsi
    268a:	48 89 e2             	mov    %rsp,%rdx
    268d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    2691:	50                   	push   %rax
    2692:	54                   	push   %rsp
    2693:	4c 8d 05 b6 51 00 00 	lea    0x51b6(%rip),%r8        # 7850 <__libc_csu_fini>
    269a:	48 8d 0d 3f 51 00 00 	lea    0x513f(%rip),%rcx        # 77e0 <__libc_csu_init>
    26a1:	48 8d 3d dd 00 00 00 	lea    0xdd(%rip),%rdi        # 2785 <main>
    26a8:	ff 15 32 99 00 00    	callq  *0x9932(%rip)        # bfe0 <__libc_start_main@GLIBC_2.2.5>
    26ae:	f4                   	hlt    
    26af:	90                   	nop

00000000000026b0 <deregister_tm_clones>:
    26b0:	48 8d 3d d9 99 00 00 	lea    0x99d9(%rip),%rdi        # c090 <__TMC_END__>
    26b7:	48 8d 05 d2 99 00 00 	lea    0x99d2(%rip),%rax        # c090 <__TMC_END__>
    26be:	48 39 f8             	cmp    %rdi,%rax
    26c1:	74 15                	je     26d8 <deregister_tm_clones+0x28>
    26c3:	48 8b 05 0e 99 00 00 	mov    0x990e(%rip),%rax        # bfd8 <_ITM_deregisterTMCloneTable>
    26ca:	48 85 c0             	test   %rax,%rax
    26cd:	74 09                	je     26d8 <deregister_tm_clones+0x28>
    26cf:	ff e0                	jmpq   *%rax
    26d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    26d8:	c3                   	retq   
    26d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000026e0 <register_tm_clones>:
    26e0:	48 8d 3d a9 99 00 00 	lea    0x99a9(%rip),%rdi        # c090 <__TMC_END__>
    26e7:	48 8d 35 a2 99 00 00 	lea    0x99a2(%rip),%rsi        # c090 <__TMC_END__>
    26ee:	48 29 fe             	sub    %rdi,%rsi
    26f1:	48 89 f0             	mov    %rsi,%rax
    26f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    26f8:	48 c1 f8 03          	sar    $0x3,%rax
    26fc:	48 01 c6             	add    %rax,%rsi
    26ff:	48 d1 fe             	sar    %rsi
    2702:	74 14                	je     2718 <register_tm_clones+0x38>
    2704:	48 8b 05 e5 98 00 00 	mov    0x98e5(%rip),%rax        # bff0 <_ITM_registerTMCloneTable>
    270b:	48 85 c0             	test   %rax,%rax
    270e:	74 08                	je     2718 <register_tm_clones+0x38>
    2710:	ff e0                	jmpq   *%rax
    2712:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2718:	c3                   	retq   
    2719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002720 <__do_global_dtors_aux>:
    2720:	f3 0f 1e fa          	endbr64 
    2724:	80 3d 75 99 00 00 00 	cmpb   $0x0,0x9975(%rip)        # c0a0 <completed.8061>
    272b:	75 2b                	jne    2758 <__do_global_dtors_aux+0x38>
    272d:	55                   	push   %rbp
    272e:	48 83 3d c2 98 00 00 	cmpq   $0x0,0x98c2(%rip)        # bff8 <__cxa_finalize@GLIBC_2.2.5>
    2735:	00 
    2736:	48 89 e5             	mov    %rsp,%rbp
    2739:	74 0c                	je     2747 <__do_global_dtors_aux+0x27>
    273b:	48 8b 3d c6 98 00 00 	mov    0x98c6(%rip),%rdi        # c008 <__dso_handle>
    2742:	e8 09 fc ff ff       	callq  2350 <__cxa_finalize@plt>
    2747:	e8 64 ff ff ff       	callq  26b0 <deregister_tm_clones>
    274c:	c6 05 4d 99 00 00 01 	movb   $0x1,0x994d(%rip)        # c0a0 <completed.8061>
    2753:	5d                   	pop    %rbp
    2754:	c3                   	retq   
    2755:	0f 1f 00             	nopl   (%rax)
    2758:	c3                   	retq   
    2759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002760 <frame_dummy>:
    2760:	f3 0f 1e fa          	endbr64 
    2764:	e9 77 ff ff ff       	jmpq   26e0 <register_tm_clones>

0000000000002769 <tsc>:
    2769:	55                   	push   %rbp
    276a:	48 89 e5             	mov    %rsp,%rbp
    276d:	0f 01 f9             	rdtscp 
    2770:	89 45 f8             	mov    %eax,-0x8(%rbp)
    2773:	89 55 fc             	mov    %edx,-0x4(%rbp)
    2776:	8b 45 f8             	mov    -0x8(%rbp),%eax
    2779:	8b 55 fc             	mov    -0x4(%rbp),%edx
    277c:	48 c1 e2 20          	shl    $0x20,%rdx
    2780:	48 09 d0             	or     %rdx,%rax
    2783:	5d                   	pop    %rbp
    2784:	c3                   	retq   

0000000000002785 <main>:
    2785:	f3 0f 1e fa          	endbr64 
    2789:	55                   	push   %rbp
    278a:	48 89 e5             	mov    %rsp,%rbp
    278d:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    2794:	89 bd 2c ff ff ff    	mov    %edi,-0xd4(%rbp)
    279a:	48 89 b5 20 ff ff ff 	mov    %rsi,-0xe0(%rbp)
    27a1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    27a8:	00 00 
    27aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    27ae:	31 c0                	xor    %eax,%eax
    27b0:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
    27b7:	00 00 00 
    27ba:	c7 85 40 ff ff ff 04 	movl   $0x2704,-0xc0(%rbp)
    27c1:	27 00 00 
    27c4:	c7 85 44 ff ff ff 04 	movl   $0x4,-0xbc(%rbp)
    27cb:	00 00 00 
    27ce:	8b 85 2c ff ff ff    	mov    -0xd4(%rbp),%eax
    27d4:	83 f8 01             	cmp    $0x1,%eax
    27d7:	76 39                	jbe    2812 <main+0x8d>
    27d9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    27e0:	48 83 c0 08          	add    $0x8,%rax
    27e4:	48 8b 00             	mov    (%rax),%rax
    27e7:	48 8d 35 32 58 00 00 	lea    0x5832(%rip),%rsi        # 8020 <_IO_stdin_used+0x20>
    27ee:	48 89 c7             	mov    %rax,%rdi
    27f1:	e8 0a fd ff ff       	callq  2500 <strcmp@plt>
    27f6:	85 c0                	test   %eax,%eax
    27f8:	75 1b                	jne    2815 <main+0x90>
    27fa:	48 8d 3d 26 58 00 00 	lea    0x5826(%rip),%rdi        # 8027 <_IO_stdin_used+0x27>
    2801:	e8 da fb ff ff       	callq  23e0 <puts@plt>
    2806:	c7 85 3c ff ff ff 01 	movl   $0x1,-0xc4(%rbp)
    280d:	00 00 00 
    2810:	eb 03                	jmp    2815 <main+0x90>
    2812:	90                   	nop
    2813:	eb 01                	jmp    2816 <main+0x91>
    2815:	90                   	nop
    2816:	83 bd 3c ff ff ff 01 	cmpl   $0x1,-0xc4(%rbp)
    281d:	75 5f                	jne    287e <main+0xf9>
    281f:	be 00 00 00 00       	mov    $0x0,%esi
    2824:	48 8d 3d e5 98 00 00 	lea    0x98e5(%rip),%rdi        # c110 <t1>
    282b:	e8 60 fc ff ff       	callq  2490 <gettimeofday@plt>
    2830:	e8 2b fe ff ff       	callq  2660 <fork@plt>
    2835:	85 c0                	test   %eax,%eax
    2837:	74 45                	je     287e <main+0xf9>
    2839:	48 8d 85 34 ff ff ff 	lea    -0xcc(%rbp),%rax
    2840:	48 89 c7             	mov    %rax,%rdi
    2843:	e8 08 fe ff ff       	callq  2650 <wait@plt>
    2848:	48 8b 05 c1 98 00 00 	mov    0x98c1(%rip),%rax        # c110 <t1>
    284f:	48 69 d0 40 42 0f 00 	imul   $0xf4240,%rax,%rdx
    2856:	48 8b 05 bb 98 00 00 	mov    0x98bb(%rip),%rax        # c118 <t1+0x8>
    285d:	48 01 d0             	add    %rdx,%rax
    2860:	48 89 c6             	mov    %rax,%rsi
    2863:	48 8d 3d da 57 00 00 	lea    0x57da(%rip),%rdi        # 8044 <_IO_stdin_used+0x44>
    286a:	b8 00 00 00 00       	mov    $0x0,%eax
    286f:	e8 0c fc ff ff       	callq  2480 <printf@plt>
    2874:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    2879:	e8 a2 fd ff ff       	callq  2620 <exit@plt>
    287e:	48 8d 3d fb 98 00 00 	lea    0x98fb(%rip),%rdi        # c180 <vm>
    2885:	e8 06 1d 00 00       	callq  4590 <setup_bootcode_mmap>
    288a:	48 8d 3d ef 98 00 00 	lea    0x98ef(%rip),%rdi        # c180 <vm>
    2891:	e8 79 26 00 00       	callq  4f0f <setup_usercode_mmap>
    2896:	ba 00 00 00 00       	mov    $0x0,%edx
    289b:	be 01 00 00 00       	mov    $0x1,%esi
    28a0:	bf 02 00 00 00       	mov    $0x2,%edi
    28a5:	e8 c6 fd ff ff       	callq  2670 <socket@plt>
    28aa:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    28b0:	83 bd 48 ff ff ff ff 	cmpl   $0xffffffff,-0xb8(%rbp)
    28b7:	75 42                	jne    28fb <main+0x176>
    28b9:	e8 d2 fa ff ff       	callq  2390 <__errno_location@plt>
    28be:	8b 00                	mov    (%rax),%eax
    28c0:	89 c7                	mov    %eax,%edi
    28c2:	e8 79 fd ff ff       	callq  2640 <strerror@plt>
    28c7:	48 89 c2             	mov    %rax,%rdx
    28ca:	be b9 00 00 00       	mov    $0xb9,%esi
    28cf:	48 8d 3d 7b 57 00 00 	lea    0x577b(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    28d6:	b8 00 00 00 00       	mov    $0x0,%eax
    28db:	e8 a0 fb ff ff       	callq  2480 <printf@plt>
    28e0:	48 8d 3d 75 57 00 00 	lea    0x5775(%rip),%rdi        # 805c <_IO_stdin_used+0x5c>
    28e7:	b8 00 00 00 00       	mov    $0x0,%eax
    28ec:	e8 8f fb ff ff       	callq  2480 <printf@plt>
    28f1:	bf 01 00 00 00       	mov    $0x1,%edi
    28f6:	e8 25 fd ff ff       	callq  2620 <exit@plt>
    28fb:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    2902:	00 00 00 
    2905:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    290c:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    2912:	41 b8 04 00 00 00    	mov    $0x4,%r8d
    2918:	48 89 d1             	mov    %rdx,%rcx
    291b:	ba 02 00 00 00       	mov    $0x2,%edx
    2920:	be 01 00 00 00       	mov    $0x1,%esi
    2925:	89 c7                	mov    %eax,%edi
    2927:	e8 d4 fa ff ff       	callq  2400 <setsockopt@plt>
    292c:	66 c7 85 50 ff ff ff 	movw   $0x2,-0xb0(%rbp)
    2933:	02 00 
    2935:	bf 00 00 00 00       	mov    $0x0,%edi
    293a:	e8 61 fb ff ff       	callq  24a0 <htonl@plt>
    293f:	89 85 54 ff ff ff    	mov    %eax,-0xac(%rbp)
    2945:	8b 85 40 ff ff ff    	mov    -0xc0(%rbp),%eax
    294b:	0f b7 c0             	movzwl %ax,%eax
    294e:	89 c7                	mov    %eax,%edi
    2950:	e8 1b fb ff ff       	callq  2470 <htons@plt>
    2955:	66 89 85 52 ff ff ff 	mov    %ax,-0xae(%rbp)
    295c:	48 8d 8d 50 ff ff ff 	lea    -0xb0(%rbp),%rcx
    2963:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    2969:	ba 10 00 00 00       	mov    $0x10,%edx
    296e:	48 89 ce             	mov    %rcx,%rsi
    2971:	89 c7                	mov    %eax,%edi
    2973:	e8 48 fc ff ff       	callq  25c0 <bind@plt>
    2978:	85 c0                	test   %eax,%eax
    297a:	74 3d                	je     29b9 <main+0x234>
    297c:	e8 0f fa ff ff       	callq  2390 <__errno_location@plt>
    2981:	8b 00                	mov    (%rax),%eax
    2983:	89 c7                	mov    %eax,%edi
    2985:	e8 b6 fc ff ff       	callq  2640 <strerror@plt>
    298a:	48 89 c2             	mov    %rax,%rdx
    298d:	be c2 00 00 00       	mov    $0xc2,%esi
    2992:	48 8d 3d b8 56 00 00 	lea    0x56b8(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    2999:	b8 00 00 00 00       	mov    $0x0,%eax
    299e:	e8 dd fa ff ff       	callq  2480 <printf@plt>
    29a3:	48 8d 3d c9 56 00 00 	lea    0x56c9(%rip),%rdi        # 8073 <_IO_stdin_used+0x73>
    29aa:	e8 31 fa ff ff       	callq  23e0 <puts@plt>
    29af:	bf 01 00 00 00       	mov    $0x1,%edi
    29b4:	e8 67 fc ff ff       	callq  2620 <exit@plt>
    29b9:	8b 95 44 ff ff ff    	mov    -0xbc(%rbp),%edx
    29bf:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    29c5:	89 d6                	mov    %edx,%esi
    29c7:	89 c7                	mov    %eax,%edi
    29c9:	e8 b2 fb ff ff       	callq  2580 <listen@plt>
    29ce:	85 c0                	test   %eax,%eax
    29d0:	74 3d                	je     2a0f <main+0x28a>
    29d2:	e8 b9 f9 ff ff       	callq  2390 <__errno_location@plt>
    29d7:	8b 00                	mov    (%rax),%eax
    29d9:	89 c7                	mov    %eax,%edi
    29db:	e8 60 fc ff ff       	callq  2640 <strerror@plt>
    29e0:	48 89 c2             	mov    %rax,%rdx
    29e3:	be c5 00 00 00       	mov    $0xc5,%esi
    29e8:	48 8d 3d 62 56 00 00 	lea    0x5662(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    29ef:	b8 00 00 00 00       	mov    $0x0,%eax
    29f4:	e8 87 fa ff ff       	callq  2480 <printf@plt>
    29f9:	48 8d 3d 8d 56 00 00 	lea    0x568d(%rip),%rdi        # 808d <_IO_stdin_used+0x8d>
    2a00:	e8 db f9 ff ff       	callq  23e0 <puts@plt>
    2a05:	bf 01 00 00 00       	mov    $0x1,%edi
    2a0a:	e8 11 fc ff ff       	callq  2620 <exit@plt>
    2a0f:	90                   	nop
    2a10:	48 8d 95 34 ff ff ff 	lea    -0xcc(%rbp),%rdx
    2a17:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
    2a1e:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    2a24:	48 89 ce             	mov    %rcx,%rsi
    2a27:	89 c7                	mov    %eax,%edi
    2a29:	e8 e2 fb ff ff       	callq  2610 <accept@plt>
    2a2e:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
    2a34:	c7 85 34 ff ff ff 64 	movl   $0x64,-0xcc(%rbp)
    2a3b:	00 00 00 
    2a3e:	90                   	nop
    2a3f:	8b 85 34 ff ff ff    	mov    -0xcc(%rbp),%eax
    2a45:	48 63 d0             	movslq %eax,%rdx
    2a48:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    2a4f:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax
    2a55:	48 89 ce             	mov    %rcx,%rsi
    2a58:	89 c7                	mov    %eax,%edi
    2a5a:	e8 81 fa ff ff       	callq  24e0 <read@plt>
    2a5f:	48 85 c0             	test   %rax,%rax
    2a62:	7e db                	jle    2a3f <main+0x2ba>
    2a64:	be 00 00 00 00       	mov    $0x0,%esi
    2a69:	48 8d 3d a0 96 00 00 	lea    0x96a0(%rip),%rdi        # c110 <t1>
    2a70:	e8 1b fa ff ff       	callq  2490 <gettimeofday@plt>
    2a75:	e8 e6 fb ff ff       	callq  2660 <fork@plt>
    2a7a:	85 c0                	test   %eax,%eax
    2a7c:	74 02                	je     2a80 <main+0x2fb>
    2a7e:	eb 90                	jmp    2a10 <main+0x28b>
    2a80:	e8 8b f9 ff ff       	callq  2410 <getpid@plt>
    2a85:	89 05 f5 96 00 00    	mov    %eax,0x96f5(%rip)        # c180 <vm>
    2a8b:	8b 05 ef 96 00 00    	mov    0x96ef(%rip),%eax        # c180 <vm>
    2a91:	89 c6                	mov    %eax,%esi
    2a93:	48 8d 3d 01 56 00 00 	lea    0x5601(%rip),%rdi        # 809b <_IO_stdin_used+0x9b>
    2a9a:	b8 00 00 00 00       	mov    $0x0,%eax
    2a9f:	e8 dc f9 ff ff       	callq  2480 <printf@plt>
    2aa4:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    2aaa:	89 c7                	mov    %eax,%edi
    2aac:	e8 1f fa ff ff       	callq  24d0 <close@plt>
    2ab1:	48 8d 3d c8 96 00 00 	lea    0x96c8(%rip),%rdi        # c180 <vm>
    2ab8:	e8 fd 08 00 00       	callq  33ba <get_vm>
    2abd:	48 8d 3d bc 96 00 00 	lea    0x96bc(%rip),%rdi        # c180 <vm>
    2ac4:	e8 d3 0c 00 00       	callq  379c <register_kmem>
    2ac9:	c7 05 b5 96 00 00 01 	movl   $0x1,0x96b5(%rip)        # c188 <vm+0x8>
    2ad0:	00 00 00 
    2ad3:	48 8d 3d a6 96 00 00 	lea    0x96a6(%rip),%rdi        # c180 <vm>
    2ada:	e8 76 13 00 00       	callq  3e55 <setup_vcpus>
    2adf:	48 8d 3d 9a 96 00 00 	lea    0x969a(%rip),%rdi        # c180 <vm>
    2ae6:	e8 4b 29 00 00       	callq  5436 <register_umem_mmap>
    2aeb:	48 8d 3d 4e 96 00 00 	lea    0x964e(%rip),%rdi        # c140 <sem_usercode_loaded>
    2af2:	e8 a9 fa ff ff       	callq  25a0 <sem_post@plt>
    2af7:	48 8d 3d 82 96 00 00 	lea    0x9682(%rip),%rdi        # c180 <vm>
    2afe:	e8 e9 2e 00 00       	callq  59ec <setup_device_loop>
    2b03:	b8 00 00 00 00       	mov    $0x0,%eax
    2b08:	e8 77 37 00 00       	callq  6284 <install_signal_handlers>
    2b0d:	c7 85 38 ff ff ff 00 	movl   $0x0,-0xc8(%rbp)
    2b14:	00 00 00 
    2b17:	eb 31                	jmp    2b4a <main+0x3c5>
    2b19:	48 8b 15 70 96 00 00 	mov    0x9670(%rip),%rdx        # c190 <vm+0x10>
    2b20:	8b 85 38 ff ff ff    	mov    -0xc8(%rbp),%eax
    2b26:	48 98                	cltq   
    2b28:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    2b2f:	48 01 d0             	add    %rdx,%rax
    2b32:	48 8b 40 08          	mov    0x8(%rax),%rax
    2b36:	be 00 00 00 00       	mov    $0x0,%esi
    2b3b:	48 89 c7             	mov    %rax,%rdi
    2b3e:	e8 bd fa ff ff       	callq  2600 <pthread_join@plt>
    2b43:	83 85 38 ff ff ff 01 	addl   $0x1,-0xc8(%rbp)
    2b4a:	8b 05 38 96 00 00    	mov    0x9638(%rip),%eax        # c188 <vm+0x8>
    2b50:	39 85 38 ff ff ff    	cmp    %eax,-0xc8(%rbp)
    2b56:	7c c1                	jl     2b19 <main+0x394>
    2b58:	48 8d 3d 46 55 00 00 	lea    0x5546(%rip),%rdi        # 80a5 <_IO_stdin_used+0xa5>
    2b5f:	e8 7c f8 ff ff       	callq  23e0 <puts@plt>
    2b64:	b8 00 00 00 00       	mov    $0x0,%eax
    2b69:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    2b6d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2b74:	00 00 
    2b76:	74 05                	je     2b7d <main+0x3f8>
    2b78:	e8 c3 f8 ff ff       	callq  2440 <__stack_chk_fail@plt>
    2b7d:	c9                   	leaveq 
    2b7e:	c3                   	retq   

0000000000002b7f <decode_msg>:
    2b7f:	f3 0f 1e fa          	endbr64 
    2b83:	55                   	push   %rbp
    2b84:	48 89 e5             	mov    %rsp,%rbp
    2b87:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    2b8e:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    2b95:	89 f0                	mov    %esi,%eax
    2b97:	66 89 85 64 ff ff ff 	mov    %ax,-0x9c(%rbp)
    2b9e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2ba5:	00 00 
    2ba7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    2bab:	31 c0                	xor    %eax,%eax
    2bad:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)
    2bb4:	00 00 00 
    2bb7:	0f b7 85 64 ff ff ff 	movzwl -0x9c(%rbp),%eax
    2bbe:	83 f8 03             	cmp    $0x3,%eax
    2bc1:	0f 84 84 00 00 00    	je     2c4b <decode_msg+0xcc>
    2bc7:	83 f8 03             	cmp    $0x3,%eax
    2bca:	0f 8f 9d 03 00 00    	jg     2f6d <decode_msg+0x3ee>
    2bd0:	83 f8 01             	cmp    $0x1,%eax
    2bd3:	74 0a                	je     2bdf <decode_msg+0x60>
    2bd5:	83 f8 02             	cmp    $0x2,%eax
    2bd8:	74 54                	je     2c2e <decode_msg+0xaf>
    2bda:	e9 8e 03 00 00       	jmpq   2f6d <decode_msg+0x3ee>
    2bdf:	c7 85 74 ff ff ff 01 	movl   $0x1,-0x8c(%rbp)
    2be6:	00 00 00 
    2be9:	eb 28                	jmp    2c13 <decode_msg+0x94>
    2beb:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    2bf1:	48 98                	cltq   
    2bf3:	48 c1 e0 05          	shl    $0x5,%rax
    2bf7:	48 89 c2             	mov    %rax,%rdx
    2bfa:	48 8d 05 bf 9d 00 00 	lea    0x9dbf(%rip),%rax        # c9c0 <sem_vcpu_init>
    2c01:	48 01 d0             	add    %rdx,%rax
    2c04:	48 89 c7             	mov    %rax,%rdi
    2c07:	e8 94 f9 ff ff       	callq  25a0 <sem_post@plt>
    2c0c:	83 85 74 ff ff ff 01 	addl   $0x1,-0x8c(%rbp)
    2c13:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    2c1a:	0f b6 40 05          	movzbl 0x5(%rax),%eax
    2c1e:	0f b6 c0             	movzbl %al,%eax
    2c21:	39 85 74 ff ff ff    	cmp    %eax,-0x8c(%rbp)
    2c27:	7c c2                	jl     2beb <decode_msg+0x6c>
    2c29:	e9 82 03 00 00       	jmpq   2fb0 <decode_msg+0x431>
    2c2e:	48 8d 3d 2b 95 00 00 	lea    0x952b(%rip),%rdi        # c160 <sem_booted>
    2c35:	e8 66 f9 ff ff       	callq  25a0 <sem_post@plt>
    2c3a:	48 8d 3d ff 94 00 00 	lea    0x94ff(%rip),%rdi        # c140 <sem_usercode_loaded>
    2c41:	e8 da f8 ff ff       	callq  2520 <sem_wait@plt>
    2c46:	e9 65 03 00 00       	jmpq   2fb0 <decode_msg+0x431>
    2c4b:	8b 05 53 94 00 00    	mov    0x9453(%rip),%eax        # c0a4 <pktcnt>
    2c51:	85 c0                	test   %eax,%eax
    2c53:	75 52                	jne    2ca7 <decode_msg+0x128>
    2c55:	48 8d 3d 64 54 00 00 	lea    0x5464(%rip),%rdi        # 80c0 <_IO_stdin_used+0xc0>
    2c5c:	e8 7f f7 ff ff       	callq  23e0 <puts@plt>
    2c61:	48 8d 3d 90 54 00 00 	lea    0x5490(%rip),%rdi        # 80f8 <_IO_stdin_used+0xf8>
    2c68:	e8 f3 f7 ff ff       	callq  2460 <system@plt>
    2c6d:	48 8d 3d d4 54 00 00 	lea    0x54d4(%rip),%rdi        # 8148 <_IO_stdin_used+0x148>
    2c74:	e8 67 f7 ff ff       	callq  23e0 <puts@plt>
    2c79:	48 8d 3d d0 54 00 00 	lea    0x54d0(%rip),%rdi        # 8150 <_IO_stdin_used+0x150>
    2c80:	e8 db f7 ff ff       	callq  2460 <system@plt>
    2c85:	b8 00 00 00 00       	mov    $0x0,%eax
    2c8a:	e8 da fa ff ff       	callq  2769 <tsc>
    2c8f:	48 89 05 a2 9c 00 00 	mov    %rax,0x9ca2(%rip)        # c938 <tsc_t1>
    2c96:	be 00 00 00 00       	mov    $0x0,%esi
    2c9b:	48 8d 3d 6e 94 00 00 	lea    0x946e(%rip),%rdi        # c110 <t1>
    2ca2:	e8 e9 f7 ff ff       	callq  2490 <gettimeofday@plt>
    2ca7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    2cae:	48 8b 80 78 02 00 00 	mov    0x278(%rax),%rax
    2cb5:	48 8b 00             	mov    (%rax),%rax
    2cb8:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    2cbe:	c7 85 7c ff ff ff 00 	movl   $0x100000,-0x84(%rbp)
    2cc5:	00 10 00 
    2cc8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    2ccf:	48 8b 80 78 02 00 00 	mov    0x278(%rax),%rax
    2cd6:	48 8b 00             	mov    (%rax),%rax
    2cd9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    2cdd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    2ce1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    2ce8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    2cec:	48 83 c0 28          	add    $0x28,%rax
    2cf0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    2cf4:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    2cfa:	48 98                	cltq   
    2cfc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2d00:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    2d07:	48 8b 80 a0 02 00 00 	mov    0x2a0(%rax),%rax
    2d0e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    2d12:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    2d19:	48 8b 80 90 02 00 00 	mov    0x290(%rax),%rax
    2d20:	8b 00                	mov    (%rax),%eax
    2d22:	89 45 98             	mov    %eax,-0x68(%rbp)
    2d25:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2d29:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    2d2d:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
    2d34:	00 
    2d35:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    2d3c:	00 
    2d3d:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    2d44:	00 
    2d45:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
    2d4c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    2d53:	48 8b 80 88 02 00 00 	mov    0x288(%rax),%rax
    2d5a:	8b 00                	mov    (%rax),%eax
    2d5c:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    2d60:	ba 00 00 00 00       	mov    $0x0,%edx
    2d65:	48 89 ce             	mov    %rcx,%rsi
    2d68:	89 c7                	mov    %eax,%edi
    2d6a:	e8 41 f8 ff ff       	callq  25b0 <recvmsg@plt>
    2d6f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)
    2d75:	83 bd 7c ff ff ff 00 	cmpl   $0x0,-0x84(%rbp)
    2d7c:	7f 19                	jg     2d97 <decode_msg+0x218>
    2d7e:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    2d84:	89 c6                	mov    %eax,%esi
    2d86:	48 8d 3d 07 54 00 00 	lea    0x5407(%rip),%rdi        # 8194 <_IO_stdin_used+0x194>
    2d8d:	b8 00 00 00 00       	mov    $0x0,%eax
    2d92:	e8 e9 f6 ff ff       	callq  2480 <printf@plt>
    2d97:	8b 05 07 93 00 00    	mov    0x9307(%rip),%eax        # c0a4 <pktcnt>
    2d9d:	83 c0 01             	add    $0x1,%eax
    2da0:	89 05 fe 92 00 00    	mov    %eax,0x92fe(%rip)        # c0a4 <pktcnt>
    2da6:	8b 05 f8 92 00 00    	mov    0x92f8(%rip),%eax        # c0a4 <pktcnt>
    2dac:	3d 3f 42 0f 00       	cmp    $0xf423f,%eax
    2db1:	0f 8e f8 01 00 00    	jle    2faf <decode_msg+0x430>
    2db7:	be 00 00 00 00       	mov    $0x0,%esi
    2dbc:	48 8d 3d 7d 9b 00 00 	lea    0x9b7d(%rip),%rdi        # c940 <t2>
    2dc3:	e8 c8 f6 ff ff       	callq  2490 <gettimeofday@plt>
    2dc8:	b8 00 00 00 00       	mov    $0x0,%eax
    2dcd:	e8 97 f9 ff ff       	callq  2769 <tsc>
    2dd2:	48 89 05 27 93 00 00 	mov    %rax,0x9327(%rip)        # c100 <tsc_t2>
    2dd9:	48 8b 15 60 9b 00 00 	mov    0x9b60(%rip),%rdx        # c940 <t2>
    2de0:	48 8b 05 29 93 00 00 	mov    0x9329(%rip),%rax        # c110 <t1>
    2de7:	48 29 c2             	sub    %rax,%rdx
    2dea:	48 89 d0             	mov    %rdx,%rax
    2ded:	48 69 c0 40 42 0f 00 	imul   $0xf4240,%rax,%rax
    2df4:	48 8b 0d 4d 9b 00 00 	mov    0x9b4d(%rip),%rcx        # c948 <t2+0x8>
    2dfb:	48 8b 15 16 93 00 00 	mov    0x9316(%rip),%rdx        # c118 <t1+0x8>
    2e02:	48 29 d1             	sub    %rdx,%rcx
    2e05:	48 89 ca             	mov    %rcx,%rdx
    2e08:	48 01 d0             	add    %rdx,%rax
    2e0b:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    2e10:	48 8b 15 e9 92 00 00 	mov    0x92e9(%rip),%rdx        # c100 <tsc_t2>
    2e17:	48 8b 05 1a 9b 00 00 	mov    0x9b1a(%rip),%rax        # c938 <tsc_t1>
    2e1e:	48 29 c2             	sub    %rax,%rdx
    2e21:	48 89 d0             	mov    %rdx,%rax
    2e24:	48 85 c0             	test   %rax,%rax
    2e27:	78 07                	js     2e30 <decode_msg+0x2b1>
    2e29:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    2e2e:	eb 15                	jmp    2e45 <decode_msg+0x2c6>
    2e30:	48 89 c2             	mov    %rax,%rdx
    2e33:	48 d1 ea             	shr    %rdx
    2e36:	83 e0 01             	and    $0x1,%eax
    2e39:	48 09 c2             	or     %rax,%rdx
    2e3c:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    2e41:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    2e45:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    2e49:	66 0f 28 c1          	movapd %xmm1,%xmm0
    2e4d:	f2 0f 11 05 4b 9b 00 	movsd  %xmm0,0x9b4b(%rip)        # c9a0 <tsc2ts>
    2e54:	00 
    2e55:	48 8b 15 e4 9a 00 00 	mov    0x9ae4(%rip),%rdx        # c940 <t2>
    2e5c:	48 8b 05 ad 92 00 00 	mov    0x92ad(%rip),%rax        # c110 <t1>
    2e63:	48 29 c2             	sub    %rax,%rdx
    2e66:	48 89 d0             	mov    %rdx,%rax
    2e69:	48 69 c0 40 42 0f 00 	imul   $0xf4240,%rax,%rax
    2e70:	48 8b 0d d1 9a 00 00 	mov    0x9ad1(%rip),%rcx        # c948 <t2+0x8>
    2e77:	48 8b 15 9a 92 00 00 	mov    0x929a(%rip),%rdx        # c118 <t1+0x8>
    2e7e:	48 29 d1             	sub    %rdx,%rcx
    2e81:	48 89 ca             	mov    %rcx,%rdx
    2e84:	48 01 d0             	add    %rdx,%rax
    2e87:	48 89 c6             	mov    %rax,%rsi
    2e8a:	48 8d 3d 12 53 00 00 	lea    0x5312(%rip),%rdi        # 81a3 <_IO_stdin_used+0x1a3>
    2e91:	b8 00 00 00 00       	mov    $0x0,%eax
    2e96:	e8 e5 f5 ff ff       	callq  2480 <printf@plt>
    2e9b:	48 8b 15 5e 92 00 00 	mov    0x925e(%rip),%rdx        # c100 <tsc_t2>
    2ea2:	48 8b 05 8f 9a 00 00 	mov    0x9a8f(%rip),%rax        # c938 <tsc_t1>
    2ea9:	48 89 d1             	mov    %rdx,%rcx
    2eac:	48 29 c1             	sub    %rax,%rcx
    2eaf:	48 8b 15 4a 92 00 00 	mov    0x924a(%rip),%rdx        # c100 <tsc_t2>
    2eb6:	48 8b 35 7b 9a 00 00 	mov    0x9a7b(%rip),%rsi        # c938 <tsc_t1>
    2ebd:	48 8b 05 dc 9a 00 00 	mov    0x9adc(%rip),%rax        # c9a0 <tsc2ts>
    2ec4:	66 48 0f 6e c0       	movq   %rax,%xmm0
    2ec9:	48 8d 3d e0 52 00 00 	lea    0x52e0(%rip),%rdi        # 81b0 <_IO_stdin_used+0x1b0>
    2ed0:	b8 01 00 00 00       	mov    $0x1,%eax
    2ed5:	e8 a6 f5 ff ff       	callq  2480 <printf@plt>
    2eda:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
    2ee1:	00 00 00 
    2ee4:	eb 74                	jmp    2f5a <decode_msg+0x3db>
    2ee6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    2eed:	48 8b 80 78 02 00 00 	mov    0x278(%rax),%rax
    2ef4:	48 8b 00             	mov    (%rax),%rax
    2ef7:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    2efb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    2eff:	8b 95 74 ff ff ff    	mov    -0x8c(%rbp),%edx
    2f05:	48 63 d2             	movslq %edx,%rdx
    2f08:	48 8b 44 d0 08       	mov    0x8(%rax,%rdx,8),%rax
    2f0d:	48 85 c0             	test   %rax,%rax
    2f10:	78 07                	js     2f19 <decode_msg+0x39a>
    2f12:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    2f17:	eb 15                	jmp    2f2e <decode_msg+0x3af>
    2f19:	48 89 c2             	mov    %rax,%rdx
    2f1c:	48 d1 ea             	shr    %rdx
    2f1f:	83 e0 01             	and    $0x1,%eax
    2f22:	48 09 c2             	or     %rax,%rdx
    2f25:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    2f2a:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    2f2e:	f2 0f 10 0d 6a 9a 00 	movsd  0x9a6a(%rip),%xmm1        # c9a0 <tsc2ts>
    2f35:	00 
    2f36:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    2f3a:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    2f40:	89 c6                	mov    %eax,%esi
    2f42:	48 8d 3d 99 52 00 00 	lea    0x5299(%rip),%rdi        # 81e2 <_IO_stdin_used+0x1e2>
    2f49:	b8 01 00 00 00       	mov    $0x1,%eax
    2f4e:	e8 2d f5 ff ff       	callq  2480 <printf@plt>
    2f53:	83 85 74 ff ff ff 01 	addl   $0x1,-0x8c(%rbp)
    2f5a:	83 bd 74 ff ff ff 02 	cmpl   $0x2,-0x8c(%rbp)
    2f61:	7e 83                	jle    2ee6 <decode_msg+0x367>
    2f63:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    2f68:	e8 b3 f6 ff ff       	callq  2620 <exit@plt>
    2f6d:	e8 1e f4 ff ff       	callq  2390 <__errno_location@plt>
    2f72:	8b 00                	mov    (%rax),%eax
    2f74:	89 c7                	mov    %eax,%edi
    2f76:	e8 c5 f6 ff ff       	callq  2640 <strerror@plt>
    2f7b:	48 89 c2             	mov    %rax,%rdx
    2f7e:	be 4b 01 00 00       	mov    $0x14b,%esi
    2f83:	48 8d 3d c7 50 00 00 	lea    0x50c7(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    2f8a:	b8 00 00 00 00       	mov    $0x0,%eax
    2f8f:	e8 ec f4 ff ff       	callq  2480 <printf@plt>
    2f94:	48 8d 3d 57 52 00 00 	lea    0x5257(%rip),%rdi        # 81f2 <_IO_stdin_used+0x1f2>
    2f9b:	b8 00 00 00 00       	mov    $0x0,%eax
    2fa0:	e8 db f4 ff ff       	callq  2480 <printf@plt>
    2fa5:	bf 01 00 00 00       	mov    $0x1,%edi
    2faa:	e8 71 f6 ff ff       	callq  2620 <exit@plt>
    2faf:	90                   	nop
    2fb0:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    2fb6:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    2fba:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    2fc1:	00 00 
    2fc3:	74 05                	je     2fca <decode_msg+0x44b>
    2fc5:	e8 76 f4 ff ff       	callq  2440 <__stack_chk_fail@plt>
    2fca:	c9                   	leaveq 
    2fcb:	c3                   	retq   

0000000000002fcc <handle_io_port>:
    2fcc:	55                   	push   %rbp
    2fcd:	48 89 e5             	mov    %rsp,%rbp
    2fd0:	48 83 ec 20          	sub    $0x20,%rsp
    2fd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2fd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2fdc:	48 8b 40 10          	mov    0x10(%rax),%rax
    2fe0:	0f b7 40 22          	movzwl 0x22(%rax),%eax
    2fe4:	0f b7 c0             	movzwl %ax,%eax
    2fe7:	2d f8 03 00 00       	sub    $0x3f8,%eax
    2fec:	83 f8 06             	cmp    $0x6,%eax
    2fef:	0f 87 9c 02 00 00    	ja     3291 <handle_io_port+0x2c5>
    2ff5:	89 c0                	mov    %eax,%eax
    2ff7:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    2ffe:	00 
    2fff:	48 8d 05 62 52 00 00 	lea    0x5262(%rip),%rax        # 8268 <_IO_stdin_used+0x268>
    3006:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    3009:	48 98                	cltq   
    300b:	48 8d 15 56 52 00 00 	lea    0x5256(%rip),%rdx        # 8268 <_IO_stdin_used+0x268>
    3012:	48 01 d0             	add    %rdx,%rax
    3015:	3e ff e0             	notrack jmpq *%rax
    3018:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    301c:	48 8b 40 10          	mov    0x10(%rax),%rax
    3020:	0f b6 40 20          	movzbl 0x20(%rax),%eax
    3024:	3c 01                	cmp    $0x1,%al
    3026:	0f 85 c4 02 00 00    	jne    32f0 <handle_io_port+0x324>
    302c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3030:	48 8b 40 10          	mov    0x10(%rax),%rax
    3034:	0f b6 40 21          	movzbl 0x21(%rax),%eax
    3038:	3c 01                	cmp    $0x1,%al
    303a:	0f 85 b0 02 00 00    	jne    32f0 <handle_io_port+0x324>
    3040:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3044:	48 8b 40 10          	mov    0x10(%rax),%rax
    3048:	8b 40 24             	mov    0x24(%rax),%eax
    304b:	83 f8 01             	cmp    $0x1,%eax
    304e:	0f 85 9c 02 00 00    	jne    32f0 <handle_io_port+0x324>
    3054:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3058:	48 8b 50 10          	mov    0x10(%rax),%rdx
    305c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3060:	48 8b 40 10          	mov    0x10(%rax),%rax
    3064:	48 8b 40 28          	mov    0x28(%rax),%rax
    3068:	48 01 d0             	add    %rdx,%rax
    306b:	0f b6 00             	movzbl (%rax),%eax
    306e:	88 45 f9             	mov    %al,-0x7(%rbp)
    3071:	0f be 45 f9          	movsbl -0x7(%rbp),%eax
    3075:	89 c7                	mov    %eax,%edi
    3077:	e8 f4 f2 ff ff       	callq  2370 <putchar@plt>
    307c:	e9 6f 02 00 00       	jmpq   32f0 <handle_io_port+0x324>
    3081:	48 8d 3d d8 98 00 00 	lea    0x98d8(%rip),%rdi        # c960 <vcpu_init_barrier>
    3088:	e8 93 f4 ff ff       	callq  2520 <sem_wait@plt>
    308d:	e9 65 02 00 00       	jmpq   32f7 <handle_io_port+0x32b>
    3092:	b8 00 00 00 00       	mov    $0x0,%eax
    3097:	e8 cd f6 ff ff       	callq  2769 <tsc>
    309c:	48 89 05 5d 90 00 00 	mov    %rax,0x905d(%rip)        # c100 <tsc_t2>
    30a3:	be 00 00 00 00       	mov    $0x0,%esi
    30a8:	48 8d 3d 91 98 00 00 	lea    0x9891(%rip),%rdi        # c940 <t2>
    30af:	e8 dc f3 ff ff       	callq  2490 <gettimeofday@plt>
    30b4:	48 8b 15 45 90 00 00 	mov    0x9045(%rip),%rdx        # c100 <tsc_t2>
    30bb:	48 8b 05 76 98 00 00 	mov    0x9876(%rip),%rax        # c938 <tsc_t1>
    30c2:	48 29 c2             	sub    %rax,%rdx
    30c5:	48 89 d0             	mov    %rdx,%rax
    30c8:	48 ba e7 19 4d 80 b3 	movabs $0x4d19e6b3804d19e7,%rdx
    30cf:	e6 19 4d 
    30d2:	48 f7 e2             	mul    %rdx
    30d5:	48 c1 ea 0a          	shr    $0xa,%rdx
    30d9:	48 8b 0d 60 98 00 00 	mov    0x9860(%rip),%rcx        # c940 <t2>
    30e0:	48 8b 05 29 90 00 00 	mov    0x9029(%rip),%rax        # c110 <t1>
    30e7:	48 29 c1             	sub    %rax,%rcx
    30ea:	48 89 c8             	mov    %rcx,%rax
    30ed:	48 69 c0 40 42 0f 00 	imul   $0xf4240,%rax,%rax
    30f4:	48 8b 35 4d 98 00 00 	mov    0x984d(%rip),%rsi        # c948 <t2+0x8>
    30fb:	48 8b 0d 16 90 00 00 	mov    0x9016(%rip),%rcx        # c118 <t1+0x8>
    3102:	48 29 ce             	sub    %rcx,%rsi
    3105:	48 89 f1             	mov    %rsi,%rcx
    3108:	48 01 c8             	add    %rcx,%rax
    310b:	48 89 c6             	mov    %rax,%rsi
    310e:	48 8d 3d f8 50 00 00 	lea    0x50f8(%rip),%rdi        # 820d <_IO_stdin_used+0x20d>
    3115:	b8 00 00 00 00       	mov    $0x0,%eax
    311a:	e8 61 f3 ff ff       	callq  2480 <printf@plt>
    311f:	48 8d 3d 03 51 00 00 	lea    0x5103(%rip),%rdi        # 8229 <_IO_stdin_used+0x229>
    3126:	e8 b5 f2 ff ff       	callq  23e0 <puts@plt>
    312b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    312f:	48 89 c7             	mov    %rax,%rdi
    3132:	e8 89 2b 00 00       	callq  5cc0 <print_regs>
    3137:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    313c:	e8 df f4 ff ff       	callq  2620 <exit@plt>
    3141:	48 8d 3d ee 50 00 00 	lea    0x50ee(%rip),%rdi        # 8236 <_IO_stdin_used+0x236>
    3148:	e8 93 f2 ff ff       	callq  23e0 <puts@plt>
    314d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3151:	48 89 c7             	mov    %rax,%rdi
    3154:	e8 67 2b 00 00       	callq  5cc0 <print_regs>
    3159:	e9 99 01 00 00       	jmpq   32f7 <handle_io_port+0x32b>
    315e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3162:	48 8b 40 10          	mov    0x10(%rax),%rax
    3166:	0f b6 40 20          	movzbl 0x20(%rax),%eax
    316a:	84 c0                	test   %al,%al
    316c:	75 68                	jne    31d6 <handle_io_port+0x20a>
    316e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3172:	48 8b 40 10          	mov    0x10(%rax),%rax
    3176:	0f b6 40 21          	movzbl 0x21(%rax),%eax
    317a:	3c 02                	cmp    $0x2,%al
    317c:	0f 85 71 01 00 00    	jne    32f3 <handle_io_port+0x327>
    3182:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3186:	48 8b 40 10          	mov    0x10(%rax),%rax
    318a:	8b 40 24             	mov    0x24(%rax),%eax
    318d:	83 f8 01             	cmp    $0x1,%eax
    3190:	0f 85 5d 01 00 00    	jne    32f3 <handle_io_port+0x327>
    3196:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    319a:	0f b6 40 05          	movzbl 0x5(%rax),%eax
    319e:	0f b6 c0             	movzbl %al,%eax
    31a1:	c1 e0 08             	shl    $0x8,%eax
    31a4:	89 c2                	mov    %eax,%edx
    31a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    31aa:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    31ae:	0f b6 c0             	movzbl %al,%eax
    31b1:	89 d1                	mov    %edx,%ecx
    31b3:	09 c1                	or     %eax,%ecx
    31b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    31b9:	48 8b 50 10          	mov    0x10(%rax),%rdx
    31bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    31c1:	48 8b 40 10          	mov    0x10(%rax),%rax
    31c5:	48 8b 40 28          	mov    0x28(%rax),%rax
    31c9:	48 01 d0             	add    %rdx,%rax
    31cc:	89 ca                	mov    %ecx,%edx
    31ce:	66 89 10             	mov    %dx,(%rax)
    31d1:	e9 1d 01 00 00       	jmpq   32f3 <handle_io_port+0x327>
    31d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    31da:	48 8b 40 10          	mov    0x10(%rax),%rax
    31de:	0f b6 40 21          	movzbl 0x21(%rax),%eax
    31e2:	3c 01                	cmp    $0x1,%al
    31e4:	0f 85 09 01 00 00    	jne    32f3 <handle_io_port+0x327>
    31ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    31ee:	48 8b 40 10          	mov    0x10(%rax),%rax
    31f2:	8b 40 24             	mov    0x24(%rax),%eax
    31f5:	83 f8 01             	cmp    $0x1,%eax
    31f8:	0f 85 f5 00 00 00    	jne    32f3 <handle_io_port+0x327>
    31fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3202:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    320a:	48 8b 40 10          	mov    0x10(%rax),%rax
    320e:	48 8b 40 28          	mov    0x28(%rax),%rax
    3212:	48 01 d0             	add    %rdx,%rax
    3215:	0f b6 00             	movzbl (%rax),%eax
    3218:	88 45 f8             	mov    %al,-0x8(%rbp)
    321b:	e9 d3 00 00 00       	jmpq   32f3 <handle_io_port+0x327>
    3220:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3224:	48 8b 40 10          	mov    0x10(%rax),%rax
    3228:	0f b6 40 20          	movzbl 0x20(%rax),%eax
    322c:	3c 01                	cmp    $0x1,%al
    322e:	0f 85 c2 00 00 00    	jne    32f6 <handle_io_port+0x32a>
    3234:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3238:	48 8b 40 10          	mov    0x10(%rax),%rax
    323c:	0f b6 40 21          	movzbl 0x21(%rax),%eax
    3240:	3c 02                	cmp    $0x2,%al
    3242:	0f 85 ae 00 00 00    	jne    32f6 <handle_io_port+0x32a>
    3248:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    324c:	48 8b 40 10          	mov    0x10(%rax),%rax
    3250:	8b 40 24             	mov    0x24(%rax),%eax
    3253:	83 f8 01             	cmp    $0x1,%eax
    3256:	0f 85 9a 00 00 00    	jne    32f6 <handle_io_port+0x32a>
    325c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3260:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3264:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3268:	48 8b 40 10          	mov    0x10(%rax),%rax
    326c:	48 8b 40 28          	mov    0x28(%rax),%rax
    3270:	48 01 d0             	add    %rdx,%rax
    3273:	0f b7 00             	movzwl (%rax),%eax
    3276:	66 89 45 fa          	mov    %ax,-0x6(%rbp)
    327a:	0f b7 55 fa          	movzwl -0x6(%rbp),%edx
    327e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3282:	89 d6                	mov    %edx,%esi
    3284:	48 89 c7             	mov    %rax,%rdi
    3287:	e8 f3 f8 ff ff       	callq  2b7f <decode_msg>
    328c:	89 45 fc             	mov    %eax,-0x4(%rbp)
    328f:	eb 65                	jmp    32f6 <handle_io_port+0x32a>
    3291:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3295:	48 89 c7             	mov    %rax,%rdi
    3298:	e8 23 2a 00 00       	callq  5cc0 <print_regs>
    329d:	e8 ee f0 ff ff       	callq  2390 <__errno_location@plt>
    32a2:	8b 00                	mov    (%rax),%eax
    32a4:	89 c7                	mov    %eax,%edi
    32a6:	e8 95 f3 ff ff       	callq  2640 <strerror@plt>
    32ab:	48 89 c2             	mov    %rax,%rdx
    32ae:	be 8b 01 00 00       	mov    $0x18b,%esi
    32b3:	48 8d 3d 97 4d 00 00 	lea    0x4d97(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    32ba:	b8 00 00 00 00       	mov    $0x0,%eax
    32bf:	e8 bc f1 ff ff       	callq  2480 <printf@plt>
    32c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    32c8:	48 8b 40 10          	mov    0x10(%rax),%rax
    32cc:	0f b7 40 22          	movzwl 0x22(%rax),%eax
    32d0:	0f b7 c0             	movzwl %ax,%eax
    32d3:	89 c6                	mov    %eax,%esi
    32d5:	48 8d 3d 6e 4f 00 00 	lea    0x4f6e(%rip),%rdi        # 824a <_IO_stdin_used+0x24a>
    32dc:	b8 00 00 00 00       	mov    $0x0,%eax
    32e1:	e8 9a f1 ff ff       	callq  2480 <printf@plt>
    32e6:	bf 01 00 00 00       	mov    $0x1,%edi
    32eb:	e8 30 f3 ff ff       	callq  2620 <exit@plt>
    32f0:	90                   	nop
    32f1:	eb 04                	jmp    32f7 <handle_io_port+0x32b>
    32f3:	90                   	nop
    32f4:	eb 01                	jmp    32f7 <handle_io_port+0x32b>
    32f6:	90                   	nop
    32f7:	b8 00 00 00 00       	mov    $0x0,%eax
    32fc:	c9                   	leaveq 
    32fd:	c3                   	retq   

00000000000032fe <setup_guest_phy2_host_virt_map>:
    32fe:	f3 0f 1e fa          	endbr64 
    3302:	55                   	push   %rbp
    3303:	48 89 e5             	mov    %rsp,%rbp
    3306:	48 83 ec 20          	sub    $0x20,%rsp
    330a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    330e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    3315:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3319:	c7 40 58 00 00 40 00 	movl   $0x400000,0x58(%rax)
    3320:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3324:	8b 40 58             	mov    0x58(%rax),%eax
    3327:	89 c0                	mov    %eax,%eax
    3329:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    332f:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    3335:	b9 22 00 00 00       	mov    $0x22,%ecx
    333a:	ba 03 00 00 00       	mov    $0x3,%edx
    333f:	48 89 c6             	mov    %rax,%rsi
    3342:	bf 00 00 00 00       	mov    $0x0,%edi
    3347:	e8 04 f1 ff ff       	callq  2450 <mmap@plt>
    334c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3350:	48 89 42 50          	mov    %rax,0x50(%rdx)
    3354:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3358:	48 8b 40 50          	mov    0x50(%rax),%rax
    335c:	48 85 c0             	test   %rax,%rax
    335f:	75 3d                	jne    339e <setup_guest_phy2_host_virt_map+0xa0>
    3361:	e8 2a f0 ff ff       	callq  2390 <__errno_location@plt>
    3366:	8b 00                	mov    (%rax),%eax
    3368:	89 c7                	mov    %eax,%edi
    336a:	e8 d1 f2 ff ff       	callq  2640 <strerror@plt>
    336f:	48 89 c2             	mov    %rax,%rdx
    3372:	be 9c 01 00 00       	mov    $0x19c,%esi
    3377:	48 8d 3d d3 4c 00 00 	lea    0x4cd3(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    337e:	b8 00 00 00 00       	mov    $0x0,%eax
    3383:	e8 f8 f0 ff ff       	callq  2480 <printf@plt>
    3388:	48 8d 3d f5 4e 00 00 	lea    0x4ef5(%rip),%rdi        # 8284 <_IO_stdin_used+0x284>
    338f:	e8 4c f0 ff ff       	callq  23e0 <puts@plt>
    3394:	bf 01 00 00 00       	mov    $0x1,%edi
    3399:	e8 82 f2 ff ff       	callq  2620 <exit@plt>
    339e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    33a2:	48 8b 40 50          	mov    0x50(%rax),%rax
    33a6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    33aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    33ae:	48 89 90 b0 07 00 00 	mov    %rdx,0x7b0(%rax)
    33b5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    33b8:	c9                   	leaveq 
    33b9:	c3                   	retq   

00000000000033ba <get_vm>:
    33ba:	f3 0f 1e fa          	endbr64 
    33be:	55                   	push   %rbp
    33bf:	48 89 e5             	mov    %rsp,%rbp
    33c2:	48 83 ec 20          	sub    $0x20,%rsp
    33c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    33ca:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    33d1:	be 02 00 08 00       	mov    $0x80002,%esi
    33d6:	48 8d 3d b1 4e 00 00 	lea    0x4eb1(%rip),%rdi        # 828e <_IO_stdin_used+0x28e>
    33dd:	b8 00 00 00 00       	mov    $0x0,%eax
    33e2:	e8 f9 f1 ff ff       	callq  25e0 <open@plt>
    33e7:	89 45 f4             	mov    %eax,-0xc(%rbp)
    33ea:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%rbp)
    33ee:	75 16                	jne    3406 <get_vm+0x4c>
    33f0:	48 8d 3d a0 4e 00 00 	lea    0x4ea0(%rip),%rdi        # 8297 <_IO_stdin_used+0x297>
    33f7:	e8 e4 ef ff ff       	callq  23e0 <puts@plt>
    33fc:	bf 01 00 00 00       	mov    $0x1,%edi
    3401:	e8 1a f2 ff ff       	callq  2620 <exit@plt>
    3406:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3409:	ba 00 00 00 00       	mov    $0x0,%edx
    340e:	be 00 ae 00 00       	mov    $0xae00,%esi
    3413:	89 c7                	mov    %eax,%edi
    3415:	b8 00 00 00 00       	mov    $0x0,%eax
    341a:	e8 a1 f0 ff ff       	callq  24c0 <ioctl@plt>
    341f:	89 45 f8             	mov    %eax,-0x8(%rbp)
    3422:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%rbp)
    3426:	75 3d                	jne    3465 <get_vm+0xab>
    3428:	e8 63 ef ff ff       	callq  2390 <__errno_location@plt>
    342d:	8b 00                	mov    (%rax),%eax
    342f:	89 c7                	mov    %eax,%edi
    3431:	e8 0a f2 ff ff       	callq  2640 <strerror@plt>
    3436:	48 89 c2             	mov    %rax,%rdx
    3439:	be c4 01 00 00       	mov    $0x1c4,%esi
    343e:	48 8d 3d 0c 4c 00 00 	lea    0x4c0c(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3445:	b8 00 00 00 00       	mov    $0x0,%eax
    344a:	e8 31 f0 ff ff       	callq  2480 <printf@plt>
    344f:	48 8d 3d 54 4e 00 00 	lea    0x4e54(%rip),%rdi        # 82aa <_IO_stdin_used+0x2aa>
    3456:	e8 85 ef ff ff       	callq  23e0 <puts@plt>
    345b:	bf 01 00 00 00       	mov    $0x1,%edi
    3460:	e8 bb f1 ff ff       	callq  2620 <exit@plt>
    3465:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3468:	ba 00 00 00 00       	mov    $0x0,%edx
    346d:	be 01 ae 00 00       	mov    $0xae01,%esi
    3472:	89 c7                	mov    %eax,%edi
    3474:	b8 00 00 00 00       	mov    $0x0,%eax
    3479:	e8 42 f0 ff ff       	callq  24c0 <ioctl@plt>
    347e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3482:	89 42 04             	mov    %eax,0x4(%rdx)
    3485:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3489:	8b 40 04             	mov    0x4(%rax),%eax
    348c:	83 f8 ff             	cmp    $0xffffffff,%eax
    348f:	75 3d                	jne    34ce <get_vm+0x114>
    3491:	e8 fa ee ff ff       	callq  2390 <__errno_location@plt>
    3496:	8b 00                	mov    (%rax),%eax
    3498:	89 c7                	mov    %eax,%edi
    349a:	e8 a1 f1 ff ff       	callq  2640 <strerror@plt>
    349f:	48 89 c2             	mov    %rax,%rdx
    34a2:	be c9 01 00 00       	mov    $0x1c9,%esi
    34a7:	48 8d 3d a3 4b 00 00 	lea    0x4ba3(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    34ae:	b8 00 00 00 00       	mov    $0x0,%eax
    34b3:	e8 c8 ef ff ff       	callq  2480 <printf@plt>
    34b8:	48 8d 3d f5 4d 00 00 	lea    0x4df5(%rip),%rdi        # 82b4 <_IO_stdin_used+0x2b4>
    34bf:	e8 1c ef ff ff       	callq  23e0 <puts@plt>
    34c4:	bf 01 00 00 00       	mov    $0x1,%edi
    34c9:	e8 52 f1 ff ff       	callq  2620 <exit@plt>
    34ce:	8b 45 f4             	mov    -0xc(%rbp),%eax
    34d1:	ba 00 00 00 00       	mov    $0x0,%edx
    34d6:	be 04 ae 00 00       	mov    $0xae04,%esi
    34db:	89 c7                	mov    %eax,%edi
    34dd:	b8 00 00 00 00       	mov    $0x0,%eax
    34e2:	e8 d9 ef ff ff       	callq  24c0 <ioctl@plt>
    34e7:	89 45 f8             	mov    %eax,-0x8(%rbp)
    34ea:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%rbp)
    34ee:	75 3d                	jne    352d <get_vm+0x173>
    34f0:	e8 9b ee ff ff       	callq  2390 <__errno_location@plt>
    34f5:	8b 00                	mov    (%rax),%eax
    34f7:	89 c7                	mov    %eax,%edi
    34f9:	e8 42 f1 ff ff       	callq  2640 <strerror@plt>
    34fe:	48 89 c2             	mov    %rax,%rdx
    3501:	be cc 01 00 00       	mov    $0x1cc,%esi
    3506:	48 8d 3d 44 4b 00 00 	lea    0x4b44(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    350d:	b8 00 00 00 00       	mov    $0x0,%eax
    3512:	e8 69 ef ff ff       	callq  2480 <printf@plt>
    3517:	48 8d 3d a5 4d 00 00 	lea    0x4da5(%rip),%rdi        # 82c3 <_IO_stdin_used+0x2c3>
    351e:	e8 bd ee ff ff       	callq  23e0 <puts@plt>
    3523:	bf 01 00 00 00       	mov    $0x1,%edi
    3528:	e8 f3 f0 ff ff       	callq  2620 <exit@plt>
    352d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3531:	8b 55 f8             	mov    -0x8(%rbp),%edx
    3534:	89 50 48             	mov    %edx,0x48(%rax)
    3537:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    353b:	8b 40 48             	mov    0x48(%rax),%eax
    353e:	3d 2f 09 00 00       	cmp    $0x92f,%eax
    3543:	77 3d                	ja     3582 <get_vm+0x1c8>
    3545:	e8 46 ee ff ff       	callq  2390 <__errno_location@plt>
    354a:	8b 00                	mov    (%rax),%eax
    354c:	89 c7                	mov    %eax,%edi
    354e:	e8 ed f0 ff ff       	callq  2640 <strerror@plt>
    3553:	48 89 c2             	mov    %rax,%rdx
    3556:	be cf 01 00 00       	mov    $0x1cf,%esi
    355b:	48 8d 3d ef 4a 00 00 	lea    0x4aef(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3562:	b8 00 00 00 00       	mov    $0x0,%eax
    3567:	e8 14 ef ff ff       	callq  2480 <printf@plt>
    356c:	48 8d 3d 64 4d 00 00 	lea    0x4d64(%rip),%rdi        # 82d7 <_IO_stdin_used+0x2d7>
    3573:	e8 68 ee ff ff       	callq  23e0 <puts@plt>
    3578:	bf 01 00 00 00       	mov    $0x1,%edi
    357d:	e8 9e f0 ff ff       	callq  2620 <exit@plt>
    3582:	c7 45 fc 80 00 00 00 	movl   $0x80,-0x4(%rbp)
    3589:	8b 45 fc             	mov    -0x4(%rbp),%eax
    358c:	48 63 d0             	movslq %eax,%rdx
    358f:	48 89 d0             	mov    %rdx,%rax
    3592:	48 c1 e0 02          	shl    $0x2,%rax
    3596:	48 01 d0             	add    %rdx,%rax
    3599:	48 c1 e0 03          	shl    $0x3,%rax
    359d:	48 83 c0 08          	add    $0x8,%rax
    35a1:	48 89 c7             	mov    %rax,%rdi
    35a4:	e8 a7 ef ff ff       	callq  2550 <malloc@plt>
    35a9:	48 89 c2             	mov    %rax,%rdx
    35ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35b0:	48 89 50 40          	mov    %rdx,0x40(%rax)
    35b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35b8:	48 8b 40 40          	mov    0x40(%rax),%rax
    35bc:	8b 55 fc             	mov    -0x4(%rbp),%edx
    35bf:	89 10                	mov    %edx,(%rax)
    35c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35c5:	48 8b 50 40          	mov    0x40(%rax),%rdx
    35c9:	8b 45 f4             	mov    -0xc(%rbp),%eax
    35cc:	be 05 ae 08 c0       	mov    $0xc008ae05,%esi
    35d1:	89 c7                	mov    %eax,%edi
    35d3:	b8 00 00 00 00       	mov    $0x0,%eax
    35d8:	e8 e3 ee ff ff       	callq  24c0 <ioctl@plt>
    35dd:	85 c0                	test   %eax,%eax
    35df:	79 42                	jns    3623 <get_vm+0x269>
    35e1:	e8 aa ed ff ff       	callq  2390 <__errno_location@plt>
    35e6:	8b 00                	mov    (%rax),%eax
    35e8:	89 c7                	mov    %eax,%edi
    35ea:	e8 51 f0 ff ff       	callq  2640 <strerror@plt>
    35ef:	48 89 c2             	mov    %rax,%rdx
    35f2:	be d8 01 00 00       	mov    $0x1d8,%esi
    35f7:	48 8d 3d 53 4a 00 00 	lea    0x4a53(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    35fe:	b8 00 00 00 00       	mov    $0x0,%eax
    3603:	e8 78 ee ff ff       	callq  2480 <printf@plt>
    3608:	48 8d 3d e6 4c 00 00 	lea    0x4ce6(%rip),%rdi        # 82f5 <_IO_stdin_used+0x2f5>
    360f:	b8 00 00 00 00       	mov    $0x0,%eax
    3614:	e8 67 ee ff ff       	callq  2480 <printf@plt>
    3619:	bf 01 00 00 00       	mov    $0x1,%edi
    361e:	e8 fd ef ff ff       	callq  2620 <exit@plt>
    3623:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3627:	8b 40 04             	mov    0x4(%rax),%eax
    362a:	ba 00 00 00 00       	mov    $0x0,%edx
    362f:	be 60 ae 00 00       	mov    $0xae60,%esi
    3634:	89 c7                	mov    %eax,%edi
    3636:	b8 00 00 00 00       	mov    $0x0,%eax
    363b:	e8 80 ee ff ff       	callq  24c0 <ioctl@plt>
    3640:	85 c0                	test   %eax,%eax
    3642:	74 3d                	je     3681 <get_vm+0x2c7>
    3644:	e8 47 ed ff ff       	callq  2390 <__errno_location@plt>
    3649:	8b 00                	mov    (%rax),%eax
    364b:	89 c7                	mov    %eax,%edi
    364d:	e8 ee ef ff ff       	callq  2640 <strerror@plt>
    3652:	48 89 c2             	mov    %rax,%rdx
    3655:	be dd 01 00 00       	mov    $0x1dd,%esi
    365a:	48 8d 3d f0 49 00 00 	lea    0x49f0(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3661:	b8 00 00 00 00       	mov    $0x0,%eax
    3666:	e8 15 ee ff ff       	callq  2480 <printf@plt>
    366b:	48 8d 3d 92 4c 00 00 	lea    0x4c92(%rip),%rdi        # 8304 <_IO_stdin_used+0x304>
    3672:	e8 69 ed ff ff       	callq  23e0 <puts@plt>
    3677:	bf 01 00 00 00       	mov    $0x1,%edi
    367c:	e8 9f ef ff ff       	callq  2620 <exit@plt>
    3681:	ba 00 00 00 00       	mov    $0x0,%edx
    3686:	be 00 00 00 00       	mov    $0x0,%esi
    368b:	48 8d 3d ce 8a 00 00 	lea    0x8ace(%rip),%rdi        # c160 <sem_booted>
    3692:	e8 39 ef ff ff       	callq  25d0 <sem_init@plt>
    3697:	ba 00 00 00 00       	mov    $0x0,%edx
    369c:	be 00 00 00 00       	mov    $0x0,%esi
    36a1:	48 8d 3d 98 8a 00 00 	lea    0x8a98(%rip),%rdi        # c140 <sem_usercode_loaded>
    36a8:	e8 23 ef ff ff       	callq  25d0 <sem_init@plt>
    36ad:	ba 00 00 00 00       	mov    $0x0,%edx
    36b2:	be 00 00 00 00       	mov    $0x0,%esi
    36b7:	48 8d 3d c2 92 00 00 	lea    0x92c2(%rip),%rdi        # c980 <sem_work_wait>
    36be:	e8 0d ef ff ff       	callq  25d0 <sem_init@plt>
    36c3:	ba 00 00 00 00       	mov    $0x0,%edx
    36c8:	be 00 00 00 00       	mov    $0x0,%esi
    36cd:	48 8d 3d 4c 8a 00 00 	lea    0x8a4c(%rip),%rdi        # c120 <sem_work_fin>
    36d4:	e8 f7 ee ff ff       	callq  25d0 <sem_init@plt>
    36d9:	48 8d 15 3d 4c 00 00 	lea    0x4c3d(%rip),%rdx        # 831d <_IO_stdin_used+0x31d>
    36e0:	be 0e 00 00 00       	mov    $0xe,%esi
    36e5:	48 8d 3d 34 89 00 00 	lea    0x8934(%rip),%rdi        # c020 <code>
    36ec:	e8 c8 2b 00 00       	callq  62b9 <get_sock_for_flow>
    36f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    36f5:	89 82 94 00 00 00    	mov    %eax,0x94(%rdx)
    36fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    36ff:	8b 80 94 00 00 00    	mov    0x94(%rax),%eax
    3705:	85 c0                	test   %eax,%eax
    3707:	79 3d                	jns    3746 <get_vm+0x38c>
    3709:	e8 82 ec ff ff       	callq  2390 <__errno_location@plt>
    370e:	8b 00                	mov    (%rax),%eax
    3710:	89 c7                	mov    %eax,%edi
    3712:	e8 29 ef ff ff       	callq  2640 <strerror@plt>
    3717:	48 89 c2             	mov    %rax,%rdx
    371a:	be ee 01 00 00       	mov    $0x1ee,%esi
    371f:	48 8d 3d 2b 49 00 00 	lea    0x492b(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3726:	b8 00 00 00 00       	mov    $0x0,%eax
    372b:	e8 50 ed ff ff       	callq  2480 <printf@plt>
    3730:	48 8d 3d f1 4b 00 00 	lea    0x4bf1(%rip),%rdi        # 8328 <_IO_stdin_used+0x328>
    3737:	e8 a4 ec ff ff       	callq  23e0 <puts@plt>
    373c:	bf 01 00 00 00       	mov    $0x1,%edi
    3741:	e8 da ee ff ff       	callq  2620 <exit@plt>
    3746:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    374a:	c7 80 98 00 00 00 10 	movl   $0x10,0x98(%rax)
    3751:	00 00 00 
    3754:	48 8d 3d ed 4b 00 00 	lea    0x4bed(%rip),%rdi        # 8348 <_IO_stdin_used+0x348>
    375b:	e8 80 ec ff ff       	callq  23e0 <puts@plt>
    3760:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3764:	48 8b 80 b0 07 00 00 	mov    0x7b0(%rax),%rax
    376b:	48 c7 80 00 06 00 00 	movq   $0xffffffffffffffff,0x600(%rax)
    3772:	ff ff ff ff 
    3776:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    377a:	48 8b 80 b0 07 00 00 	mov    0x7b0(%rax),%rax
    3781:	48 c7 80 08 06 00 00 	movq   $0x0,0x608(%rax)
    3788:	00 00 00 00 
    378c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3790:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    3797:	8b 45 f0             	mov    -0x10(%rbp),%eax
    379a:	c9                   	leaveq 
    379b:	c3                   	retq   

000000000000379c <register_kmem>:
    379c:	f3 0f 1e fa          	endbr64 
    37a0:	55                   	push   %rbp
    37a1:	48 89 e5             	mov    %rsp,%rbp
    37a4:	48 83 ec 40          	sub    $0x40,%rsp
    37a8:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    37ac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    37b3:	00 00 
    37b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    37b9:	31 c0                	xor    %eax,%eax
    37bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    37bf:	8b 40 0c             	mov    0xc(%rax),%eax
    37c2:	8d 48 01             	lea    0x1(%rax),%ecx
    37c5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    37c9:	89 4a 0c             	mov    %ecx,0xc(%rdx)
    37cc:	89 45 d0             	mov    %eax,-0x30(%rbp)
    37cf:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    37d6:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    37dd:	00 
    37de:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    37e2:	8b 40 58             	mov    0x58(%rax),%eax
    37e5:	89 c0                	mov    %eax,%eax
    37e7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    37eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    37ef:	48 8b 40 50          	mov    0x50(%rax),%rax
    37f3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    37f7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    37fb:	8b 40 04             	mov    0x4(%rax),%eax
    37fe:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    3802:	be 46 ae 20 40       	mov    $0x4020ae46,%esi
    3807:	89 c7                	mov    %eax,%edi
    3809:	b8 00 00 00 00       	mov    $0x0,%eax
    380e:	e8 ad ec ff ff       	callq  24c0 <ioctl@plt>
    3813:	85 c0                	test   %eax,%eax
    3815:	79 42                	jns    3859 <register_kmem+0xbd>
    3817:	e8 74 eb ff ff       	callq  2390 <__errno_location@plt>
    381c:	8b 00                	mov    (%rax),%eax
    381e:	89 c7                	mov    %eax,%edi
    3820:	e8 1b ee ff ff       	callq  2640 <strerror@plt>
    3825:	48 89 c2             	mov    %rax,%rdx
    3828:	be 02 02 00 00       	mov    $0x202,%esi
    382d:	48 8d 3d 1d 48 00 00 	lea    0x481d(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3834:	b8 00 00 00 00       	mov    $0x0,%eax
    3839:	e8 42 ec ff ff       	callq  2480 <printf@plt>
    383e:	48 8d 3d 1b 4b 00 00 	lea    0x4b1b(%rip),%rdi        # 8360 <_IO_stdin_used+0x360>
    3845:	b8 00 00 00 00       	mov    $0x0,%eax
    384a:	e8 31 ec ff ff       	callq  2480 <printf@plt>
    384f:	bf 01 00 00 00       	mov    $0x1,%edi
    3854:	e8 c7 ed ff ff       	callq  2620 <exit@plt>
    3859:	90                   	nop
    385a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    385e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    3865:	00 00 
    3867:	74 05                	je     386e <register_kmem+0xd2>
    3869:	e8 d2 eb ff ff       	callq  2440 <__stack_chk_fail@plt>
    386e:	c9                   	leaveq 
    386f:	c3                   	retq   

0000000000003870 <create_vcpu>:
    3870:	f3 0f 1e fa          	endbr64 
    3874:	55                   	push   %rbp
    3875:	48 89 e5             	mov    %rsp,%rbp
    3878:	48 81 ec c0 04 00 00 	sub    $0x4c0,%rsp
    387f:	48 89 bd 48 fb ff ff 	mov    %rdi,-0x4b8(%rbp)
    3886:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    388d:	00 00 
    388f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    3893:	31 c0                	xor    %eax,%eax
    3895:	48 8b 85 48 fb ff ff 	mov    -0x4b8(%rbp),%rax
    389c:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
    38a3:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    38aa:	8b 00                	mov    (%rax),%eax
    38ac:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
    38b3:	be 8e ae 00 84       	mov    $0x8400ae8e,%esi
    38b8:	89 c7                	mov    %eax,%edi
    38ba:	b8 00 00 00 00       	mov    $0x0,%eax
    38bf:	e8 fc eb ff ff       	callq  24c0 <ioctl@plt>
    38c4:	85 c0                	test   %eax,%eax
    38c6:	74 42                	je     390a <create_vcpu+0x9a>
    38c8:	e8 c3 ea ff ff       	callq  2390 <__errno_location@plt>
    38cd:	8b 00                	mov    (%rax),%eax
    38cf:	89 c7                	mov    %eax,%edi
    38d1:	e8 6a ed ff ff       	callq  2640 <strerror@plt>
    38d6:	48 89 c2             	mov    %rax,%rdx
    38d9:	be 10 02 00 00       	mov    $0x210,%esi
    38de:	48 8d 3d 6c 47 00 00 	lea    0x476c(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    38e5:	b8 00 00 00 00       	mov    $0x0,%eax
    38ea:	e8 91 eb ff ff       	callq  2480 <printf@plt>
    38ef:	48 8d 3d 8c 4a 00 00 	lea    0x4a8c(%rip),%rdi        # 8382 <_IO_stdin_used+0x382>
    38f6:	b8 00 00 00 00       	mov    $0x0,%eax
    38fb:	e8 80 eb ff ff       	callq  2480 <printf@plt>
    3900:	bf 01 00 00 00       	mov    $0x1,%edi
    3905:	e8 16 ed ff ff       	callq  2620 <exit@plt>
    390a:	c7 85 50 fb ff ff 01 	movl   $0x1,-0x4b0(%rbp)
    3911:	00 00 00 
    3914:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    391b:	48 8b 80 a8 02 00 00 	mov    0x2a8(%rax),%rax
    3922:	48 89 c7             	mov    %rax,%rdi
    3925:	e8 f6 eb ff ff       	callq  2520 <sem_wait@plt>
    392a:	eb 67                	jmp    3993 <create_vcpu+0x123>
    392c:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3933:	8b 00                	mov    (%rax),%eax
    3935:	48 8d 95 50 fb ff ff 	lea    -0x4b0(%rbp),%rdx
    393c:	be 98 ae 04 80       	mov    $0x8004ae98,%esi
    3941:	89 c7                	mov    %eax,%edi
    3943:	b8 00 00 00 00       	mov    $0x0,%eax
    3948:	e8 73 eb ff ff       	callq  24c0 <ioctl@plt>
    394d:	85 c0                	test   %eax,%eax
    394f:	74 42                	je     3993 <create_vcpu+0x123>
    3951:	e8 3a ea ff ff       	callq  2390 <__errno_location@plt>
    3956:	8b 00                	mov    (%rax),%eax
    3958:	89 c7                	mov    %eax,%edi
    395a:	e8 e1 ec ff ff       	callq  2640 <strerror@plt>
    395f:	48 89 c2             	mov    %rax,%rdx
    3962:	be 1a 02 00 00       	mov    $0x21a,%esi
    3967:	48 8d 3d e3 46 00 00 	lea    0x46e3(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    396e:	b8 00 00 00 00       	mov    $0x0,%eax
    3973:	e8 08 eb ff ff       	callq  2480 <printf@plt>
    3978:	48 8d 3d 21 4a 00 00 	lea    0x4a21(%rip),%rdi        # 83a0 <_IO_stdin_used+0x3a0>
    397f:	b8 00 00 00 00       	mov    $0x0,%eax
    3984:	e8 f7 ea ff ff       	callq  2480 <printf@plt>
    3989:	bf 01 00 00 00       	mov    $0x1,%edi
    398e:	e8 8d ec ff ff       	callq  2620 <exit@plt>
    3993:	8b 85 50 fb ff ff    	mov    -0x4b0(%rbp),%eax
    3999:	85 c0                	test   %eax,%eax
    399b:	75 8f                	jne    392c <create_vcpu+0xbc>
    399d:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    39a4:	48 8b 90 60 02 00 00 	mov    0x260(%rax),%rdx
    39ab:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    39b2:	8b 00                	mov    (%rax),%eax
    39b4:	be 90 ae 08 40       	mov    $0x4008ae90,%esi
    39b9:	89 c7                	mov    %eax,%edi
    39bb:	b8 00 00 00 00       	mov    $0x0,%eax
    39c0:	e8 fb ea ff ff       	callq  24c0 <ioctl@plt>
    39c5:	85 c0                	test   %eax,%eax
    39c7:	79 3d                	jns    3a06 <create_vcpu+0x196>
    39c9:	e8 c2 e9 ff ff       	callq  2390 <__errno_location@plt>
    39ce:	8b 00                	mov    (%rax),%eax
    39d0:	89 c7                	mov    %eax,%edi
    39d2:	e8 69 ec ff ff       	callq  2640 <strerror@plt>
    39d7:	48 89 c2             	mov    %rax,%rdx
    39da:	be 22 02 00 00       	mov    $0x222,%esi
    39df:	48 8d 3d 6b 46 00 00 	lea    0x466b(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    39e6:	b8 00 00 00 00       	mov    $0x0,%eax
    39eb:	e8 90 ea ff ff       	callq  2480 <printf@plt>
    39f0:	48 8d 3d bf 49 00 00 	lea    0x49bf(%rip),%rdi        # 83b6 <_IO_stdin_used+0x3b6>
    39f7:	e8 e4 e9 ff ff       	callq  23e0 <puts@plt>
    39fc:	bf 01 00 00 00       	mov    $0x1,%edi
    3a01:	e8 1a ec ff ff       	callq  2620 <exit@plt>
    3a06:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3a0d:	48 8d 50 18          	lea    0x18(%rax),%rdx
    3a11:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3a18:	8b 00                	mov    (%rax),%eax
    3a1a:	be 83 ae 38 81       	mov    $0x8138ae83,%esi
    3a1f:	89 c7                	mov    %eax,%edi
    3a21:	b8 00 00 00 00       	mov    $0x0,%eax
    3a26:	e8 95 ea ff ff       	callq  24c0 <ioctl@plt>
    3a2b:	85 c0                	test   %eax,%eax
    3a2d:	79 50                	jns    3a7f <create_vcpu+0x20f>
    3a2f:	e8 5c e9 ff ff       	callq  2390 <__errno_location@plt>
    3a34:	8b 00                	mov    (%rax),%eax
    3a36:	89 c7                	mov    %eax,%edi
    3a38:	e8 03 ec ff ff       	callq  2640 <strerror@plt>
    3a3d:	48 89 c2             	mov    %rax,%rdx
    3a40:	be 25 02 00 00       	mov    $0x225,%esi
    3a45:	48 8d 3d 05 46 00 00 	lea    0x4605(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3a4c:	b8 00 00 00 00       	mov    $0x0,%eax
    3a51:	e8 2a ea ff ff       	callq  2480 <printf@plt>
    3a56:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3a5d:	48 8b 40 08          	mov    0x8(%rax),%rax
    3a61:	48 89 c6             	mov    %rax,%rsi
    3a64:	48 8d 3d 63 49 00 00 	lea    0x4963(%rip),%rdi        # 83ce <_IO_stdin_used+0x3ce>
    3a6b:	b8 00 00 00 00       	mov    $0x0,%eax
    3a70:	e8 0b ea ff ff       	callq  2480 <printf@plt>
    3a75:	bf 01 00 00 00       	mov    $0x1,%edi
    3a7a:	e8 a1 eb ff ff       	callq  2620 <exit@plt>
    3a7f:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3a86:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    3a8d:	00 
    3a8e:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3a95:	66 c7 40 24 00 00    	movw   $0x0,0x24(%rax)
    3a9b:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3aa2:	48 8d 50 18          	lea    0x18(%rax),%rdx
    3aa6:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3aad:	8b 00                	mov    (%rax),%eax
    3aaf:	be 84 ae 38 41       	mov    $0x4138ae84,%esi
    3ab4:	89 c7                	mov    %eax,%edi
    3ab6:	b8 00 00 00 00       	mov    $0x0,%eax
    3abb:	e8 00 ea ff ff       	callq  24c0 <ioctl@plt>
    3ac0:	85 c0                	test   %eax,%eax
    3ac2:	79 50                	jns    3b14 <create_vcpu+0x2a4>
    3ac4:	e8 c7 e8 ff ff       	callq  2390 <__errno_location@plt>
    3ac9:	8b 00                	mov    (%rax),%eax
    3acb:	89 c7                	mov    %eax,%edi
    3acd:	e8 6e eb ff ff       	callq  2640 <strerror@plt>
    3ad2:	48 89 c2             	mov    %rax,%rdx
    3ad5:	be 2c 02 00 00       	mov    $0x22c,%esi
    3ada:	48 8d 3d 70 45 00 00 	lea    0x4570(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3ae1:	b8 00 00 00 00       	mov    $0x0,%eax
    3ae6:	e8 95 e9 ff ff       	callq  2480 <printf@plt>
    3aeb:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3af2:	48 8b 40 08          	mov    0x8(%rax),%rax
    3af6:	48 89 c6             	mov    %rax,%rsi
    3af9:	48 8d 3d ec 48 00 00 	lea    0x48ec(%rip),%rdi        # 83ec <_IO_stdin_used+0x3ec>
    3b00:	b8 00 00 00 00       	mov    $0x0,%eax
    3b05:	e8 76 e9 ff ff       	callq  2480 <printf@plt>
    3b0a:	bf 01 00 00 00       	mov    $0x1,%edi
    3b0f:	e8 0c eb ff ff       	callq  2620 <exit@plt>
    3b14:	48 8d 95 60 fb ff ff 	lea    -0x4a0(%rbp),%rdx
    3b1b:	b8 00 00 00 00       	mov    $0x0,%eax
    3b20:	b9 12 00 00 00       	mov    $0x12,%ecx
    3b25:	48 89 d7             	mov    %rdx,%rdi
    3b28:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    3b2b:	48 c7 85 60 fb ff ff 	movq   $0x2,-0x4a0(%rbp)
    3b32:	02 00 00 00 
    3b36:	48 c7 85 68 fb ff ff 	movq   $0x2,-0x498(%rbp)
    3b3d:	02 00 00 00 
    3b41:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3b48:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    3b4c:	0f b6 c0             	movzbl %al,%eax
    3b4f:	48 89 85 70 fb ff ff 	mov    %rax,-0x490(%rbp)
    3b56:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3b5d:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
    3b64:	48 89 85 88 fb ff ff 	mov    %rax,-0x478(%rbp)
    3b6b:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3b72:	48 8b 80 70 02 00 00 	mov    0x270(%rax),%rax
    3b79:	48 89 85 90 fb ff ff 	mov    %rax,-0x470(%rbp)
    3b80:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3b87:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    3b8b:	0f b6 c0             	movzbl %al,%eax
    3b8e:	48 89 85 b0 fb ff ff 	mov    %rax,-0x450(%rbp)
    3b95:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3b9c:	0f b6 40 05          	movzbl 0x5(%rax),%eax
    3ba0:	0f b6 c0             	movzbl %al,%eax
    3ba3:	48 89 85 b8 fb ff ff 	mov    %rax,-0x448(%rbp)
    3baa:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3bb1:	48 8b 80 68 02 00 00 	mov    0x268(%rax),%rax
    3bb8:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
    3bbf:	48 c7 85 e8 fb ff ff 	movq   $0x2,-0x418(%rbp)
    3bc6:	02 00 00 00 
    3bca:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3bd1:	8b 00                	mov    (%rax),%eax
    3bd3:	48 8d 95 60 fb ff ff 	lea    -0x4a0(%rbp),%rdx
    3bda:	be 82 ae 90 40       	mov    $0x4090ae82,%esi
    3bdf:	89 c7                	mov    %eax,%edi
    3be1:	b8 00 00 00 00       	mov    $0x0,%eax
    3be6:	e8 d5 e8 ff ff       	callq  24c0 <ioctl@plt>
    3beb:	89 85 54 fb ff ff    	mov    %eax,-0x4ac(%rbp)
    3bf1:	83 bd 54 fb ff ff ff 	cmpl   $0xffffffff,-0x4ac(%rbp)
    3bf8:	75 42                	jne    3c3c <create_vcpu+0x3cc>
    3bfa:	e8 91 e7 ff ff       	callq  2390 <__errno_location@plt>
    3bff:	8b 00                	mov    (%rax),%eax
    3c01:	89 c7                	mov    %eax,%edi
    3c03:	e8 38 ea ff ff       	callq  2640 <strerror@plt>
    3c08:	48 89 c2             	mov    %rax,%rdx
    3c0b:	be 3d 02 00 00       	mov    $0x23d,%esi
    3c10:	48 8d 3d 3a 44 00 00 	lea    0x443a(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3c17:	b8 00 00 00 00       	mov    $0x0,%eax
    3c1c:	e8 5f e8 ff ff       	callq  2480 <printf@plt>
    3c21:	48 8d 3d e8 47 00 00 	lea    0x47e8(%rip),%rdi        # 8410 <_IO_stdin_used+0x410>
    3c28:	b8 00 00 00 00       	mov    $0x0,%eax
    3c2d:	e8 4e e8 ff ff       	callq  2480 <printf@plt>
    3c32:	bf 01 00 00 00       	mov    $0x1,%edi
    3c37:	e8 e4 e9 ff ff       	callq  2620 <exit@plt>
    3c3c:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3c43:	8b 00                	mov    (%rax),%eax
    3c45:	ba 00 00 00 00       	mov    $0x0,%edx
    3c4a:	be 80 ae 00 00       	mov    $0xae80,%esi
    3c4f:	89 c7                	mov    %eax,%edi
    3c51:	b8 00 00 00 00       	mov    $0x0,%eax
    3c56:	e8 65 e8 ff ff       	callq  24c0 <ioctl@plt>
    3c5b:	89 85 54 fb ff ff    	mov    %eax,-0x4ac(%rbp)
    3c61:	83 bd 54 fb ff ff ff 	cmpl   $0xffffffff,-0x4ac(%rbp)
    3c68:	75 3d                	jne    3ca7 <create_vcpu+0x437>
    3c6a:	e8 21 e7 ff ff       	callq  2390 <__errno_location@plt>
    3c6f:	8b 00                	mov    (%rax),%eax
    3c71:	89 c7                	mov    %eax,%edi
    3c73:	e8 c8 e9 ff ff       	callq  2640 <strerror@plt>
    3c78:	48 89 c2             	mov    %rax,%rdx
    3c7b:	be 4a 02 00 00       	mov    $0x24a,%esi
    3c80:	48 8d 3d ca 43 00 00 	lea    0x43ca(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3c87:	b8 00 00 00 00       	mov    $0x0,%eax
    3c8c:	e8 ef e7 ff ff       	callq  2480 <printf@plt>
    3c91:	48 8d 3d 97 47 00 00 	lea    0x4797(%rip),%rdi        # 842f <_IO_stdin_used+0x42f>
    3c98:	e8 43 e7 ff ff       	callq  23e0 <puts@plt>
    3c9d:	bf 01 00 00 00       	mov    $0x1,%edi
    3ca2:	e8 79 e9 ff ff       	callq  2620 <exit@plt>
    3ca7:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3cae:	48 8b 40 10          	mov    0x10(%rax),%rax
    3cb2:	8b 40 08             	mov    0x8(%rax),%eax
    3cb5:	83 f8 11             	cmp    $0x11,%eax
    3cb8:	0f 87 05 01 00 00    	ja     3dc3 <create_vcpu+0x553>
    3cbe:	89 c0                	mov    %eax,%eax
    3cc0:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    3cc7:	00 
    3cc8:	48 8d 05 c9 47 00 00 	lea    0x47c9(%rip),%rax        # 8498 <_IO_stdin_used+0x498>
    3ccf:	8b 04 02             	mov    (%rdx,%rax,1),%eax
    3cd2:	48 98                	cltq   
    3cd4:	48 8d 15 bd 47 00 00 	lea    0x47bd(%rip),%rdx        # 8498 <_IO_stdin_used+0x498>
    3cdb:	48 01 d0             	add    %rdx,%rax
    3cde:	3e ff e0             	notrack jmpq *%rax
    3ce1:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3ce8:	48 89 c7             	mov    %rax,%rdi
    3ceb:	e8 dc f2 ff ff       	callq  2fcc <handle_io_port>
    3cf0:	85 c0                	test   %eax,%eax
    3cf2:	0f 84 2c 01 00 00    	je     3e24 <create_vcpu+0x5b4>
    3cf8:	e9 42 01 00 00       	jmpq   3e3f <create_vcpu+0x5cf>
    3cfd:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3d04:	48 89 c7             	mov    %rax,%rdi
    3d07:	e8 b4 1f 00 00       	callq  5cc0 <print_regs>
    3d0c:	e8 7f e6 ff ff       	callq  2390 <__errno_location@plt>
    3d11:	8b 00                	mov    (%rax),%eax
    3d13:	89 c7                	mov    %eax,%edi
    3d15:	e8 26 e9 ff ff       	callq  2640 <strerror@plt>
    3d1a:	48 89 c2             	mov    %rax,%rdx
    3d1d:	be 58 02 00 00       	mov    $0x258,%esi
    3d22:	48 8d 3d 28 43 00 00 	lea    0x4328(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3d29:	b8 00 00 00 00       	mov    $0x0,%eax
    3d2e:	e8 4d e7 ff ff       	callq  2480 <printf@plt>
    3d33:	48 8d 3d 03 47 00 00 	lea    0x4703(%rip),%rdi        # 843d <_IO_stdin_used+0x43d>
    3d3a:	e8 a1 e6 ff ff       	callq  23e0 <puts@plt>
    3d3f:	bf 01 00 00 00       	mov    $0x1,%edi
    3d44:	e8 d7 e8 ff ff       	callq  2620 <exit@plt>
    3d49:	e8 42 e6 ff ff       	callq  2390 <__errno_location@plt>
    3d4e:	8b 00                	mov    (%rax),%eax
    3d50:	89 c7                	mov    %eax,%edi
    3d52:	e8 e9 e8 ff ff       	callq  2640 <strerror@plt>
    3d57:	48 89 c2             	mov    %rax,%rdx
    3d5a:	be 5b 02 00 00       	mov    $0x25b,%esi
    3d5f:	48 8d 3d eb 42 00 00 	lea    0x42eb(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3d66:	b8 00 00 00 00       	mov    $0x0,%eax
    3d6b:	e8 10 e7 ff ff       	callq  2480 <printf@plt>
    3d70:	48 8d 3d d8 46 00 00 	lea    0x46d8(%rip),%rdi        # 844f <_IO_stdin_used+0x44f>
    3d77:	e8 64 e6 ff ff       	callq  23e0 <puts@plt>
    3d7c:	bf 01 00 00 00       	mov    $0x1,%edi
    3d81:	e8 9a e8 ff ff       	callq  2620 <exit@plt>
    3d86:	e8 05 e6 ff ff       	callq  2390 <__errno_location@plt>
    3d8b:	8b 00                	mov    (%rax),%eax
    3d8d:	89 c7                	mov    %eax,%edi
    3d8f:	e8 ac e8 ff ff       	callq  2640 <strerror@plt>
    3d94:	48 89 c2             	mov    %rax,%rdx
    3d97:	be 5e 02 00 00       	mov    $0x25e,%esi
    3d9c:	48 8d 3d ae 42 00 00 	lea    0x42ae(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3da3:	b8 00 00 00 00       	mov    $0x0,%eax
    3da8:	e8 d3 e6 ff ff       	callq  2480 <printf@plt>
    3dad:	48 8d 3d b3 46 00 00 	lea    0x46b3(%rip),%rdi        # 8467 <_IO_stdin_used+0x467>
    3db4:	e8 27 e6 ff ff       	callq  23e0 <puts@plt>
    3db9:	bf 01 00 00 00       	mov    $0x1,%edi
    3dbe:	e8 5d e8 ff ff       	callq  2620 <exit@plt>
    3dc3:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3dca:	48 89 c7             	mov    %rax,%rdi
    3dcd:	e8 ee 1e 00 00       	callq  5cc0 <print_regs>
    3dd2:	e8 b9 e5 ff ff       	callq  2390 <__errno_location@plt>
    3dd7:	8b 00                	mov    (%rax),%eax
    3dd9:	89 c7                	mov    %eax,%edi
    3ddb:	e8 60 e8 ff ff       	callq  2640 <strerror@plt>
    3de0:	48 89 c2             	mov    %rax,%rdx
    3de3:	be 62 02 00 00       	mov    $0x262,%esi
    3de8:	48 8d 3d 62 42 00 00 	lea    0x4262(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3def:	b8 00 00 00 00       	mov    $0x0,%eax
    3df4:	e8 87 e6 ff ff       	callq  2480 <printf@plt>
    3df9:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3e00:	48 8b 40 10          	mov    0x10(%rax),%rax
    3e04:	8b 40 08             	mov    0x8(%rax),%eax
    3e07:	89 c6                	mov    %eax,%esi
    3e09:	48 8d 3d 6b 46 00 00 	lea    0x466b(%rip),%rdi        # 847b <_IO_stdin_used+0x47b>
    3e10:	b8 00 00 00 00       	mov    $0x0,%eax
    3e15:	e8 66 e6 ff ff       	callq  2480 <printf@plt>
    3e1a:	bf 01 00 00 00       	mov    $0x1,%edi
    3e1f:	e8 fc e7 ff ff       	callq  2620 <exit@plt>
    3e24:	90                   	nop
    3e25:	e9 12 fe ff ff       	jmpq   3c3c <create_vcpu+0x3cc>
    3e2a:	90                   	nop
    3e2b:	f3 0f 1e fa          	endbr64 
    3e2f:	48 8b 85 58 fb ff ff 	mov    -0x4a8(%rbp),%rax
    3e36:	48 89 c7             	mov    %rax,%rdi
    3e39:	e8 82 1e 00 00       	callq  5cc0 <print_regs>
    3e3e:	90                   	nop
    3e3f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3e43:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    3e4a:	00 00 
    3e4c:	74 05                	je     3e53 <create_vcpu+0x5e3>
    3e4e:	e8 ed e5 ff ff       	callq  2440 <__stack_chk_fail@plt>
    3e53:	c9                   	leaveq 
    3e54:	c3                   	retq   

0000000000003e55 <setup_vcpus>:
    3e55:	f3 0f 1e fa          	endbr64 
    3e59:	55                   	push   %rbp
    3e5a:	48 89 e5             	mov    %rsp,%rbp
    3e5d:	53                   	push   %rbx
    3e5e:	48 83 ec 28          	sub    $0x28,%rsp
    3e62:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3e66:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e6a:	8b 40 08             	mov    0x8(%rax),%eax
    3e6d:	48 98                	cltq   
    3e6f:	be b0 02 00 00       	mov    $0x2b0,%esi
    3e74:	48 89 c7             	mov    %rax,%rdi
    3e77:	e8 74 e6 ff ff       	callq  24f0 <calloc@plt>
    3e7c:	48 89 c2             	mov    %rax,%rdx
    3e7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e83:	48 89 50 10          	mov    %rdx,0x10(%rax)
    3e87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3e8b:	48 8b 40 10          	mov    0x10(%rax),%rax
    3e8f:	48 85 c0             	test   %rax,%rax
    3e92:	75 42                	jne    3ed6 <setup_vcpus+0x81>
    3e94:	e8 f7 e4 ff ff       	callq  2390 <__errno_location@plt>
    3e99:	8b 00                	mov    (%rax),%eax
    3e9b:	89 c7                	mov    %eax,%edi
    3e9d:	e8 9e e7 ff ff       	callq  2640 <strerror@plt>
    3ea2:	48 89 c2             	mov    %rax,%rdx
    3ea5:	be 73 02 00 00       	mov    $0x273,%esi
    3eaa:	48 8d 3d a0 41 00 00 	lea    0x41a0(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3eb1:	b8 00 00 00 00       	mov    $0x0,%eax
    3eb6:	e8 c5 e5 ff ff       	callq  2480 <printf@plt>
    3ebb:	48 8d 3d 1e 46 00 00 	lea    0x461e(%rip),%rdi        # 84e0 <_IO_stdin_used+0x4e0>
    3ec2:	b8 00 00 00 00       	mov    $0x0,%eax
    3ec7:	e8 b4 e5 ff ff       	callq  2480 <printf@plt>
    3ecc:	bf 01 00 00 00       	mov    $0x1,%edi
    3ed1:	e8 4a e7 ff ff       	callq  2620 <exit@plt>
    3ed6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    3edd:	e9 cc 02 00 00       	jmpq   41ae <setup_vcpus+0x359>
    3ee2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3ee5:	48 98                	cltq   
    3ee7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3eeb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3eef:	8b 40 04             	mov    0x4(%rax),%eax
    3ef2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3ef6:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    3efa:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    3efd:	48 63 d2             	movslq %edx,%rdx
    3f00:	48 69 d2 b0 02 00 00 	imul   $0x2b0,%rdx,%rdx
    3f07:	48 8d 1c 11          	lea    (%rcx,%rdx,1),%rbx
    3f0b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3f0f:	be 41 ae 00 00       	mov    $0xae41,%esi
    3f14:	89 c7                	mov    %eax,%edi
    3f16:	b8 00 00 00 00       	mov    $0x0,%eax
    3f1b:	e8 a0 e5 ff ff       	callq  24c0 <ioctl@plt>
    3f20:	89 03                	mov    %eax,(%rbx)
    3f22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f26:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3f2a:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3f2d:	48 98                	cltq   
    3f2f:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    3f36:	48 01 d0             	add    %rdx,%rax
    3f39:	8b 00                	mov    (%rax),%eax
    3f3b:	83 f8 ff             	cmp    $0xffffffff,%eax
    3f3e:	75 3d                	jne    3f7d <setup_vcpus+0x128>
    3f40:	e8 4b e4 ff ff       	callq  2390 <__errno_location@plt>
    3f45:	8b 00                	mov    (%rax),%eax
    3f47:	89 c7                	mov    %eax,%edi
    3f49:	e8 f2 e6 ff ff       	callq  2640 <strerror@plt>
    3f4e:	48 89 c2             	mov    %rax,%rdx
    3f51:	be 7a 02 00 00       	mov    $0x27a,%esi
    3f56:	48 8d 3d f4 40 00 00 	lea    0x40f4(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    3f5d:	b8 00 00 00 00       	mov    $0x0,%eax
    3f62:	e8 19 e5 ff ff       	callq  2480 <printf@plt>
    3f67:	48 8d 3d 8b 45 00 00 	lea    0x458b(%rip),%rdi        # 84f9 <_IO_stdin_used+0x4f9>
    3f6e:	e8 6d e4 ff ff       	callq  23e0 <puts@plt>
    3f73:	bf 01 00 00 00       	mov    $0x1,%edi
    3f78:	e8 a3 e6 ff ff       	callq  2620 <exit@plt>
    3f7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f81:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3f85:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3f88:	48 98                	cltq   
    3f8a:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    3f91:	48 01 d0             	add    %rdx,%rax
    3f94:	8b 30                	mov    (%rax),%esi
    3f96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f9a:	8b 40 48             	mov    0x48(%rax),%eax
    3f9d:	48 98                	cltq   
    3f9f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3fa3:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    3fa7:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    3faa:	48 63 d2             	movslq %edx,%rdx
    3fad:	48 69 d2 b0 02 00 00 	imul   $0x2b0,%rdx,%rdx
    3fb4:	48 8d 1c 11          	lea    (%rcx,%rdx,1),%rbx
    3fb8:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    3fbe:	41 89 f0             	mov    %esi,%r8d
    3fc1:	b9 01 00 00 00       	mov    $0x1,%ecx
    3fc6:	ba 03 00 00 00       	mov    $0x3,%edx
    3fcb:	48 89 c6             	mov    %rax,%rsi
    3fce:	bf 00 00 00 00       	mov    $0x0,%edi
    3fd3:	e8 78 e4 ff ff       	callq  2450 <mmap@plt>
    3fd8:	48 89 43 10          	mov    %rax,0x10(%rbx)
    3fdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3fe0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3fe4:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3fe7:	48 98                	cltq   
    3fe9:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    3ff0:	48 01 d0             	add    %rdx,%rax
    3ff3:	48 8b 40 10          	mov    0x10(%rax),%rax
    3ff7:	48 85 c0             	test   %rax,%rax
    3ffa:	75 3d                	jne    4039 <setup_vcpus+0x1e4>
    3ffc:	e8 8f e3 ff ff       	callq  2390 <__errno_location@plt>
    4001:	8b 00                	mov    (%rax),%eax
    4003:	89 c7                	mov    %eax,%edi
    4005:	e8 36 e6 ff ff       	callq  2640 <strerror@plt>
    400a:	48 89 c2             	mov    %rax,%rdx
    400d:	be 80 02 00 00       	mov    $0x280,%esi
    4012:	48 8d 3d 38 40 00 00 	lea    0x4038(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    4019:	b8 00 00 00 00       	mov    $0x0,%eax
    401e:	e8 5d e4 ff ff       	callq  2480 <printf@plt>
    4023:	48 8d 3d e2 44 00 00 	lea    0x44e2(%rip),%rdi        # 850c <_IO_stdin_used+0x50c>
    402a:	e8 b1 e3 ff ff       	callq  23e0 <puts@plt>
    402f:	bf 01 00 00 00       	mov    $0x1,%edi
    4034:	e8 e7 e5 ff ff       	callq  2620 <exit@plt>
    4039:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    403d:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4041:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4044:	48 98                	cltq   
    4046:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    404d:	48 01 c2             	add    %rax,%rdx
    4050:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4054:	48 8b 40 40          	mov    0x40(%rax),%rax
    4058:	48 89 82 60 02 00 00 	mov    %rax,0x260(%rdx)
    405f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4063:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4067:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    406a:	48 98                	cltq   
    406c:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    4073:	48 01 c2             	add    %rax,%rdx
    4076:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    407a:	48 8b 40 18          	mov    0x18(%rax),%rax
    407e:	48 89 82 68 02 00 00 	mov    %rax,0x268(%rdx)
    4085:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4089:	48 8b 48 30          	mov    0x30(%rax),%rcx
    408d:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4090:	c1 e0 0c             	shl    $0xc,%eax
    4093:	48 63 d0             	movslq %eax,%rdx
    4096:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    409a:	48 8b 70 10          	mov    0x10(%rax),%rsi
    409e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    40a1:	48 98                	cltq   
    40a3:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    40aa:	48 01 f0             	add    %rsi,%rax
    40ad:	48 29 d1             	sub    %rdx,%rcx
    40b0:	48 89 ca             	mov    %rcx,%rdx
    40b3:	48 89 90 70 02 00 00 	mov    %rdx,0x270(%rax)
    40ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40be:	8b 48 08             	mov    0x8(%rax),%ecx
    40c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40c5:	48 8b 50 10          	mov    0x10(%rax),%rdx
    40c9:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    40cc:	48 98                	cltq   
    40ce:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    40d5:	48 01 d0             	add    %rdx,%rax
    40d8:	89 ca                	mov    %ecx,%edx
    40da:	88 50 05             	mov    %dl,0x5(%rax)
    40dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40e1:	48 8b 50 10          	mov    0x10(%rax),%rdx
    40e5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    40e8:	48 98                	cltq   
    40ea:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    40f1:	48 01 d0             	add    %rdx,%rax
    40f4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    40f8:	48 81 c2 88 00 00 00 	add    $0x88,%rdx
    40ff:	48 89 90 78 02 00 00 	mov    %rdx,0x278(%rax)
    4106:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    410a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    410e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4111:	48 98                	cltq   
    4113:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    411a:	48 01 d0             	add    %rdx,%rax
    411d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4121:	48 81 c2 90 00 00 00 	add    $0x90,%rdx
    4128:	48 89 90 80 02 00 00 	mov    %rdx,0x280(%rax)
    412f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4133:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4137:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    413a:	48 98                	cltq   
    413c:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    4143:	48 01 d0             	add    %rdx,%rax
    4146:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    414a:	48 81 c2 94 00 00 00 	add    $0x94,%rdx
    4151:	48 89 90 88 02 00 00 	mov    %rdx,0x288(%rax)
    4158:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    415c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4160:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4163:	48 98                	cltq   
    4165:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    416c:	48 01 d0             	add    %rdx,%rax
    416f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4173:	48 81 c2 9c 00 00 00 	add    $0x9c,%rdx
    417a:	48 89 90 a0 02 00 00 	mov    %rdx,0x2a0(%rax)
    4181:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4185:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4189:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    418c:	48 98                	cltq   
    418e:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    4195:	48 01 d0             	add    %rdx,%rax
    4198:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    419c:	48 81 c2 98 00 00 00 	add    $0x98,%rdx
    41a3:	48 89 90 90 02 00 00 	mov    %rdx,0x290(%rax)
    41aa:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    41ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41b2:	8b 40 08             	mov    0x8(%rax),%eax
    41b5:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
    41b8:	0f 8c 24 fd ff ff    	jl     3ee2 <setup_vcpus+0x8d>
    41be:	c6 45 e3 00          	movb   $0x0,-0x1d(%rbp)
    41c2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    41c9:	e9 2f 01 00 00       	jmpq   42fd <setup_vcpus+0x4a8>
    41ce:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    41d1:	48 98                	cltq   
    41d3:	48 c1 e0 05          	shl    $0x5,%rax
    41d7:	48 89 c2             	mov    %rax,%rdx
    41da:	48 8d 05 df 87 00 00 	lea    0x87df(%rip),%rax        # c9c0 <sem_vcpu_init>
    41e1:	48 01 d0             	add    %rdx,%rax
    41e4:	ba 00 00 00 00       	mov    $0x0,%edx
    41e9:	be 00 00 00 00       	mov    $0x0,%esi
    41ee:	48 89 c7             	mov    %rax,%rdi
    41f1:	e8 da e3 ff ff       	callq  25d0 <sem_init@plt>
    41f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41fa:	48 8b 50 10          	mov    0x10(%rax),%rdx
    41fe:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4201:	48 98                	cltq   
    4203:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    420a:	48 01 d0             	add    %rdx,%rax
    420d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    4210:	48 63 d2             	movslq %edx,%rdx
    4213:	48 89 d1             	mov    %rdx,%rcx
    4216:	48 c1 e1 05          	shl    $0x5,%rcx
    421a:	48 8d 15 9f 87 00 00 	lea    0x879f(%rip),%rdx        # c9c0 <sem_vcpu_init>
    4221:	48 01 ca             	add    %rcx,%rdx
    4224:	48 89 90 a8 02 00 00 	mov    %rdx,0x2a8(%rax)
    422b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    422f:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4233:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4236:	48 98                	cltq   
    4238:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    423f:	48 01 d0             	add    %rdx,%rax
    4242:	48 c7 40 08 ff ff ff 	movq   $0xffffffffffffffff,0x8(%rax)
    4249:	ff 
    424a:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax
    424e:	8d 50 01             	lea    0x1(%rax),%edx
    4251:	88 55 e3             	mov    %dl,-0x1d(%rbp)
    4254:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4258:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    425c:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    425f:	48 63 d2             	movslq %edx,%rdx
    4262:	48 69 d2 b0 02 00 00 	imul   $0x2b0,%rdx,%rdx
    4269:	48 01 ca             	add    %rcx,%rdx
    426c:	88 42 04             	mov    %al,0x4(%rdx)
    426f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4273:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4277:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    427a:	48 98                	cltq   
    427c:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    4283:	48 01 c2             	add    %rax,%rdx
    4286:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    428a:	48 8b 48 10          	mov    0x10(%rax),%rcx
    428e:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4291:	48 98                	cltq   
    4293:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    429a:	48 01 c8             	add    %rcx,%rax
    429d:	48 83 c0 08          	add    $0x8,%rax
    42a1:	48 89 d1             	mov    %rdx,%rcx
    42a4:	48 8d 15 c5 f5 ff ff 	lea    -0xa3b(%rip),%rdx        # 3870 <create_vcpu>
    42ab:	be 00 00 00 00       	mov    $0x0,%esi
    42b0:	48 89 c7             	mov    %rax,%rdi
    42b3:	e8 c8 e0 ff ff       	callq  2380 <pthread_create@plt>
    42b8:	85 c0                	test   %eax,%eax
    42ba:	74 3d                	je     42f9 <setup_vcpus+0x4a4>
    42bc:	e8 cf e0 ff ff       	callq  2390 <__errno_location@plt>
    42c1:	8b 00                	mov    (%rax),%eax
    42c3:	89 c7                	mov    %eax,%edi
    42c5:	e8 76 e3 ff ff       	callq  2640 <strerror@plt>
    42ca:	48 89 c2             	mov    %rax,%rdx
    42cd:	be 98 02 00 00       	mov    $0x298,%esi
    42d2:	48 8d 3d 78 3d 00 00 	lea    0x3d78(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    42d9:	b8 00 00 00 00       	mov    $0x0,%eax
    42de:	e8 9d e1 ff ff       	callq  2480 <printf@plt>
    42e3:	48 8d 3d 2e 42 00 00 	lea    0x422e(%rip),%rdi        # 8518 <_IO_stdin_used+0x518>
    42ea:	e8 f1 e0 ff ff       	callq  23e0 <puts@plt>
    42ef:	bf 01 00 00 00       	mov    $0x1,%edi
    42f4:	e8 27 e3 ff ff       	callq  2620 <exit@plt>
    42f9:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
    42fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4301:	8b 40 08             	mov    0x8(%rax),%eax
    4304:	39 45 e4             	cmp    %eax,-0x1c(%rbp)
    4307:	0f 8c c1 fe ff ff    	jl     41ce <setup_vcpus+0x379>
    430d:	48 8d 3d ac 86 00 00 	lea    0x86ac(%rip),%rdi        # c9c0 <sem_vcpu_init>
    4314:	e8 87 e2 ff ff       	callq  25a0 <sem_post@plt>
    4319:	90                   	nop
    431a:	48 83 c4 28          	add    $0x28,%rsp
    431e:	5b                   	pop    %rbx
    431f:	5d                   	pop    %rbp
    4320:	c3                   	retq   

0000000000004321 <setup_bootcode>:
    4321:	f3 0f 1e fa          	endbr64 
    4325:	55                   	push   %rbp
    4326:	48 89 e5             	mov    %rsp,%rbp
    4329:	48 81 ec b0 01 00 00 	sub    $0x1b0,%rsp
    4330:	48 89 bd 58 fe ff ff 	mov    %rdi,-0x1a8(%rbp)
    4337:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    433e:	00 00 
    4340:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4344:	31 c0                	xor    %eax,%eax
    4346:	ba 00 00 00 00       	mov    $0x0,%edx
    434b:	be 00 00 00 00       	mov    $0x0,%esi
    4350:	48 8d 3d 09 86 00 00 	lea    0x8609(%rip),%rdi        # c960 <vcpu_init_barrier>
    4357:	e8 74 e2 ff ff       	callq  25d0 <sem_init@plt>
    435c:	48 8d 3d ed 41 00 00 	lea    0x41ed(%rip),%rdi        # 8550 <limit_file>
    4363:	e8 09 24 00 00       	callq  6771 <init_limits>
    4368:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    436f:	48 89 c6             	mov    %rax,%rsi
    4372:	48 8d 3d f7 41 00 00 	lea    0x41f7(%rip),%rdi        # 8570 <executable>
    4379:	e8 1e 29 00 00       	callq  6c9c <init_elf64_file>
    437e:	c7 85 60 fe ff ff 00 	movl   $0x0,-0x1a0(%rbp)
    4385:	00 00 00 
    4388:	e9 bd 00 00 00       	jmpq   444a <setup_bootcode+0x129>
    438d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4391:	8b 95 60 fe ff ff    	mov    -0x1a0(%rbp),%edx
    4397:	48 63 d2             	movslq %edx,%rdx
    439a:	48 c1 e2 03          	shl    $0x3,%rdx
    439e:	48 01 d0             	add    %rdx,%rax
    43a1:	48 8b 00             	mov    (%rax),%rax
    43a4:	48 8b 00             	mov    (%rax),%rax
    43a7:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    43ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    43b2:	8b 95 60 fe ff ff    	mov    -0x1a0(%rbp),%edx
    43b8:	48 63 d2             	movslq %edx,%rdx
    43bb:	48 c1 e2 03          	shl    $0x3,%rdx
    43bf:	48 01 d0             	add    %rdx,%rax
    43c2:	48 8b 00             	mov    (%rax),%rax
    43c5:	48 8b 40 28          	mov    0x28(%rax),%rax
    43c9:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
    43d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    43d4:	8b 95 60 fe ff ff    	mov    -0x1a0(%rbp),%edx
    43da:	48 63 d2             	movslq %edx,%rdx
    43dd:	48 c1 e2 03          	shl    $0x3,%rdx
    43e1:	48 01 d0             	add    %rdx,%rax
    43e4:	48 8b 00             	mov    (%rax),%rax
    43e7:	48 8b 40 10          	mov    0x10(%rax),%rax
    43eb:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
    43f1:	8b 85 64 fe ff ff    	mov    -0x19c(%rbp),%eax
    43f7:	48 63 d0             	movslq %eax,%rdx
    43fa:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    4401:	48 8b 48 50          	mov    0x50(%rax),%rcx
    4405:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    440c:	48 01 c1             	add    %rax,%rcx
    440f:	48 8b 85 78 fe ff ff 	mov    -0x188(%rbp),%rax
    4416:	48 89 c6             	mov    %rax,%rsi
    4419:	48 89 cf             	mov    %rcx,%rdi
    441c:	e8 0f e1 ff ff       	callq  2530 <memcpy@plt>
    4421:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    4428:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    442f:	48 89 c6             	mov    %rax,%rsi
    4432:	48 8d 3d 48 41 00 00 	lea    0x4148(%rip),%rdi        # 8581 <executable+0x11>
    4439:	b8 00 00 00 00       	mov    $0x0,%eax
    443e:	e8 3d e0 ff ff       	callq  2480 <printf@plt>
    4443:	83 85 60 fe ff ff 01 	addl   $0x1,-0x1a0(%rbp)
    444a:	8b 45 dc             	mov    -0x24(%rbp),%eax
    444d:	39 85 60 fe ff ff    	cmp    %eax,-0x1a0(%rbp)
    4453:	0f 8c 34 ff ff ff    	jl     438d <setup_bootcode+0x6c>
    4459:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    445d:	48 8b 50 18          	mov    0x18(%rax),%rdx
    4461:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    4468:	48 89 50 18          	mov    %rdx,0x18(%rax)
    446c:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    4473:	48 8d 35 24 41 00 00 	lea    0x4124(%rip),%rsi        # 859e <executable+0x2e>
    447a:	48 89 c7             	mov    %rax,%rdi
    447d:	e8 b0 32 00 00       	callq  7732 <get_shdr>
    4482:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
    4489:	48 83 bd 68 fe ff ff 	cmpq   $0x0,-0x198(%rbp)
    4490:	00 
    4491:	75 3d                	jne    44d0 <setup_bootcode+0x1af>
    4493:	e8 f8 de ff ff       	callq  2390 <__errno_location@plt>
    4498:	8b 00                	mov    (%rax),%eax
    449a:	89 c7                	mov    %eax,%edi
    449c:	e8 9f e1 ff ff       	callq  2640 <strerror@plt>
    44a1:	48 89 c2             	mov    %rax,%rdx
    44a4:	be be 02 00 00       	mov    $0x2be,%esi
    44a9:	48 8d 3d a1 3b 00 00 	lea    0x3ba1(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    44b0:	b8 00 00 00 00       	mov    $0x0,%eax
    44b5:	e8 c6 df ff ff       	callq  2480 <printf@plt>
    44ba:	48 8d 3d e7 40 00 00 	lea    0x40e7(%rip),%rdi        # 85a8 <executable+0x38>
    44c1:	e8 1a df ff ff       	callq  23e0 <puts@plt>
    44c6:	bf 01 00 00 00       	mov    $0x1,%edi
    44cb:	e8 50 e1 ff ff       	callq  2620 <exit@plt>
    44d0:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    44d7:	48 8b 50 10          	mov    0x10(%rax),%rdx
    44db:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    44e2:	48 8b 40 20          	mov    0x20(%rax),%rax
    44e6:	48 01 c2             	add    %rax,%rdx
    44e9:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    44f0:	48 89 50 30          	mov    %rdx,0x30(%rax)
    44f4:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    44fb:	48 8d 35 c6 40 00 00 	lea    0x40c6(%rip),%rsi        # 85c8 <executable+0x58>
    4502:	48 89 c7             	mov    %rax,%rdi
    4505:	e8 28 32 00 00       	callq  7732 <get_shdr>
    450a:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
    4511:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    4518:	48 8b 50 10          	mov    0x10(%rax),%rdx
    451c:	48 8b 85 68 fe ff ff 	mov    -0x198(%rbp),%rax
    4523:	48 8b 40 20          	mov    0x20(%rax),%rax
    4527:	48 01 c2             	add    %rax,%rdx
    452a:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    4531:	48 89 50 38          	mov    %rdx,0x38(%rax)
    4535:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    453c:	48 89 c7             	mov    %rax,%rdi
    453f:	e8 68 31 00 00       	callq  76ac <fini_elf64_file>
    4544:	c7 85 60 fe ff ff 00 	movl   $0x0,-0x1a0(%rbp)
    454b:	00 00 00 
    454e:	eb 13                	jmp    4563 <setup_bootcode+0x242>
    4550:	48 8d 3d 09 84 00 00 	lea    0x8409(%rip),%rdi        # c960 <vcpu_init_barrier>
    4557:	e8 44 e0 ff ff       	callq  25a0 <sem_post@plt>
    455c:	83 85 60 fe ff ff 01 	addl   $0x1,-0x1a0(%rbp)
    4563:	48 8b 85 58 fe ff ff 	mov    -0x1a8(%rbp),%rax
    456a:	8b 40 08             	mov    0x8(%rax),%eax
    456d:	39 85 60 fe ff ff    	cmp    %eax,-0x1a0(%rbp)
    4573:	7c db                	jl     4550 <setup_bootcode+0x22f>
    4575:	b8 00 00 00 00       	mov    $0x0,%eax
    457a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    457e:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    4585:	00 00 
    4587:	74 05                	je     458e <setup_bootcode+0x26d>
    4589:	e8 b2 de ff ff       	callq  2440 <__stack_chk_fail@plt>
    458e:	c9                   	leaveq 
    458f:	c3                   	retq   

0000000000004590 <setup_bootcode_mmap>:
    4590:	f3 0f 1e fa          	endbr64 
    4594:	55                   	push   %rbp
    4595:	48 89 e5             	mov    %rsp,%rbp
    4598:	48 81 ec c0 08 00 00 	sub    $0x8c0,%rsp
    459f:	48 89 bd 48 f7 ff ff 	mov    %rdi,-0x8b8(%rbp)
    45a6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    45ad:	00 00 
    45af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    45b3:	31 c0                	xor    %eax,%eax
    45b5:	49 ba 2e 2e 2f 62 6f 	movabs $0x2f746f6f622f2e2e,%r10
    45bc:	6f 74 2f 
    45bf:	49 bb 62 69 6e 2f 6d 	movabs $0x6e69616d2f6e6962,%r11
    45c6:	61 69 6e 
    45c9:	4c 89 95 f0 f7 ff ff 	mov    %r10,-0x810(%rbp)
    45d0:	4c 89 9d f8 f7 ff ff 	mov    %r11,-0x808(%rbp)
    45d7:	48 b8 5f 6d 61 70 70 	movabs $0x64657070616d5f,%rax
    45de:	65 64 00 
    45e1:	ba 00 00 00 00       	mov    $0x0,%edx
    45e6:	48 89 85 00 f8 ff ff 	mov    %rax,-0x800(%rbp)
    45ed:	48 89 95 08 f8 ff ff 	mov    %rdx,-0x7f8(%rbp)
    45f4:	48 8d 95 10 f8 ff ff 	lea    -0x7f0(%rbp),%rdx
    45fb:	b8 00 00 00 00       	mov    $0x0,%eax
    4600:	b9 7c 00 00 00       	mov    $0x7c,%ecx
    4605:	48 89 d7             	mov    %rdx,%rdi
    4608:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    460b:	4c 89 95 f0 fb ff ff 	mov    %r10,-0x410(%rbp)
    4612:	4c 89 9d f8 fb ff ff 	mov    %r11,-0x408(%rbp)
    4619:	48 b8 5f 6d 61 70 70 	movabs $0x5f64657070616d5f,%rax
    4620:	65 64 5f 
    4623:	ba 70 72 6f 70       	mov    $0x706f7270,%edx
    4628:	48 89 85 00 fc ff ff 	mov    %rax,-0x400(%rbp)
    462f:	48 89 95 08 fc ff ff 	mov    %rdx,-0x3f8(%rbp)
    4636:	48 8d 95 10 fc ff ff 	lea    -0x3f0(%rbp),%rdx
    463d:	b8 00 00 00 00       	mov    $0x0,%eax
    4642:	b9 7c 00 00 00       	mov    $0x7c,%ecx
    4647:	48 89 d7             	mov    %rdx,%rdi
    464a:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    464d:	48 8d 85 f0 f7 ff ff 	lea    -0x810(%rbp),%rax
    4654:	be 02 00 00 00       	mov    $0x2,%esi
    4659:	48 89 c7             	mov    %rax,%rdi
    465c:	b8 00 00 00 00       	mov    $0x0,%eax
    4661:	e8 7a df ff ff       	callq  25e0 <open@plt>
    4666:	89 85 54 f7 ff ff    	mov    %eax,-0x8ac(%rbp)
    466c:	83 bd 54 f7 ff ff ff 	cmpl   $0xffffffff,-0x8ac(%rbp)
    4673:	75 3d                	jne    46b2 <setup_bootcode_mmap+0x122>
    4675:	e8 16 dd ff ff       	callq  2390 <__errno_location@plt>
    467a:	8b 00                	mov    (%rax),%eax
    467c:	89 c7                	mov    %eax,%edi
    467e:	e8 bd df ff ff       	callq  2640 <strerror@plt>
    4683:	48 89 c2             	mov    %rax,%rdx
    4686:	be d6 02 00 00       	mov    $0x2d6,%esi
    468b:	48 8d 3d bf 39 00 00 	lea    0x39bf(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    4692:	b8 00 00 00 00       	mov    $0x0,%eax
    4697:	e8 e4 dd ff ff       	callq  2480 <printf@plt>
    469c:	48 8d 3d 2d 3f 00 00 	lea    0x3f2d(%rip),%rdi        # 85d0 <executable+0x60>
    46a3:	e8 38 dd ff ff       	callq  23e0 <puts@plt>
    46a8:	bf 01 00 00 00       	mov    $0x1,%edi
    46ad:	e8 6e df ff ff       	callq  2620 <exit@plt>
    46b2:	48 8d 95 60 f7 ff ff 	lea    -0x8a0(%rbp),%rdx
    46b9:	8b 85 54 f7 ff ff    	mov    -0x8ac(%rbp),%eax
    46bf:	48 89 d6             	mov    %rdx,%rsi
    46c2:	89 c7                	mov    %eax,%edi
    46c4:	e8 97 31 00 00       	callq  7860 <__fstat>
    46c9:	48 8b 85 90 f7 ff ff 	mov    -0x870(%rbp),%rax
    46d0:	48 89 c6             	mov    %rax,%rsi
    46d3:	8b 85 54 f7 ff ff    	mov    -0x8ac(%rbp),%eax
    46d9:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    46df:	41 89 c0             	mov    %eax,%r8d
    46e2:	b9 02 00 00 00       	mov    $0x2,%ecx
    46e7:	ba 03 00 00 00       	mov    $0x3,%edx
    46ec:	bf 00 00 00 00       	mov    $0x0,%edi
    46f1:	e8 5a dd ff ff       	callq  2450 <mmap@plt>
    46f6:	48 8b 95 48 f7 ff ff 	mov    -0x8b8(%rbp),%rdx
    46fd:	48 89 42 50          	mov    %rax,0x50(%rdx)
    4701:	8b 85 54 f7 ff ff    	mov    -0x8ac(%rbp),%eax
    4707:	89 c7                	mov    %eax,%edi
    4709:	e8 c2 dd ff ff       	callq  24d0 <close@plt>
    470e:	48 8b 85 90 f7 ff ff 	mov    -0x870(%rbp),%rax
    4715:	89 c2                	mov    %eax,%edx
    4717:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
    471e:	89 50 58             	mov    %edx,0x58(%rax)
    4721:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
    4728:	48 8b 40 50          	mov    0x50(%rax),%rax
    472c:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    4730:	75 3d                	jne    476f <setup_bootcode_mmap+0x1df>
    4732:	e8 59 dc ff ff       	callq  2390 <__errno_location@plt>
    4737:	8b 00                	mov    (%rax),%eax
    4739:	89 c7                	mov    %eax,%edi
    473b:	e8 00 df ff ff       	callq  2640 <strerror@plt>
    4740:	48 89 c2             	mov    %rax,%rdx
    4743:	be dd 02 00 00       	mov    $0x2dd,%esi
    4748:	48 8d 3d 02 39 00 00 	lea    0x3902(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    474f:	b8 00 00 00 00       	mov    $0x0,%eax
    4754:	e8 27 dd ff ff       	callq  2480 <printf@plt>
    4759:	48 8d 3d 8b 3e 00 00 	lea    0x3e8b(%rip),%rdi        # 85eb <executable+0x7b>
    4760:	e8 7b dc ff ff       	callq  23e0 <puts@plt>
    4765:	bf 01 00 00 00       	mov    $0x1,%edi
    476a:	e8 b1 de ff ff       	callq  2620 <exit@plt>
    476f:	48 8d 85 f0 fb ff ff 	lea    -0x410(%rbp),%rax
    4776:	48 8d 35 89 3e 00 00 	lea    0x3e89(%rip),%rsi        # 8606 <executable+0x96>
    477d:	48 89 c7             	mov    %rax,%rdi
    4780:	e8 6b de ff ff       	callq  25f0 <fopen@plt>
    4785:	48 89 85 58 f7 ff ff 	mov    %rax,-0x8a8(%rbp)
    478c:	48 83 bd 58 f7 ff ff 	cmpq   $0x0,-0x8a8(%rbp)
    4793:	00 
    4794:	75 3d                	jne    47d3 <setup_bootcode_mmap+0x243>
    4796:	e8 f5 db ff ff       	callq  2390 <__errno_location@plt>
    479b:	8b 00                	mov    (%rax),%eax
    479d:	89 c7                	mov    %eax,%edi
    479f:	e8 9c de ff ff       	callq  2640 <strerror@plt>
    47a4:	48 89 c2             	mov    %rax,%rdx
    47a7:	be e1 02 00 00       	mov    $0x2e1,%esi
    47ac:	48 8d 3d 9e 38 00 00 	lea    0x389e(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    47b3:	b8 00 00 00 00       	mov    $0x0,%eax
    47b8:	e8 c3 dc ff ff       	callq  2480 <printf@plt>
    47bd:	48 8d 3d 44 3e 00 00 	lea    0x3e44(%rip),%rdi        # 8608 <executable+0x98>
    47c4:	e8 17 dc ff ff       	callq  23e0 <puts@plt>
    47c9:	bf 01 00 00 00       	mov    $0x1,%edi
    47ce:	e8 4d de ff ff       	callq  2620 <exit@plt>
    47d3:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
    47da:	48 8d 78 20          	lea    0x20(%rax),%rdi
    47de:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    47e5:	48 89 c1             	mov    %rax,%rcx
    47e8:	ba 01 00 00 00       	mov    $0x1,%edx
    47ed:	be 10 00 00 00       	mov    $0x10,%esi
    47f2:	e8 f9 db ff ff       	callq  23f0 <fread@plt>
    47f7:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    47fe:	48 89 c7             	mov    %rax,%rdi
    4801:	e8 1a dc ff ff       	callq  2420 <fclose@plt>
    4806:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
    480d:	48 8b 40 50          	mov    0x50(%rax),%rax
    4811:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4815:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
    481c:	48 89 90 b0 07 00 00 	mov    %rdx,0x7b0(%rax)
    4823:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
    482a:	48 8b 50 20          	mov    0x20(%rax),%rdx
    482e:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
    4835:	48 89 50 18          	mov    %rdx,0x18(%rax)
    4839:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
    4840:	48 8b 50 28          	mov    0x28(%rax),%rdx
    4844:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
    484b:	48 89 50 30          	mov    %rdx,0x30(%rax)
    484f:	48 8b 85 48 f7 ff ff 	mov    -0x8b8(%rbp),%rax
    4856:	48 c7 40 38 00 00 10 	movq   $0x100000,0x38(%rax)
    485d:	00 
    485e:	90                   	nop
    485f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    4863:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    486a:	00 00 
    486c:	74 05                	je     4873 <setup_bootcode_mmap+0x2e3>
    486e:	e8 cd db ff ff       	callq  2440 <__stack_chk_fail@plt>
    4873:	c9                   	leaveq 
    4874:	c3                   	retq   

0000000000004875 <snapshot_vm>:
    4875:	f3 0f 1e fa          	endbr64 
    4879:	55                   	push   %rbp
    487a:	48 89 e5             	mov    %rsp,%rbp
    487d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4881:	90                   	nop
    4882:	5d                   	pop    %rbp
    4883:	c3                   	retq   

0000000000004884 <setup_usercode>:
    4884:	f3 0f 1e fa          	endbr64 
    4888:	55                   	push   %rbp
    4889:	48 89 e5             	mov    %rsp,%rbp
    488c:	48 81 ec b0 08 00 00 	sub    $0x8b0,%rsp
    4893:	48 89 bd 58 f7 ff ff 	mov    %rdi,-0x8a8(%rbp)
    489a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    48a1:	00 00 
    48a3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    48a7:	31 c0                	xor    %eax,%eax
    48a9:	48 b8 74 6d 70 2f 6d 	movabs $0x6e69616d2f706d74,%rax
    48b0:	61 69 6e 
    48b3:	48 89 85 e5 fb ff ff 	mov    %rax,-0x41b(%rbp)
    48ba:	66 c7 85 ed fb ff ff 	movw   $0x6f2e,-0x413(%rbp)
    48c1:	2e 6f 
    48c3:	c6 85 ef fb ff ff 00 	movb   $0x0,-0x411(%rbp)
    48ca:	48 8d 85 60 f9 ff ff 	lea    -0x6a0(%rbp),%rax
    48d1:	48 8d 15 c8 3d 00 00 	lea    0x3dc8(%rip),%rdx        # 86a0 <executable+0x130>
    48d8:	b9 50 00 00 00       	mov    $0x50,%ecx
    48dd:	48 89 c7             	mov    %rax,%rdi
    48e0:	48 89 d6             	mov    %rdx,%rsi
    48e3:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
    48e6:	48 b8 62 61 73 68 20 	movabs $0x6572632068736162,%rax
    48ed:	63 72 65 
    48f0:	48 ba 61 74 65 5f 65 	movabs $0x636578655f657461,%rdx
    48f7:	78 65 63 
    48fa:	48 89 85 f0 fb ff ff 	mov    %rax,-0x410(%rbp)
    4901:	48 89 95 f8 fb ff ff 	mov    %rdx,-0x408(%rbp)
    4908:	48 b8 75 74 61 62 6c 	movabs $0x732e656c62617475,%rax
    490f:	65 2e 73 
    4912:	ba 68 20 00 00       	mov    $0x2068,%edx
    4917:	48 89 85 00 fc ff ff 	mov    %rax,-0x400(%rbp)
    491e:	48 89 95 08 fc ff ff 	mov    %rdx,-0x3f8(%rbp)
    4925:	48 8d 95 10 fc ff ff 	lea    -0x3f0(%rbp),%rdx
    492c:	b8 00 00 00 00       	mov    $0x0,%eax
    4931:	b9 7c 00 00 00       	mov    $0x7c,%ecx
    4936:	48 89 d7             	mov    %rdx,%rdi
    4939:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    493c:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4943:	c7 40 68 00 00 c0 00 	movl   $0xc00000,0x68(%rax)
    494a:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4951:	8b 40 68             	mov    0x68(%rax),%eax
    4954:	89 c0                	mov    %eax,%eax
    4956:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    495c:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    4962:	b9 22 00 00 00       	mov    $0x22,%ecx
    4967:	ba 03 00 00 00       	mov    $0x3,%edx
    496c:	48 89 c6             	mov    %rax,%rsi
    496f:	bf 00 00 00 00       	mov    $0x0,%edi
    4974:	e8 d7 da ff ff       	callq  2450 <mmap@plt>
    4979:	48 8b 95 58 f7 ff ff 	mov    -0x8a8(%rbp),%rdx
    4980:	48 89 42 60          	mov    %rax,0x60(%rdx)
    4984:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    498b:	48 8b 40 60          	mov    0x60(%rax),%rax
    498f:	48 85 c0             	test   %rax,%rax
    4992:	75 3d                	jne    49d1 <setup_usercode+0x14d>
    4994:	e8 f7 d9 ff ff       	callq  2390 <__errno_location@plt>
    4999:	8b 00                	mov    (%rax),%eax
    499b:	89 c7                	mov    %eax,%edi
    499d:	e8 9e dc ff ff       	callq  2640 <strerror@plt>
    49a2:	48 89 c2             	mov    %rax,%rdx
    49a5:	be 13 03 00 00       	mov    $0x313,%esi
    49aa:	48 8d 3d a0 36 00 00 	lea    0x36a0(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    49b1:	b8 00 00 00 00       	mov    $0x0,%eax
    49b6:	e8 c5 da ff ff       	callq  2480 <printf@plt>
    49bb:	48 8d 3d c2 38 00 00 	lea    0x38c2(%rip),%rdi        # 8284 <_IO_stdin_used+0x284>
    49c2:	e8 19 da ff ff       	callq  23e0 <puts@plt>
    49c7:	bf 01 00 00 00       	mov    $0x1,%edi
    49cc:	e8 4f dc ff ff       	callq  2620 <exit@plt>
    49d1:	48 8d 3d 78 3b 00 00 	lea    0x3b78(%rip),%rdi        # 8550 <limit_file>
    49d8:	e8 94 1d 00 00       	callq  6771 <init_limits>
    49dd:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    49e4:	8b 40 58             	mov    0x58(%rax),%eax
    49e7:	89 c0                	mov    %eax,%eax
    49e9:	48 89 85 90 f7 ff ff 	mov    %rax,-0x870(%rbp)
    49f0:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    49f7:	8b 40 58             	mov    0x58(%rax),%eax
    49fa:	89 c0                	mov    %eax,%eax
    49fc:	48 05 00 00 20 00    	add    $0x200000,%rax
    4a02:	48 89 85 80 f7 ff ff 	mov    %rax,-0x880(%rbp)
    4a09:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4a10:	48 8b 50 60          	mov    0x60(%rax),%rdx
    4a14:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4a1b:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
    4a22:	48 8b 85 80 f7 ff ff 	mov    -0x880(%rbp),%rax
    4a29:	48 89 85 98 f7 ff ff 	mov    %rax,-0x868(%rbp)
    4a30:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4a37:	48 8b 40 60          	mov    0x60(%rax),%rax
    4a3b:	48 05 00 00 20 00    	add    $0x200000,%rax
    4a41:	48 89 85 a0 f7 ff ff 	mov    %rax,-0x860(%rbp)
    4a48:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4a4f:	48 8b 40 38          	mov    0x38(%rax),%rax
    4a53:	48 89 85 88 f7 ff ff 	mov    %rax,-0x878(%rbp)
    4a5a:	48 8b 95 a0 f7 ff ff 	mov    -0x860(%rbp),%rdx
    4a61:	48 8b 85 80 f7 ff ff 	mov    -0x880(%rbp),%rax
    4a68:	48 29 c2             	sub    %rax,%rdx
    4a6b:	48 89 d0             	mov    %rdx,%rax
    4a6e:	48 89 85 a8 f7 ff ff 	mov    %rax,-0x858(%rbp)
    4a75:	c7 85 74 f7 ff ff 00 	movl   $0x0,-0x88c(%rbp)
    4a7c:	00 00 00 
    4a7f:	e9 b3 03 00 00       	jmpq   4e37 <setup_usercode+0x5b3>
    4a84:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4a8b:	48 8b 50 50          	mov    0x50(%rax),%rdx
    4a8f:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
    4a96:	48 01 d0             	add    %rdx,%rax
    4a99:	48 89 85 b0 f7 ff ff 	mov    %rax,-0x850(%rbp)
    4aa0:	48 8d 85 60 f9 ff ff 	lea    -0x6a0(%rbp),%rax
    4aa7:	8b 95 74 f7 ff ff    	mov    -0x88c(%rbp),%edx
    4aad:	48 63 d2             	movslq %edx,%rdx
    4ab0:	48 c1 e2 07          	shl    $0x7,%rdx
    4ab4:	48 01 c2             	add    %rax,%rdx
    4ab7:	48 8d 85 f0 f7 ff ff 	lea    -0x810(%rbp),%rax
    4abe:	48 89 c6             	mov    %rax,%rsi
    4ac1:	48 89 d7             	mov    %rdx,%rdi
    4ac4:	e8 d3 21 00 00       	callq  6c9c <init_elf64_file>
    4ac9:	48 8b 85 b0 f7 ff ff 	mov    -0x850(%rbp),%rax
    4ad0:	ba 00 10 00 00       	mov    $0x1000,%edx
    4ad5:	be 00 00 00 00       	mov    $0x0,%esi
    4ada:	48 89 c7             	mov    %rax,%rdi
    4add:	e8 ce d9 ff ff       	callq  24b0 <memset@plt>
    4ae2:	48 8b 85 90 f7 ff ff 	mov    -0x870(%rbp),%rax
    4ae9:	48 25 00 00 e0 ff    	and    $0xffffffffffe00000,%rax
    4aef:	0c 87                	or     $0x87,%al
    4af1:	48 89 c2             	mov    %rax,%rdx
    4af4:	48 8b 85 b0 f7 ff ff 	mov    -0x850(%rbp),%rax
    4afb:	48 89 10             	mov    %rdx,(%rax)
    4afe:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4b05:	48 8b 88 b0 07 00 00 	mov    0x7b0(%rax),%rcx
    4b0c:	8b 85 74 f7 ff ff    	mov    -0x88c(%rbp),%eax
    4b12:	48 63 d0             	movslq %eax,%rdx
    4b15:	48 89 d0             	mov    %rdx,%rax
    4b18:	48 01 c0             	add    %rax,%rax
    4b1b:	48 01 d0             	add    %rdx,%rax
    4b1e:	48 c1 e0 03          	shl    $0x3,%rax
    4b22:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    4b26:	48 8b 85 88 f7 ff ff 	mov    -0x878(%rbp),%rax
    4b2d:	48 89 02             	mov    %rax,(%rdx)
    4b30:	48 8d 85 f0 f7 ff ff 	lea    -0x810(%rbp),%rax
    4b37:	48 8d 35 60 3a 00 00 	lea    0x3a60(%rip),%rsi        # 859e <executable+0x2e>
    4b3e:	48 89 c7             	mov    %rax,%rdi
    4b41:	e8 ec 2b 00 00       	callq  7732 <get_shdr>
    4b46:	48 89 85 b8 f7 ff ff 	mov    %rax,-0x848(%rbp)
    4b4d:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
    4b54:	48 8b 48 10          	mov    0x10(%rax),%rcx
    4b58:	48 8b 85 b8 f7 ff ff 	mov    -0x848(%rbp),%rax
    4b5f:	48 8b 50 20          	mov    0x20(%rax),%rdx
    4b63:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4b6a:	48 8b b0 b0 07 00 00 	mov    0x7b0(%rax),%rsi
    4b71:	48 01 d1             	add    %rdx,%rcx
    4b74:	8b 85 74 f7 ff ff    	mov    -0x88c(%rbp),%eax
    4b7a:	48 63 d0             	movslq %eax,%rdx
    4b7d:	48 89 d0             	mov    %rdx,%rax
    4b80:	48 01 c0             	add    %rax,%rax
    4b83:	48 01 d0             	add    %rdx,%rax
    4b86:	48 c1 e0 03          	shl    $0x3,%rax
    4b8a:	48 01 f0             	add    %rsi,%rax
    4b8d:	48 83 c0 10          	add    $0x10,%rax
    4b91:	48 89 08             	mov    %rcx,(%rax)
    4b94:	48 8b 85 28 f9 ff ff 	mov    -0x6d8(%rbp),%rax
    4b9b:	48 8b 95 58 f7 ff ff 	mov    -0x8a8(%rbp),%rdx
    4ba2:	48 8b b2 b0 07 00 00 	mov    0x7b0(%rdx),%rsi
    4ba9:	48 8b 48 18          	mov    0x18(%rax),%rcx
    4bad:	8b 85 74 f7 ff ff    	mov    -0x88c(%rbp),%eax
    4bb3:	48 63 d0             	movslq %eax,%rdx
    4bb6:	48 89 d0             	mov    %rdx,%rax
    4bb9:	48 01 c0             	add    %rax,%rax
    4bbc:	48 01 d0             	add    %rdx,%rax
    4bbf:	48 c1 e0 03          	shl    $0x3,%rax
    4bc3:	48 01 f0             	add    %rsi,%rax
    4bc6:	48 83 c0 08          	add    $0x8,%rax
    4bca:	48 89 08             	mov    %rcx,(%rax)
    4bcd:	c7 85 70 f7 ff ff 00 	movl   $0x0,-0x890(%rbp)
    4bd4:	00 00 00 
    4bd7:	e9 7a 01 00 00       	jmpq   4d56 <setup_usercode+0x4d2>
    4bdc:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
    4be3:	8b 95 70 f7 ff ff    	mov    -0x890(%rbp),%edx
    4be9:	48 63 d2             	movslq %edx,%rdx
    4bec:	48 c1 e2 03          	shl    $0x3,%rdx
    4bf0:	48 01 d0             	add    %rdx,%rax
    4bf3:	48 8b 00             	mov    (%rax),%rax
    4bf6:	48 8b 00             	mov    (%rax),%rax
    4bf9:	48 89 85 c0 f7 ff ff 	mov    %rax,-0x840(%rbp)
    4c00:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
    4c07:	8b 95 70 f7 ff ff    	mov    -0x890(%rbp),%edx
    4c0d:	48 63 d2             	movslq %edx,%rdx
    4c10:	48 c1 e2 03          	shl    $0x3,%rdx
    4c14:	48 01 d0             	add    %rdx,%rax
    4c17:	48 8b 00             	mov    (%rax),%rax
    4c1a:	48 8b 40 28          	mov    0x28(%rax),%rax
    4c1e:	48 89 85 c8 f7 ff ff 	mov    %rax,-0x838(%rbp)
    4c25:	48 8b 85 c0 f7 ff ff 	mov    -0x840(%rbp),%rax
    4c2c:	48 c1 e8 15          	shr    $0x15,%rax
    4c30:	25 ff 01 00 00       	and    $0x1ff,%eax
    4c35:	48 89 85 d0 f7 ff ff 	mov    %rax,-0x830(%rbp)
    4c3c:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
    4c43:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4c4a:	00 
    4c4b:	48 8b 85 b0 f7 ff ff 	mov    -0x850(%rbp),%rax
    4c52:	48 01 d0             	add    %rdx,%rax
    4c55:	48 8b 00             	mov    (%rax),%rax
    4c58:	48 85 c0             	test   %rax,%rax
    4c5b:	75 43                	jne    4ca0 <setup_usercode+0x41c>
    4c5d:	48 8b 85 80 f7 ff ff 	mov    -0x880(%rbp),%rax
    4c64:	48 25 00 00 e0 ff    	and    $0xffffffffffe00000,%rax
    4c6a:	48 89 c2             	mov    %rax,%rdx
    4c6d:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
    4c74:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    4c7b:	00 
    4c7c:	48 8b 85 b0 f7 ff ff 	mov    -0x850(%rbp),%rax
    4c83:	48 01 c8             	add    %rcx,%rax
    4c86:	80 ca 87             	or     $0x87,%dl
    4c89:	48 89 10             	mov    %rdx,(%rax)
    4c8c:	48 8b 85 80 f7 ff ff 	mov    -0x880(%rbp),%rax
    4c93:	48 05 00 00 20 00    	add    $0x200000,%rax
    4c99:	48 89 85 80 f7 ff ff 	mov    %rax,-0x880(%rbp)
    4ca0:	48 8b 85 d0 f7 ff ff 	mov    -0x830(%rbp),%rax
    4ca7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4cae:	00 
    4caf:	48 8b 85 b0 f7 ff ff 	mov    -0x850(%rbp),%rax
    4cb6:	48 01 d0             	add    %rdx,%rax
    4cb9:	48 8b 00             	mov    (%rax),%rax
    4cbc:	48 25 00 00 e0 ff    	and    $0xffffffffffe00000,%rax
    4cc2:	48 89 c2             	mov    %rax,%rdx
    4cc5:	48 8b 85 c0 f7 ff ff 	mov    -0x840(%rbp),%rax
    4ccc:	25 ff ff 1f 00       	and    $0x1fffff,%eax
    4cd1:	48 09 c2             	or     %rax,%rdx
    4cd4:	48 8b 85 a8 f7 ff ff 	mov    -0x858(%rbp),%rax
    4cdb:	48 01 d0             	add    %rdx,%rax
    4cde:	48 89 85 d8 f7 ff ff 	mov    %rax,-0x828(%rbp)
    4ce5:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
    4cec:	8b 95 70 f7 ff ff    	mov    -0x890(%rbp),%edx
    4cf2:	48 63 d2             	movslq %edx,%rdx
    4cf5:	48 c1 e2 03          	shl    $0x3,%rdx
    4cf9:	48 01 d0             	add    %rdx,%rax
    4cfc:	48 8b 00             	mov    (%rax),%rax
    4cff:	48 8b 40 10          	mov    0x10(%rax),%rax
    4d03:	89 85 78 f7 ff ff    	mov    %eax,-0x888(%rbp)
    4d09:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
    4d10:	8b 95 70 f7 ff ff    	mov    -0x890(%rbp),%edx
    4d16:	48 63 d2             	movslq %edx,%rdx
    4d19:	48 c1 e2 03          	shl    $0x3,%rdx
    4d1d:	48 01 d0             	add    %rdx,%rax
    4d20:	48 8b 00             	mov    (%rax),%rax
    4d23:	48 8b 40 08          	mov    0x8(%rax),%rax
    4d27:	89 85 7c f7 ff ff    	mov    %eax,-0x884(%rbp)
    4d2d:	8b 85 78 f7 ff ff    	mov    -0x888(%rbp),%eax
    4d33:	48 63 d0             	movslq %eax,%rdx
    4d36:	48 8b 85 d8 f7 ff ff 	mov    -0x828(%rbp),%rax
    4d3d:	48 8b 8d c8 f7 ff ff 	mov    -0x838(%rbp),%rcx
    4d44:	48 89 ce             	mov    %rcx,%rsi
    4d47:	48 89 c7             	mov    %rax,%rdi
    4d4a:	e8 e1 d7 ff ff       	callq  2530 <memcpy@plt>
    4d4f:	83 85 70 f7 ff ff 01 	addl   $0x1,-0x890(%rbp)
    4d56:	8b 85 4c f9 ff ff    	mov    -0x6b4(%rbp),%eax
    4d5c:	39 85 70 f7 ff ff    	cmp    %eax,-0x890(%rbp)
    4d62:	0f 8c 74 fe ff ff    	jl     4bdc <setup_usercode+0x358>
    4d68:	48 81 85 88 f7 ff ff 	addq   $0x1000,-0x878(%rbp)
    4d6f:	00 10 00 00 
    4d73:	48 81 bd 88 f7 ff ff 	cmpq   $0x200000,-0x878(%rbp)
    4d7a:	00 00 20 00 
    4d7e:	76 42                	jbe    4dc2 <setup_usercode+0x53e>
    4d80:	e8 0b d6 ff ff       	callq  2390 <__errno_location@plt>
    4d85:	8b 00                	mov    (%rax),%eax
    4d87:	89 c7                	mov    %eax,%edi
    4d89:	e8 b2 d8 ff ff       	callq  2640 <strerror@plt>
    4d8e:	48 89 c2             	mov    %rax,%rdx
    4d91:	be 4b 03 00 00       	mov    $0x34b,%esi
    4d96:	48 8d 3d b4 32 00 00 	lea    0x32b4(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    4d9d:	b8 00 00 00 00       	mov    $0x0,%eax
    4da2:	e8 d9 d6 ff ff       	callq  2480 <printf@plt>
    4da7:	48 8d 3d 82 38 00 00 	lea    0x3882(%rip),%rdi        # 8630 <executable+0xc0>
    4dae:	b8 00 00 00 00       	mov    $0x0,%eax
    4db3:	e8 c8 d6 ff ff       	callq  2480 <printf@plt>
    4db8:	bf 01 00 00 00       	mov    $0x1,%edi
    4dbd:	e8 5e d8 ff ff       	callq  2620 <exit@plt>
    4dc2:	48 8b 95 80 f7 ff ff 	mov    -0x880(%rbp),%rdx
    4dc9:	48 8b 85 98 f7 ff ff 	mov    -0x868(%rbp),%rax
    4dd0:	48 29 c2             	sub    %rax,%rdx
    4dd3:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4dda:	8b 40 68             	mov    0x68(%rax),%eax
    4ddd:	89 c0                	mov    %eax,%eax
    4ddf:	48 39 c2             	cmp    %rax,%rdx
    4de2:	76 3d                	jbe    4e21 <setup_usercode+0x59d>
    4de4:	e8 a7 d5 ff ff       	callq  2390 <__errno_location@plt>
    4de9:	8b 00                	mov    (%rax),%eax
    4deb:	89 c7                	mov    %eax,%edi
    4ded:	e8 4e d8 ff ff       	callq  2640 <strerror@plt>
    4df2:	48 89 c2             	mov    %rax,%rdx
    4df5:	be 4e 03 00 00       	mov    $0x34e,%esi
    4dfa:	48 8d 3d 50 32 00 00 	lea    0x3250(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    4e01:	b8 00 00 00 00       	mov    $0x0,%eax
    4e06:	e8 75 d6 ff ff       	callq  2480 <printf@plt>
    4e0b:	48 8d 3d 46 38 00 00 	lea    0x3846(%rip),%rdi        # 8658 <executable+0xe8>
    4e12:	e8 c9 d5 ff ff       	callq  23e0 <puts@plt>
    4e17:	bf 01 00 00 00       	mov    $0x1,%edi
    4e1c:	e8 ff d7 ff ff       	callq  2620 <exit@plt>
    4e21:	48 8d 85 f0 f7 ff ff 	lea    -0x810(%rbp),%rax
    4e28:	48 89 c7             	mov    %rax,%rdi
    4e2b:	e8 7c 28 00 00       	callq  76ac <fini_elf64_file>
    4e30:	83 85 74 f7 ff ff 01 	addl   $0x1,-0x88c(%rbp)
    4e37:	8b 85 74 f7 ff ff    	mov    -0x88c(%rbp),%eax
    4e3d:	83 f8 04             	cmp    $0x4,%eax
    4e40:	0f 86 3e fc ff ff    	jbe    4a84 <setup_usercode+0x200>
    4e46:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4e4d:	48 8b 80 b0 07 00 00 	mov    0x7b0(%rax),%rax
    4e54:	c6 80 58 06 00 00 02 	movb   $0x2,0x658(%rax)
    4e5b:	66 c7 85 e4 f7 ff ff 	movw   $0x0,-0x81c(%rbp)
    4e62:	00 00 
    4e64:	66 c7 85 e6 f7 ff ff 	movw   $0x1,-0x81a(%rbp)
    4e6b:	01 00 
    4e6d:	66 c7 85 e8 f7 ff ff 	movw   $0x0,-0x818(%rbp)
    4e74:	00 00 
    4e76:	66 c7 85 ea f7 ff ff 	movw   $0x1,-0x816(%rbp)
    4e7d:	01 00 
    4e7f:	66 c7 85 ec f7 ff ff 	movw   $0x1,-0x814(%rbp)
    4e86:	01 00 
    4e88:	66 c7 85 ee f7 ff ff 	movw   $0x1,-0x812(%rbp)
    4e8f:	01 00 
    4e91:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4e98:	48 8b 80 b0 07 00 00 	mov    0x7b0(%rax),%rax
    4e9f:	48 8d 88 5a 06 00 00 	lea    0x65a(%rax),%rcx
    4ea6:	48 8d 85 e4 f7 ff ff 	lea    -0x81c(%rbp),%rax
    4ead:	ba 0c 00 00 00       	mov    $0xc,%edx
    4eb2:	48 89 c6             	mov    %rax,%rsi
    4eb5:	48 89 cf             	mov    %rcx,%rdi
    4eb8:	e8 73 d6 ff ff       	callq  2530 <memcpy@plt>
    4ebd:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4ec4:	48 8b 80 b0 07 00 00 	mov    0x7b0(%rax),%rax
    4ecb:	48 05 10 06 00 00    	add    $0x610,%rax
    4ed1:	ba 40 00 00 00       	mov    $0x40,%edx
    4ed6:	be ff 00 00 00       	mov    $0xff,%esi
    4edb:	48 89 c7             	mov    %rax,%rdi
    4ede:	e8 cd d5 ff ff       	callq  24b0 <memset@plt>
    4ee3:	48 8b 85 58 f7 ff ff 	mov    -0x8a8(%rbp),%rax
    4eea:	48 8b 80 b0 07 00 00 	mov    0x7b0(%rax),%rax
    4ef1:	c6 80 59 06 00 00 00 	movb   $0x0,0x659(%rax)
    4ef8:	90                   	nop
    4ef9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    4efd:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    4f04:	00 00 
    4f06:	74 05                	je     4f0d <setup_usercode+0x689>
    4f08:	e8 33 d5 ff ff       	callq  2440 <__stack_chk_fail@plt>
    4f0d:	c9                   	leaveq 
    4f0e:	c3                   	retq   

0000000000004f0f <setup_usercode_mmap>:
    4f0f:	f3 0f 1e fa          	endbr64 
    4f13:	55                   	push   %rbp
    4f14:	48 89 e5             	mov    %rsp,%rbp
    4f17:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    4f1e:	48 83 0c 24 00       	orq    $0x0,(%rsp)
    4f23:	48 81 ec c0 08 00 00 	sub    $0x8c0,%rsp
    4f2a:	48 89 bd 48 e7 ff ff 	mov    %rdi,-0x18b8(%rbp)
    4f31:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4f38:	00 00 
    4f3a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4f3e:	31 c0                	xor    %eax,%eax
    4f40:	48 8d 85 f0 e7 ff ff 	lea    -0x1810(%rbp),%rax
    4f47:	48 8d 15 32 3a 00 00 	lea    0x3a32(%rip),%rdx        # 8980 <executable+0x410>
    4f4e:	b9 80 01 00 00       	mov    $0x180,%ecx
    4f53:	48 89 c7             	mov    %rax,%rdi
    4f56:	48 89 d6             	mov    %rdx,%rsi
    4f59:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
    4f5c:	c7 85 50 e7 ff ff 00 	movl   $0x0,-0x18b0(%rbp)
    4f63:	00 00 00 
    4f66:	e9 87 00 00 00       	jmpq   4ff2 <setup_usercode_mmap+0xe3>
    4f6b:	48 8d 85 f0 e7 ff ff 	lea    -0x1810(%rbp),%rax
    4f72:	8b 95 50 e7 ff ff    	mov    -0x18b0(%rbp),%edx
    4f78:	48 63 d2             	movslq %edx,%rdx
    4f7b:	48 c1 e2 0a          	shl    $0xa,%rdx
    4f7f:	48 01 c2             	add    %rax,%rdx
    4f82:	48 8d 85 f0 f3 ff ff 	lea    -0xc10(%rbp),%rax
    4f89:	8b 8d 50 e7 ff ff    	mov    -0x18b0(%rbp),%ecx
    4f8f:	48 63 c9             	movslq %ecx,%rcx
    4f92:	48 c1 e1 0a          	shl    $0xa,%rcx
    4f96:	48 01 c8             	add    %rcx,%rax
    4f99:	48 89 d6             	mov    %rdx,%rsi
    4f9c:	48 89 c7             	mov    %rax,%rdi
    4f9f:	e8 1c d4 ff ff       	callq  23c0 <strcpy@plt>
    4fa4:	48 8d 85 f0 f3 ff ff 	lea    -0xc10(%rbp),%rax
    4fab:	8b 95 50 e7 ff ff    	mov    -0x18b0(%rbp),%edx
    4fb1:	48 63 d2             	movslq %edx,%rdx
    4fb4:	48 c1 e2 0a          	shl    $0xa,%rdx
    4fb8:	48 01 c2             	add    %rax,%rdx
    4fbb:	48 89 d0             	mov    %rdx,%rax
    4fbe:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    4fc5:	48 89 c6             	mov    %rax,%rsi
    4fc8:	b8 00 00 00 00       	mov    $0x0,%eax
    4fcd:	48 89 f7             	mov    %rsi,%rdi
    4fd0:	f2 ae                	repnz scas %es:(%rdi),%al
    4fd2:	48 89 c8             	mov    %rcx,%rax
    4fd5:	48 f7 d0             	not    %rax
    4fd8:	48 83 e8 01          	sub    $0x1,%rax
    4fdc:	48 01 d0             	add    %rdx,%rax
    4fdf:	c7 00 5f 70 72 6f    	movl   $0x6f72705f,(%rax)
    4fe5:	66 c7 40 04 70 00    	movw   $0x70,0x4(%rax)
    4feb:	83 85 50 e7 ff ff 01 	addl   $0x1,-0x18b0(%rbp)
    4ff2:	8b 85 50 e7 ff ff    	mov    -0x18b0(%rbp),%eax
    4ff8:	83 f8 02             	cmp    $0x2,%eax
    4ffb:	0f 86 6a ff ff ff    	jbe    4f6b <setup_usercode_mmap+0x5c>
    5001:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    5007:	41 b8 ff ff ff ff    	mov    $0xffffffff,%r8d
    500d:	b9 22 00 00 00       	mov    $0x22,%ecx
    5012:	ba 03 00 00 00       	mov    $0x3,%edx
    5017:	be 00 00 20 00       	mov    $0x200000,%esi
    501c:	bf 00 00 00 00       	mov    $0x0,%edi
    5021:	e8 2a d4 ff ff       	callq  2450 <mmap@plt>
    5026:	48 8b 95 48 e7 ff ff 	mov    -0x18b8(%rbp),%rdx
    502d:	48 89 82 88 00 00 00 	mov    %rax,0x88(%rdx)
    5034:	48 8b 85 48 e7 ff ff 	mov    -0x18b8(%rbp),%rax
    503b:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    5042:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    5046:	75 3d                	jne    5085 <setup_usercode_mmap+0x176>
    5048:	e8 43 d3 ff ff       	callq  2390 <__errno_location@plt>
    504d:	8b 00                	mov    (%rax),%eax
    504f:	89 c7                	mov    %eax,%edi
    5051:	e8 ea d5 ff ff       	callq  2640 <strerror@plt>
    5056:	48 89 c2             	mov    %rax,%rdx
    5059:	be ab 03 00 00       	mov    $0x3ab,%esi
    505e:	48 8d 3d ec 2f 00 00 	lea    0x2fec(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    5065:	b8 00 00 00 00       	mov    $0x0,%eax
    506a:	e8 11 d4 ff ff       	callq  2480 <printf@plt>
    506f:	48 8d 3d aa 38 00 00 	lea    0x38aa(%rip),%rdi        # 8920 <executable+0x3b0>
    5076:	e8 65 d3 ff ff       	callq  23e0 <puts@plt>
    507b:	bf 01 00 00 00       	mov    $0x1,%edi
    5080:	e8 9b d5 ff ff       	callq  2620 <exit@plt>
    5085:	48 8b 85 48 e7 ff ff 	mov    -0x18b8(%rbp),%rax
    508c:	c7 80 ac 00 00 00 00 	movl   $0x0,0xac(%rax)
    5093:	00 00 00 
    5096:	c7 85 50 e7 ff ff 00 	movl   $0x0,-0x18b0(%rbp)
    509d:	00 00 00 
    50a0:	e9 97 02 00 00       	jmpq   533c <setup_usercode_mmap+0x42d>
    50a5:	48 8d 85 f0 e7 ff ff 	lea    -0x1810(%rbp),%rax
    50ac:	8b 95 50 e7 ff ff    	mov    -0x18b0(%rbp),%edx
    50b2:	48 63 d2             	movslq %edx,%rdx
    50b5:	48 c1 e2 0a          	shl    $0xa,%rdx
    50b9:	48 01 d0             	add    %rdx,%rax
    50bc:	be 02 00 00 00       	mov    $0x2,%esi
    50c1:	48 89 c7             	mov    %rax,%rdi
    50c4:	b8 00 00 00 00       	mov    $0x0,%eax
    50c9:	e8 12 d5 ff ff       	callq  25e0 <open@plt>
    50ce:	89 85 54 e7 ff ff    	mov    %eax,-0x18ac(%rbp)
    50d4:	83 bd 54 e7 ff ff ff 	cmpl   $0xffffffff,-0x18ac(%rbp)
    50db:	75 5c                	jne    5139 <setup_usercode_mmap+0x22a>
    50dd:	e8 ae d2 ff ff       	callq  2390 <__errno_location@plt>
    50e2:	8b 00                	mov    (%rax),%eax
    50e4:	89 c7                	mov    %eax,%edi
    50e6:	e8 55 d5 ff ff       	callq  2640 <strerror@plt>
    50eb:	48 89 c2             	mov    %rax,%rdx
    50ee:	be b4 03 00 00       	mov    $0x3b4,%esi
    50f3:	48 8d 3d 57 2f 00 00 	lea    0x2f57(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    50fa:	b8 00 00 00 00       	mov    $0x0,%eax
    50ff:	e8 7c d3 ff ff       	callq  2480 <printf@plt>
    5104:	48 8d 85 f0 e7 ff ff 	lea    -0x1810(%rbp),%rax
    510b:	8b 95 50 e7 ff ff    	mov    -0x18b0(%rbp),%edx
    5111:	48 63 d2             	movslq %edx,%rdx
    5114:	48 c1 e2 0a          	shl    $0xa,%rdx
    5118:	48 01 d0             	add    %rdx,%rax
    511b:	48 89 c6             	mov    %rax,%rsi
    511e:	48 8d 3d 11 38 00 00 	lea    0x3811(%rip),%rdi        # 8936 <executable+0x3c6>
    5125:	b8 00 00 00 00       	mov    $0x0,%eax
    512a:	e8 51 d3 ff ff       	callq  2480 <printf@plt>
    512f:	bf 01 00 00 00       	mov    $0x1,%edi
    5134:	e8 e7 d4 ff ff       	callq  2620 <exit@plt>
    5139:	48 8d 85 f0 f3 ff ff 	lea    -0xc10(%rbp),%rax
    5140:	8b 95 50 e7 ff ff    	mov    -0x18b0(%rbp),%edx
    5146:	48 63 d2             	movslq %edx,%rdx
    5149:	48 c1 e2 0a          	shl    $0xa,%rdx
    514d:	48 01 d0             	add    %rdx,%rax
    5150:	48 8d 35 af 34 00 00 	lea    0x34af(%rip),%rsi        # 8606 <executable+0x96>
    5157:	48 89 c7             	mov    %rax,%rdi
    515a:	e8 91 d4 ff ff       	callq  25f0 <fopen@plt>
    515f:	48 89 85 58 e7 ff ff 	mov    %rax,-0x18a8(%rbp)
    5166:	48 83 bd 58 e7 ff ff 	cmpq   $0x0,-0x18a8(%rbp)
    516d:	00 
    516e:	75 5c                	jne    51cc <setup_usercode_mmap+0x2bd>
    5170:	e8 1b d2 ff ff       	callq  2390 <__errno_location@plt>
    5175:	8b 00                	mov    (%rax),%eax
    5177:	89 c7                	mov    %eax,%edi
    5179:	e8 c2 d4 ff ff       	callq  2640 <strerror@plt>
    517e:	48 89 c2             	mov    %rax,%rdx
    5181:	be b7 03 00 00       	mov    $0x3b7,%esi
    5186:	48 8d 3d c4 2e 00 00 	lea    0x2ec4(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    518d:	b8 00 00 00 00       	mov    $0x0,%eax
    5192:	e8 e9 d2 ff ff       	callq  2480 <printf@plt>
    5197:	48 8d 85 f0 f3 ff ff 	lea    -0xc10(%rbp),%rax
    519e:	8b 95 50 e7 ff ff    	mov    -0x18b0(%rbp),%edx
    51a4:	48 63 d2             	movslq %edx,%rdx
    51a7:	48 c1 e2 0a          	shl    $0xa,%rdx
    51ab:	48 01 d0             	add    %rdx,%rax
    51ae:	48 89 c6             	mov    %rax,%rsi
    51b1:	48 8d 3d 91 37 00 00 	lea    0x3791(%rip),%rdi        # 8949 <executable+0x3d9>
    51b8:	b8 00 00 00 00       	mov    $0x0,%eax
    51bd:	e8 be d2 ff ff       	callq  2480 <printf@plt>
    51c2:	bf 01 00 00 00       	mov    $0x1,%edi
    51c7:	e8 54 d4 ff ff       	callq  2620 <exit@plt>
    51cc:	8b 85 50 e7 ff ff    	mov    -0x18b0(%rbp),%eax
    51d2:	48 98                	cltq   
    51d4:	48 83 c0 3b          	add    $0x3b,%rax
    51d8:	48 c1 e0 04          	shl    $0x4,%rax
    51dc:	48 89 c2             	mov    %rax,%rdx
    51df:	48 8b 85 48 e7 ff ff 	mov    -0x18b8(%rbp),%rax
    51e6:	48 8d 3c 02          	lea    (%rdx,%rax,1),%rdi
    51ea:	48 8b 85 58 e7 ff ff 	mov    -0x18a8(%rbp),%rax
    51f1:	48 89 c1             	mov    %rax,%rcx
    51f4:	ba 01 00 00 00       	mov    $0x1,%edx
    51f9:	be 10 00 00 00       	mov    $0x10,%esi
    51fe:	e8 ed d1 ff ff       	callq  23f0 <fread@plt>
    5203:	48 8d 95 60 e7 ff ff 	lea    -0x18a0(%rbp),%rdx
    520a:	8b 85 54 e7 ff ff    	mov    -0x18ac(%rbp),%eax
    5210:	48 89 d6             	mov    %rdx,%rsi
    5213:	89 c7                	mov    %eax,%edi
    5215:	e8 46 26 00 00       	callq  7860 <__fstat>
    521a:	48 8b 85 90 e7 ff ff 	mov    -0x1870(%rbp),%rax
    5221:	48 89 c6             	mov    %rax,%rsi
    5224:	8b 85 54 e7 ff ff    	mov    -0x18ac(%rbp),%eax
    522a:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    5230:	41 89 c0             	mov    %eax,%r8d
    5233:	b9 02 00 00 00       	mov    $0x2,%ecx
    5238:	ba 03 00 00 00       	mov    $0x3,%edx
    523d:	bf 00 00 00 00       	mov    $0x0,%edi
    5242:	e8 09 d2 ff ff       	callq  2450 <mmap@plt>
    5247:	48 8b 95 48 e7 ff ff 	mov    -0x18b8(%rbp),%rdx
    524e:	8b 8d 50 e7 ff ff    	mov    -0x18b0(%rbp),%ecx
    5254:	48 63 c9             	movslq %ecx,%rcx
    5257:	48 83 c1 16          	add    $0x16,%rcx
    525b:	48 89 04 ca          	mov    %rax,(%rdx,%rcx,8)
    525f:	48 8b 85 48 e7 ff ff 	mov    -0x18b8(%rbp),%rax
    5266:	8b 95 50 e7 ff ff    	mov    -0x18b0(%rbp),%edx
    526c:	48 63 d2             	movslq %edx,%rdx
    526f:	48 83 c2 16          	add    $0x16,%rdx
    5273:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    5277:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    527b:	75 5c                	jne    52d9 <setup_usercode_mmap+0x3ca>
    527d:	e8 0e d1 ff ff       	callq  2390 <__errno_location@plt>
    5282:	8b 00                	mov    (%rax),%eax
    5284:	89 c7                	mov    %eax,%edi
    5286:	e8 b5 d3 ff ff       	callq  2640 <strerror@plt>
    528b:	48 89 c2             	mov    %rax,%rdx
    528e:	be bf 03 00 00       	mov    $0x3bf,%esi
    5293:	48 8d 3d b7 2d 00 00 	lea    0x2db7(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    529a:	b8 00 00 00 00       	mov    $0x0,%eax
    529f:	e8 dc d1 ff ff       	callq  2480 <printf@plt>
    52a4:	48 8d 85 f0 e7 ff ff 	lea    -0x1810(%rbp),%rax
    52ab:	8b 95 50 e7 ff ff    	mov    -0x18b0(%rbp),%edx
    52b1:	48 63 d2             	movslq %edx,%rdx
    52b4:	48 c1 e2 0a          	shl    $0xa,%rdx
    52b8:	48 01 d0             	add    %rdx,%rax
    52bb:	48 89 c6             	mov    %rax,%rsi
    52be:	48 8d 3d 94 36 00 00 	lea    0x3694(%rip),%rdi        # 8959 <executable+0x3e9>
    52c5:	b8 00 00 00 00       	mov    $0x0,%eax
    52ca:	e8 b1 d1 ff ff       	callq  2480 <printf@plt>
    52cf:	bf 01 00 00 00       	mov    $0x1,%edi
    52d4:	e8 47 d3 ff ff       	callq  2620 <exit@plt>
    52d9:	8b 85 54 e7 ff ff    	mov    -0x18ac(%rbp),%eax
    52df:	89 c7                	mov    %eax,%edi
    52e1:	e8 ea d1 ff ff       	callq  24d0 <close@plt>
    52e6:	48 8b 85 58 e7 ff ff 	mov    -0x18a8(%rbp),%rax
    52ed:	48 89 c7             	mov    %rax,%rdi
    52f0:	e8 2b d1 ff ff       	callq  2420 <fclose@plt>
    52f5:	48 8b 85 90 e7 ff ff 	mov    -0x1870(%rbp),%rax
    52fc:	89 c1                	mov    %eax,%ecx
    52fe:	48 8b 85 48 e7 ff ff 	mov    -0x18b8(%rbp),%rax
    5305:	8b 95 50 e7 ff ff    	mov    -0x18b0(%rbp),%edx
    530b:	48 63 d2             	movslq %edx,%rdx
    530e:	48 81 c2 ac 00 00 00 	add    $0xac,%rdx
    5315:	89 0c 90             	mov    %ecx,(%rax,%rdx,4)
    5318:	48 8b 85 48 e7 ff ff 	mov    -0x18b8(%rbp),%rax
    531f:	8b 80 ac 00 00 00    	mov    0xac(%rax),%eax
    5325:	8d 50 01             	lea    0x1(%rax),%edx
    5328:	48 8b 85 48 e7 ff ff 	mov    -0x18b8(%rbp),%rax
    532f:	89 90 ac 00 00 00    	mov    %edx,0xac(%rax)
    5335:	83 85 50 e7 ff ff 01 	addl   $0x1,-0x18b0(%rbp)
    533c:	8b 85 50 e7 ff ff    	mov    -0x18b0(%rbp),%eax
    5342:	83 f8 02             	cmp    $0x2,%eax
    5345:	0f 86 5a fd ff ff    	jbe    50a5 <setup_usercode_mmap+0x196>
    534b:	90                   	nop
    534c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    5350:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    5357:	00 00 
    5359:	74 05                	je     5360 <setup_usercode_mmap+0x451>
    535b:	e8 e0 d0 ff ff       	callq  2440 <__stack_chk_fail@plt>
    5360:	c9                   	leaveq 
    5361:	c3                   	retq   

0000000000005362 <register_umem>:
    5362:	f3 0f 1e fa          	endbr64 
    5366:	55                   	push   %rbp
    5367:	48 89 e5             	mov    %rsp,%rbp
    536a:	48 83 ec 40          	sub    $0x40,%rsp
    536e:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    5372:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5379:	00 00 
    537b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    537f:	31 c0                	xor    %eax,%eax
    5381:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5385:	8b 40 0c             	mov    0xc(%rax),%eax
    5388:	8d 48 01             	lea    0x1(%rax),%ecx
    538b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    538f:	89 4a 0c             	mov    %ecx,0xc(%rdx)
    5392:	89 45 d0             	mov    %eax,-0x30(%rbp)
    5395:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    539c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    53a0:	8b 40 58             	mov    0x58(%rax),%eax
    53a3:	89 c0                	mov    %eax,%eax
    53a5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    53a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    53ad:	8b 40 68             	mov    0x68(%rax),%eax
    53b0:	89 c0                	mov    %eax,%eax
    53b2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    53b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    53ba:	48 8b 40 60          	mov    0x60(%rax),%rax
    53be:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    53c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    53c6:	8b 40 04             	mov    0x4(%rax),%eax
    53c9:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    53cd:	be 46 ae 20 40       	mov    $0x4020ae46,%esi
    53d2:	89 c7                	mov    %eax,%edi
    53d4:	b8 00 00 00 00       	mov    $0x0,%eax
    53d9:	e8 e2 d0 ff ff       	callq  24c0 <ioctl@plt>
    53de:	85 c0                	test   %eax,%eax
    53e0:	79 3d                	jns    541f <register_umem+0xbd>
    53e2:	e8 a9 cf ff ff       	callq  2390 <__errno_location@plt>
    53e7:	8b 00                	mov    (%rax),%eax
    53e9:	89 c7                	mov    %eax,%edi
    53eb:	e8 50 d2 ff ff       	callq  2640 <strerror@plt>
    53f0:	48 89 c2             	mov    %rax,%rdx
    53f3:	be d1 03 00 00       	mov    $0x3d1,%esi
    53f8:	48 8d 3d 52 2c 00 00 	lea    0x2c52(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    53ff:	b8 00 00 00 00       	mov    $0x0,%eax
    5404:	e8 77 d0 ff ff       	callq  2480 <printf@plt>
    5409:	48 8d 3d 50 2f 00 00 	lea    0x2f50(%rip),%rdi        # 8360 <_IO_stdin_used+0x360>
    5410:	e8 cb cf ff ff       	callq  23e0 <puts@plt>
    5415:	bf 01 00 00 00       	mov    $0x1,%edi
    541a:	e8 01 d2 ff ff       	callq  2620 <exit@plt>
    541f:	90                   	nop
    5420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5424:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    542b:	00 00 
    542d:	74 05                	je     5434 <register_umem+0xd2>
    542f:	e8 0c d0 ff ff       	callq  2440 <__stack_chk_fail@plt>
    5434:	c9                   	leaveq 
    5435:	c3                   	retq   

0000000000005436 <register_umem_mmap>:
    5436:	f3 0f 1e fa          	endbr64 
    543a:	55                   	push   %rbp
    543b:	48 89 e5             	mov    %rsp,%rbp
    543e:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    5445:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    544c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5453:	00 00 
    5455:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5459:	31 c0                	xor    %eax,%eax
    545b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5462:	8b 40 58             	mov    0x58(%rax),%eax
    5465:	89 c0                	mov    %eax,%eax
    5467:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    546b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5472:	48 8b 40 38          	mov    0x38(%rax),%rax
    5476:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    547a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5481:	48 8b 40 50          	mov    0x50(%rax),%rax
    5485:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5489:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5490:	8b 40 0c             	mov    0xc(%rax),%eax
    5493:	8d 48 01             	lea    0x1(%rax),%ecx
    5496:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    549d:	89 4a 0c             	mov    %ecx,0xc(%rdx)
    54a0:	89 45 c0             	mov    %eax,-0x40(%rbp)
    54a3:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    54aa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    54ae:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    54b2:	48 c7 45 d0 00 00 20 	movq   $0x200000,-0x30(%rbp)
    54b9:	00 
    54ba:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    54c1:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    54c8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    54cc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    54d3:	8b 40 04             	mov    0x4(%rax),%eax
    54d6:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    54da:	be 46 ae 20 40       	mov    $0x4020ae46,%esi
    54df:	89 c7                	mov    %eax,%edi
    54e1:	b8 00 00 00 00       	mov    $0x0,%eax
    54e6:	e8 d5 cf ff ff       	callq  24c0 <ioctl@plt>
    54eb:	85 c0                	test   %eax,%eax
    54ed:	79 3d                	jns    552c <register_umem_mmap+0xf6>
    54ef:	e8 9c ce ff ff       	callq  2390 <__errno_location@plt>
    54f4:	8b 00                	mov    (%rax),%eax
    54f6:	89 c7                	mov    %eax,%edi
    54f8:	e8 43 d1 ff ff       	callq  2640 <strerror@plt>
    54fd:	48 89 c2             	mov    %rax,%rdx
    5500:	be eb 03 00 00       	mov    $0x3eb,%esi
    5505:	48 8d 3d 45 2b 00 00 	lea    0x2b45(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    550c:	b8 00 00 00 00       	mov    $0x0,%eax
    5511:	e8 6a cf ff ff       	callq  2480 <printf@plt>
    5516:	48 8d 3d 43 2e 00 00 	lea    0x2e43(%rip),%rdi        # 8360 <_IO_stdin_used+0x360>
    551d:	e8 be ce ff ff       	callq  23e0 <puts@plt>
    5522:	bf 01 00 00 00       	mov    $0x1,%edi
    5527:	e8 f4 d0 ff ff       	callq  2620 <exit@plt>
    552c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5530:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    5534:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5538:	48 01 45 a0          	add    %rax,-0x60(%rbp)
    553c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5540:	48 05 ff ff 1f 00    	add    $0x1fffff,%rax
    5546:	48 25 00 00 e0 ff    	and    $0xffffffffffe00000,%rax
    554c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    5550:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
    5557:	e9 35 02 00 00       	jmpq   5791 <register_umem_mmap+0x35b>
    555c:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5563:	8b 40 0c             	mov    0xc(%rax),%eax
    5566:	8d 48 01             	lea    0x1(%rax),%ecx
    5569:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    5570:	89 4a 0c             	mov    %ecx,0xc(%rdx)
    5573:	89 45 c0             	mov    %eax,-0x40(%rbp)
    5576:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    557d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5581:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    5585:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    558c:	8b 55 8c             	mov    -0x74(%rbp),%edx
    558f:	48 63 d2             	movslq %edx,%rdx
    5592:	48 81 c2 ac 00 00 00 	add    $0xac,%rdx
    5599:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    559c:	48 98                	cltq   
    559e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    55a2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    55a9:	8b 55 8c             	mov    -0x74(%rbp),%edx
    55ac:	48 63 d2             	movslq %edx,%rdx
    55af:	48 83 c2 16          	add    $0x16,%rdx
    55b3:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    55b7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    55bb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    55c2:	8b 40 04             	mov    0x4(%rax),%eax
    55c5:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    55c9:	be 46 ae 20 40       	mov    $0x4020ae46,%esi
    55ce:	89 c7                	mov    %eax,%edi
    55d0:	b8 00 00 00 00       	mov    $0x0,%eax
    55d5:	e8 e6 ce ff ff       	callq  24c0 <ioctl@plt>
    55da:	85 c0                	test   %eax,%eax
    55dc:	79 3d                	jns    561b <register_umem_mmap+0x1e5>
    55de:	e8 ad cd ff ff       	callq  2390 <__errno_location@plt>
    55e3:	8b 00                	mov    (%rax),%eax
    55e5:	89 c7                	mov    %eax,%edi
    55e7:	e8 54 d0 ff ff       	callq  2640 <strerror@plt>
    55ec:	48 89 c2             	mov    %rax,%rdx
    55ef:	be 00 04 00 00       	mov    $0x400,%esi
    55f4:	48 8d 3d 56 2a 00 00 	lea    0x2a56(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    55fb:	b8 00 00 00 00       	mov    $0x0,%eax
    5600:	e8 7b ce ff ff       	callq  2480 <printf@plt>
    5605:	48 8d 3d 54 2d 00 00 	lea    0x2d54(%rip),%rdi        # 8360 <_IO_stdin_used+0x360>
    560c:	e8 cf cd ff ff       	callq  23e0 <puts@plt>
    5611:	bf 01 00 00 00       	mov    $0x1,%edi
    5616:	e8 05 d0 ff ff       	callq  2620 <exit@plt>
    561b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    561f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    5623:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5627:	48 01 45 a0          	add    %rax,-0x60(%rbp)
    562b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    562f:	48 05 ff ff 1f 00    	add    $0x1fffff,%rax
    5635:	48 25 00 00 e0 ff    	and    $0xffffffffffe00000,%rax
    563b:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    563f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5646:	48 8b b0 b0 07 00 00 	mov    0x7b0(%rax),%rsi
    564d:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    5651:	8b 45 8c             	mov    -0x74(%rbp),%eax
    5654:	48 63 d0             	movslq %eax,%rdx
    5657:	48 89 d0             	mov    %rdx,%rax
    565a:	48 01 c0             	add    %rax,%rax
    565d:	48 01 d0             	add    %rdx,%rax
    5660:	48 c1 e0 03          	shl    $0x3,%rax
    5664:	48 01 f0             	add    %rsi,%rax
    5667:	48 89 08             	mov    %rcx,(%rax)
    566a:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5671:	48 8b b0 b0 07 00 00 	mov    0x7b0(%rax),%rsi
    5678:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    567f:	8b 55 8c             	mov    -0x74(%rbp),%edx
    5682:	48 63 d2             	movslq %edx,%rdx
    5685:	48 83 c2 3b          	add    $0x3b,%rdx
    5689:	48 c1 e2 04          	shl    $0x4,%rdx
    568d:	48 01 d0             	add    %rdx,%rax
    5690:	48 83 c0 08          	add    $0x8,%rax
    5694:	48 8b 08             	mov    (%rax),%rcx
    5697:	8b 45 8c             	mov    -0x74(%rbp),%eax
    569a:	48 63 d0             	movslq %eax,%rdx
    569d:	48 89 d0             	mov    %rdx,%rax
    56a0:	48 01 c0             	add    %rax,%rax
    56a3:	48 01 d0             	add    %rdx,%rax
    56a6:	48 c1 e0 03          	shl    $0x3,%rax
    56aa:	48 01 f0             	add    %rsi,%rax
    56ad:	48 83 c0 10          	add    $0x10,%rax
    56b1:	48 89 08             	mov    %rcx,(%rax)
    56b4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    56bb:	48 8b b0 b0 07 00 00 	mov    0x7b0(%rax),%rsi
    56c2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    56c9:	8b 55 8c             	mov    -0x74(%rbp),%edx
    56cc:	48 63 d2             	movslq %edx,%rdx
    56cf:	48 83 c2 3b          	add    $0x3b,%rdx
    56d3:	48 c1 e2 04          	shl    $0x4,%rdx
    56d7:	48 01 d0             	add    %rdx,%rax
    56da:	48 8b 08             	mov    (%rax),%rcx
    56dd:	8b 45 8c             	mov    -0x74(%rbp),%eax
    56e0:	48 63 d0             	movslq %eax,%rdx
    56e3:	48 89 d0             	mov    %rdx,%rax
    56e6:	48 01 c0             	add    %rax,%rax
    56e9:	48 01 d0             	add    %rdx,%rax
    56ec:	48 c1 e0 03          	shl    $0x3,%rax
    56f0:	48 01 f0             	add    %rsi,%rax
    56f3:	48 83 c0 08          	add    $0x8,%rax
    56f7:	48 89 08             	mov    %rcx,(%rax)
    56fa:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5701:	8b 55 8c             	mov    -0x74(%rbp),%edx
    5704:	48 63 d2             	movslq %edx,%rdx
    5707:	48 81 c2 ac 00 00 00 	add    $0xac,%rdx
    570e:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    5711:	05 ff ff 1f 00       	add    $0x1fffff,%eax
    5716:	8d 90 ff ff 1f 00    	lea    0x1fffff(%rax),%edx
    571c:	85 c0                	test   %eax,%eax
    571e:	0f 48 c2             	cmovs  %edx,%eax
    5721:	c1 f8 15             	sar    $0x15,%eax
    5724:	89 45 94             	mov    %eax,-0x6c(%rbp)
    5727:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    572b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    572f:	48 01 d0             	add    %rdx,%rax
    5732:	48 89 c2             	mov    %rax,%rdx
    5735:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5739:	0c 87                	or     $0x87,%al
    573b:	48 89 02             	mov    %rax,(%rdx)
    573e:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)
    5745:	eb 36                	jmp    577d <register_umem_mmap+0x347>
    5747:	8b 45 90             	mov    -0x70(%rbp),%eax
    574a:	48 98                	cltq   
    574c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    5753:	00 
    5754:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    5758:	48 01 d0             	add    %rdx,%rax
    575b:	48 89 c2             	mov    %rax,%rdx
    575e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    5762:	48 01 d0             	add    %rdx,%rax
    5765:	48 89 c2             	mov    %rax,%rdx
    5768:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    576c:	0c 87                	or     $0x87,%al
    576e:	48 89 02             	mov    %rax,(%rdx)
    5771:	48 81 45 a8 00 00 20 	addq   $0x200000,-0x58(%rbp)
    5778:	00 
    5779:	83 45 90 01          	addl   $0x1,-0x70(%rbp)
    577d:	8b 45 90             	mov    -0x70(%rbp),%eax
    5780:	3b 45 94             	cmp    -0x6c(%rbp),%eax
    5783:	7e c2                	jle    5747 <register_umem_mmap+0x311>
    5785:	48 81 45 98 00 10 00 	addq   $0x1000,-0x68(%rbp)
    578c:	00 
    578d:	83 45 8c 01          	addl   $0x1,-0x74(%rbp)
    5791:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5798:	8b 80 ac 00 00 00    	mov    0xac(%rax),%eax
    579e:	39 45 8c             	cmp    %eax,-0x74(%rbp)
    57a1:	0f 8c b5 fd ff ff    	jl     555c <register_umem_mmap+0x126>
    57a7:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    57ae:	48 8b 80 b0 07 00 00 	mov    0x7b0(%rax),%rax
    57b5:	c6 80 58 06 00 00 03 	movb   $0x3,0x658(%rax)
    57bc:	66 c7 45 e0 00 00    	movw   $0x0,-0x20(%rbp)
    57c2:	66 c7 45 e2 01 00    	movw   $0x1,-0x1e(%rbp)
    57c8:	66 c7 45 e4 01 00    	movw   $0x1,-0x1c(%rbp)
    57ce:	66 c7 45 e6 00 00    	movw   $0x0,-0x1a(%rbp)
    57d4:	66 c7 45 e8 01 00    	movw   $0x1,-0x18(%rbp)
    57da:	66 c7 45 ea 02 00    	movw   $0x2,-0x16(%rbp)
    57e0:	66 c7 45 ec 02 00    	movw   $0x2,-0x14(%rbp)
    57e6:	66 c7 45 ee 01 00    	movw   $0x1,-0x12(%rbp)
    57ec:	66 c7 45 f0 02 00    	movw   $0x2,-0x10(%rbp)
    57f2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    57f9:	48 8b 80 b0 07 00 00 	mov    0x7b0(%rax),%rax
    5800:	48 8d 88 5a 06 00 00 	lea    0x65a(%rax),%rcx
    5807:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    580b:	ba 12 00 00 00       	mov    $0x12,%edx
    5810:	48 89 c6             	mov    %rax,%rsi
    5813:	48 89 cf             	mov    %rcx,%rdi
    5816:	e8 15 cd ff ff       	callq  2530 <memcpy@plt>
    581b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5822:	48 8b 80 b0 07 00 00 	mov    0x7b0(%rax),%rax
    5829:	48 05 10 06 00 00    	add    $0x610,%rax
    582f:	ba 40 00 00 00       	mov    $0x40,%edx
    5834:	be ff 00 00 00       	mov    $0xff,%esi
    5839:	48 89 c7             	mov    %rax,%rdi
    583c:	e8 6f cc ff ff       	callq  24b0 <memset@plt>
    5841:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    5848:	48 8b 80 b0 07 00 00 	mov    0x7b0(%rax),%rax
    584f:	c6 80 59 06 00 00 00 	movb   $0x0,0x659(%rax)
    5856:	90                   	nop
    5857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    585b:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    5862:	00 00 
    5864:	74 05                	je     586b <register_umem_mmap+0x435>
    5866:	e8 d5 cb ff ff       	callq  2440 <__stack_chk_fail@plt>
    586b:	c9                   	leaveq 
    586c:	c3                   	retq   

000000000000586d <timer_event_loop>:
    586d:	f3 0f 1e fa          	endbr64 
    5871:	55                   	push   %rbp
    5872:	48 89 e5             	mov    %rsp,%rbp
    5875:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5879:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    587d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    5881:	b8 00 00 00 00       	mov    $0x0,%eax
    5886:	5d                   	pop    %rbp
    5887:	c3                   	retq   

0000000000005888 <setup_irqfd>:
    5888:	f3 0f 1e fa          	endbr64 
    588c:	55                   	push   %rbp
    588d:	48 89 e5             	mov    %rsp,%rbp
    5890:	48 83 ec 40          	sub    $0x40,%rsp
    5894:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    5898:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    589b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    58a2:	00 00 
    58a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    58a8:	31 c0                	xor    %eax,%eax
    58aa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    58ae:	ba 20 00 00 00       	mov    $0x20,%edx
    58b3:	be 00 00 00 00       	mov    $0x0,%esi
    58b8:	48 89 c7             	mov    %rax,%rdi
    58bb:	e8 f0 cb ff ff       	callq  24b0 <memset@plt>
    58c0:	be 00 00 00 00       	mov    $0x0,%esi
    58c5:	bf 00 00 00 00       	mov    $0x0,%edi
    58ca:	e8 61 cd ff ff       	callq  2630 <eventfd@plt>
    58cf:	89 45 d0             	mov    %eax,-0x30(%rbp)
    58d2:	8b 45 d0             	mov    -0x30(%rbp),%eax
    58d5:	83 f8 ff             	cmp    $0xffffffff,%eax
    58d8:	75 3d                	jne    5917 <setup_irqfd+0x8f>
    58da:	e8 b1 ca ff ff       	callq  2390 <__errno_location@plt>
    58df:	8b 00                	mov    (%rax),%eax
    58e1:	89 c7                	mov    %eax,%edi
    58e3:	e8 58 cd ff ff       	callq  2640 <strerror@plt>
    58e8:	48 89 c2             	mov    %rax,%rdx
    58eb:	be 89 04 00 00       	mov    $0x489,%esi
    58f0:	48 8d 3d 5a 27 00 00 	lea    0x275a(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    58f7:	b8 00 00 00 00       	mov    $0x0,%eax
    58fc:	e8 7f cb ff ff       	callq  2480 <printf@plt>
    5901:	48 8d 3d 78 3c 00 00 	lea    0x3c78(%rip),%rdi        # 9580 <executable+0x1010>
    5908:	e8 d3 ca ff ff       	callq  23e0 <puts@plt>
    590d:	bf 01 00 00 00       	mov    $0x1,%edi
    5912:	e8 09 cd ff ff       	callq  2620 <exit@plt>
    5917:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    591a:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    591d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5921:	8b 40 04             	mov    0x4(%rax),%eax
    5924:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    5928:	be 76 ae 20 40       	mov    $0x4020ae76,%esi
    592d:	89 c7                	mov    %eax,%edi
    592f:	b8 00 00 00 00       	mov    $0x0,%eax
    5934:	e8 87 cb ff ff       	callq  24c0 <ioctl@plt>
    5939:	85 c0                	test   %eax,%eax
    593b:	74 47                	je     5984 <setup_irqfd+0xfc>
    593d:	e8 4e ca ff ff       	callq  2390 <__errno_location@plt>
    5942:	8b 00                	mov    (%rax),%eax
    5944:	89 c7                	mov    %eax,%edi
    5946:	e8 f5 cc ff ff       	callq  2640 <strerror@plt>
    594b:	48 89 c2             	mov    %rax,%rdx
    594e:	be 8d 04 00 00       	mov    $0x48d,%esi
    5953:	48 8d 3d f7 26 00 00 	lea    0x26f7(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    595a:	b8 00 00 00 00       	mov    $0x0,%eax
    595f:	e8 1c cb ff ff       	callq  2480 <printf@plt>
    5964:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    5967:	89 c6                	mov    %eax,%esi
    5969:	48 8d 3d 30 3c 00 00 	lea    0x3c30(%rip),%rdi        # 95a0 <executable+0x1030>
    5970:	b8 00 00 00 00       	mov    $0x0,%eax
    5975:	e8 06 cb ff ff       	callq  2480 <printf@plt>
    597a:	bf 01 00 00 00       	mov    $0x1,%edi
    597f:	e8 9c cc ff ff       	callq  2620 <exit@plt>
    5984:	8b 45 d0             	mov    -0x30(%rbp),%eax
    5987:	89 c2                	mov    %eax,%edx
    5989:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    598d:	89 90 80 00 00 00    	mov    %edx,0x80(%rax)
    5993:	90                   	nop
    5994:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5998:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    599f:	00 00 
    59a1:	74 05                	je     59a8 <setup_irqfd+0x120>
    59a3:	e8 98 ca ff ff       	callq  2440 <__stack_chk_fail@plt>
    59a8:	c9                   	leaveq 
    59a9:	c3                   	retq   

00000000000059aa <sock_loop>:
    59aa:	f3 0f 1e fa          	endbr64 
    59ae:	55                   	push   %rbp
    59af:	48 89 e5             	mov    %rsp,%rbp
    59b2:	48 83 ec 40          	sub    $0x40,%rsp
    59b6:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    59ba:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    59c1:	00 00 
    59c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    59c7:	31 c0                	xor    %eax,%eax
    59c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    59cd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    59d1:	b8 00 00 00 00       	mov    $0x0,%eax
    59d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    59da:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    59e1:	00 00 
    59e3:	74 05                	je     59ea <sock_loop+0x40>
    59e5:	e8 56 ca ff ff       	callq  2440 <__stack_chk_fail@plt>
    59ea:	c9                   	leaveq 
    59eb:	c3                   	retq   

00000000000059ec <setup_device_loop>:
    59ec:	f3 0f 1e fa          	endbr64 
    59f0:	55                   	push   %rbp
    59f1:	48 89 e5             	mov    %rsp,%rbp
    59f4:	48 83 ec 10          	sub    $0x10,%rsp
    59f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a00:	48 8d 78 70          	lea    0x70(%rax),%rdi
    5a04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a08:	48 89 c1             	mov    %rax,%rcx
    5a0b:	48 8d 15 5b fe ff ff 	lea    -0x1a5(%rip),%rdx        # 586d <timer_event_loop>
    5a12:	be 00 00 00 00       	mov    $0x0,%esi
    5a17:	e8 64 c9 ff ff       	callq  2380 <pthread_create@plt>
    5a1c:	85 c0                	test   %eax,%eax
    5a1e:	74 3d                	je     5a5d <setup_device_loop+0x71>
    5a20:	e8 6b c9 ff ff       	callq  2390 <__errno_location@plt>
    5a25:	8b 00                	mov    (%rax),%eax
    5a27:	89 c7                	mov    %eax,%edi
    5a29:	e8 12 cc ff ff       	callq  2640 <strerror@plt>
    5a2e:	48 89 c2             	mov    %rax,%rdx
    5a31:	be b7 04 00 00       	mov    $0x4b7,%esi
    5a36:	48 8d 3d 14 26 00 00 	lea    0x2614(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    5a3d:	b8 00 00 00 00       	mov    $0x0,%eax
    5a42:	e8 39 ca ff ff       	callq  2480 <printf@plt>
    5a47:	48 8d 3d 7c 3b 00 00 	lea    0x3b7c(%rip),%rdi        # 95ca <executable+0x105a>
    5a4e:	e8 8d c9 ff ff       	callq  23e0 <puts@plt>
    5a53:	bf 01 00 00 00       	mov    $0x1,%edi
    5a58:	e8 c3 cb ff ff       	callq  2620 <exit@plt>
    5a5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a61:	48 8d 78 78          	lea    0x78(%rax),%rdi
    5a65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a69:	48 89 c1             	mov    %rax,%rcx
    5a6c:	48 8d 15 37 ff ff ff 	lea    -0xc9(%rip),%rdx        # 59aa <sock_loop>
    5a73:	be 00 00 00 00       	mov    $0x0,%esi
    5a78:	e8 03 c9 ff ff       	callq  2380 <pthread_create@plt>
    5a7d:	85 c0                	test   %eax,%eax
    5a7f:	74 3d                	je     5abe <setup_device_loop+0xd2>
    5a81:	e8 0a c9 ff ff       	callq  2390 <__errno_location@plt>
    5a86:	8b 00                	mov    (%rax),%eax
    5a88:	89 c7                	mov    %eax,%edi
    5a8a:	e8 b1 cb ff ff       	callq  2640 <strerror@plt>
    5a8f:	48 89 c2             	mov    %rax,%rdx
    5a92:	be b9 04 00 00       	mov    $0x4b9,%esi
    5a97:	48 8d 3d b3 25 00 00 	lea    0x25b3(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    5a9e:	b8 00 00 00 00       	mov    $0x0,%eax
    5aa3:	e8 d8 c9 ff ff       	callq  2480 <printf@plt>
    5aa8:	48 8d 3d 1b 3b 00 00 	lea    0x3b1b(%rip),%rdi        # 95ca <executable+0x105a>
    5aaf:	e8 2c c9 ff ff       	callq  23e0 <puts@plt>
    5ab4:	bf 01 00 00 00       	mov    $0x1,%edi
    5ab9:	e8 62 cb ff ff       	callq  2620 <exit@plt>
    5abe:	90                   	nop
    5abf:	c9                   	leaveq 
    5ac0:	c3                   	retq   

0000000000005ac1 <print_segment>:
    5ac1:	f3 0f 1e fa          	endbr64 
    5ac5:	55                   	push   %rbp
    5ac6:	48 89 e5             	mov    %rsp,%rbp
    5ac9:	48 83 ec 10          	sub    $0x10,%rsp
    5acd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ad1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ad5:	48 8b 00             	mov    (%rax),%rax
    5ad8:	48 89 c6             	mov    %rax,%rsi
    5adb:	48 8d 3d 06 3b 00 00 	lea    0x3b06(%rip),%rdi        # 95e8 <executable+0x1078>
    5ae2:	b8 00 00 00 00       	mov    $0x0,%eax
    5ae7:	e8 94 c9 ff ff       	callq  2480 <printf@plt>
    5aec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5af0:	8b 40 08             	mov    0x8(%rax),%eax
    5af3:	89 c6                	mov    %eax,%esi
    5af5:	48 8d 3d fc 3a 00 00 	lea    0x3afc(%rip),%rdi        # 95f8 <executable+0x1088>
    5afc:	b8 00 00 00 00       	mov    $0x0,%eax
    5b01:	e8 7a c9 ff ff       	callq  2480 <printf@plt>
    5b06:	90                   	nop
    5b07:	c9                   	leaveq 
    5b08:	c3                   	retq   

0000000000005b09 <print_cpuid_output>:
    5b09:	f3 0f 1e fa          	endbr64 
    5b0d:	55                   	push   %rbp
    5b0e:	48 89 e5             	mov    %rsp,%rbp
    5b11:	48 83 ec 20          	sub    $0x20,%rsp
    5b15:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5b19:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    5b20:	e9 86 01 00 00       	jmpq   5cab <print_cpuid_output+0x1a2>
    5b25:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5b28:	89 c6                	mov    %eax,%esi
    5b2a:	48 8d 3d d7 3a 00 00 	lea    0x3ad7(%rip),%rdi        # 9608 <executable+0x1098>
    5b31:	b8 00 00 00 00       	mov    $0x0,%eax
    5b36:	e8 45 c9 ff ff       	callq  2480 <printf@plt>
    5b3b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5b3f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5b42:	48 63 d0             	movslq %eax,%rdx
    5b45:	48 89 d0             	mov    %rdx,%rax
    5b48:	48 c1 e0 02          	shl    $0x2,%rax
    5b4c:	48 01 d0             	add    %rdx,%rax
    5b4f:	48 c1 e0 03          	shl    $0x3,%rax
    5b53:	48 01 c8             	add    %rcx,%rax
    5b56:	48 83 c0 08          	add    $0x8,%rax
    5b5a:	8b 00                	mov    (%rax),%eax
    5b5c:	89 c6                	mov    %eax,%esi
    5b5e:	48 8d 3d c9 3a 00 00 	lea    0x3ac9(%rip),%rdi        # 962e <executable+0x10be>
    5b65:	b8 00 00 00 00       	mov    $0x0,%eax
    5b6a:	e8 11 c9 ff ff       	callq  2480 <printf@plt>
    5b6f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5b73:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5b76:	48 63 d0             	movslq %eax,%rdx
    5b79:	48 89 d0             	mov    %rdx,%rax
    5b7c:	48 c1 e0 02          	shl    $0x2,%rax
    5b80:	48 01 d0             	add    %rdx,%rax
    5b83:	48 c1 e0 03          	shl    $0x3,%rax
    5b87:	48 01 c8             	add    %rcx,%rax
    5b8a:	48 83 c0 0c          	add    $0xc,%rax
    5b8e:	8b 00                	mov    (%rax),%eax
    5b90:	89 c6                	mov    %eax,%esi
    5b92:	48 8d 3d ab 3a 00 00 	lea    0x3aab(%rip),%rdi        # 9644 <executable+0x10d4>
    5b99:	b8 00 00 00 00       	mov    $0x0,%eax
    5b9e:	e8 dd c8 ff ff       	callq  2480 <printf@plt>
    5ba3:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5ba7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5baa:	48 63 d0             	movslq %eax,%rdx
    5bad:	48 89 d0             	mov    %rdx,%rax
    5bb0:	48 c1 e0 02          	shl    $0x2,%rax
    5bb4:	48 01 d0             	add    %rdx,%rax
    5bb7:	48 c1 e0 03          	shl    $0x3,%rax
    5bbb:	48 01 c8             	add    %rcx,%rax
    5bbe:	48 83 c0 10          	add    $0x10,%rax
    5bc2:	8b 00                	mov    (%rax),%eax
    5bc4:	89 c6                	mov    %eax,%esi
    5bc6:	48 8d 3d 8d 3a 00 00 	lea    0x3a8d(%rip),%rdi        # 965a <executable+0x10ea>
    5bcd:	b8 00 00 00 00       	mov    $0x0,%eax
    5bd2:	e8 a9 c8 ff ff       	callq  2480 <printf@plt>
    5bd7:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5bdb:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5bde:	48 63 d0             	movslq %eax,%rdx
    5be1:	48 89 d0             	mov    %rdx,%rax
    5be4:	48 c1 e0 02          	shl    $0x2,%rax
    5be8:	48 01 d0             	add    %rdx,%rax
    5beb:	48 c1 e0 03          	shl    $0x3,%rax
    5bef:	48 01 c8             	add    %rcx,%rax
    5bf2:	48 83 c0 14          	add    $0x14,%rax
    5bf6:	8b 00                	mov    (%rax),%eax
    5bf8:	89 c6                	mov    %eax,%esi
    5bfa:	48 8d 3d 6f 3a 00 00 	lea    0x3a6f(%rip),%rdi        # 9670 <executable+0x1100>
    5c01:	b8 00 00 00 00       	mov    $0x0,%eax
    5c06:	e8 75 c8 ff ff       	callq  2480 <printf@plt>
    5c0b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5c0f:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5c12:	48 63 d0             	movslq %eax,%rdx
    5c15:	48 89 d0             	mov    %rdx,%rax
    5c18:	48 c1 e0 02          	shl    $0x2,%rax
    5c1c:	48 01 d0             	add    %rdx,%rax
    5c1f:	48 c1 e0 03          	shl    $0x3,%rax
    5c23:	48 01 c8             	add    %rcx,%rax
    5c26:	48 83 c0 18          	add    $0x18,%rax
    5c2a:	8b 00                	mov    (%rax),%eax
    5c2c:	89 c6                	mov    %eax,%esi
    5c2e:	48 8d 3d 51 3a 00 00 	lea    0x3a51(%rip),%rdi        # 9686 <executable+0x1116>
    5c35:	b8 00 00 00 00       	mov    $0x0,%eax
    5c3a:	e8 41 c8 ff ff       	callq  2480 <printf@plt>
    5c3f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5c43:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5c46:	48 63 d0             	movslq %eax,%rdx
    5c49:	48 89 d0             	mov    %rdx,%rax
    5c4c:	48 c1 e0 02          	shl    $0x2,%rax
    5c50:	48 01 d0             	add    %rdx,%rax
    5c53:	48 c1 e0 03          	shl    $0x3,%rax
    5c57:	48 01 c8             	add    %rcx,%rax
    5c5a:	48 83 c0 1c          	add    $0x1c,%rax
    5c5e:	8b 00                	mov    (%rax),%eax
    5c60:	89 c6                	mov    %eax,%esi
    5c62:	48 8d 3d 33 3a 00 00 	lea    0x3a33(%rip),%rdi        # 969c <executable+0x112c>
    5c69:	b8 00 00 00 00       	mov    $0x0,%eax
    5c6e:	e8 0d c8 ff ff       	callq  2480 <printf@plt>
    5c73:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5c77:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5c7a:	48 63 d0             	movslq %eax,%rdx
    5c7d:	48 89 d0             	mov    %rdx,%rax
    5c80:	48 c1 e0 02          	shl    $0x2,%rax
    5c84:	48 01 d0             	add    %rdx,%rax
    5c87:	48 c1 e0 03          	shl    $0x3,%rax
    5c8b:	48 01 c8             	add    %rcx,%rax
    5c8e:	48 83 c0 20          	add    $0x20,%rax
    5c92:	8b 00                	mov    (%rax),%eax
    5c94:	89 c6                	mov    %eax,%esi
    5c96:	48 8d 3d 15 3a 00 00 	lea    0x3a15(%rip),%rdi        # 96b2 <executable+0x1142>
    5c9d:	b8 00 00 00 00       	mov    $0x0,%eax
    5ca2:	e8 d9 c7 ff ff       	callq  2480 <printf@plt>
    5ca7:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    5cab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5caf:	8b 10                	mov    (%rax),%edx
    5cb1:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5cb4:	39 c2                	cmp    %eax,%edx
    5cb6:	0f 87 69 fe ff ff    	ja     5b25 <print_cpuid_output+0x1c>
    5cbc:	90                   	nop
    5cbd:	90                   	nop
    5cbe:	c9                   	leaveq 
    5cbf:	c3                   	retq   

0000000000005cc0 <print_regs>:
    5cc0:	f3 0f 1e fa          	endbr64 
    5cc4:	55                   	push   %rbp
    5cc5:	48 89 e5             	mov    %rsp,%rbp
    5cc8:	48 83 ec 20          	sub    $0x20,%rsp
    5ccc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5cd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cd4:	48 8d 90 50 01 00 00 	lea    0x150(%rax),%rdx
    5cdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cdf:	8b 00                	mov    (%rax),%eax
    5ce1:	be 81 ae 90 80       	mov    $0x8090ae81,%esi
    5ce6:	89 c7                	mov    %eax,%edi
    5ce8:	b8 00 00 00 00       	mov    $0x0,%eax
    5ced:	e8 ce c7 ff ff       	callq  24c0 <ioctl@plt>
    5cf2:	89 45 fc             	mov    %eax,-0x4(%rbp)
    5cf5:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
    5cf9:	75 3d                	jne    5d38 <print_regs+0x78>
    5cfb:	e8 90 c6 ff ff       	callq  2390 <__errno_location@plt>
    5d00:	8b 00                	mov    (%rax),%eax
    5d02:	89 c7                	mov    %eax,%edi
    5d04:	e8 37 c9 ff ff       	callq  2640 <strerror@plt>
    5d09:	48 89 c2             	mov    %rax,%rdx
    5d0c:	be d6 04 00 00       	mov    $0x4d6,%esi
    5d11:	48 8d 3d 39 23 00 00 	lea    0x2339(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    5d18:	b8 00 00 00 00       	mov    $0x0,%eax
    5d1d:	e8 5e c7 ff ff       	callq  2480 <printf@plt>
    5d22:	48 8d 3d 9f 39 00 00 	lea    0x399f(%rip),%rdi        # 96c8 <executable+0x1158>
    5d29:	e8 b2 c6 ff ff       	callq  23e0 <puts@plt>
    5d2e:	bf 01 00 00 00       	mov    $0x1,%edi
    5d33:	e8 e8 c8 ff ff       	callq  2620 <exit@plt>
    5d38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d3c:	48 8d 50 18          	lea    0x18(%rax),%rdx
    5d40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d44:	8b 00                	mov    (%rax),%eax
    5d46:	be 83 ae 38 81       	mov    $0x8138ae83,%esi
    5d4b:	89 c7                	mov    %eax,%edi
    5d4d:	b8 00 00 00 00       	mov    $0x0,%eax
    5d52:	e8 69 c7 ff ff       	callq  24c0 <ioctl@plt>
    5d57:	89 45 fc             	mov    %eax,-0x4(%rbp)
    5d5a:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
    5d5e:	75 3d                	jne    5d9d <print_regs+0xdd>
    5d60:	e8 2b c6 ff ff       	callq  2390 <__errno_location@plt>
    5d65:	8b 00                	mov    (%rax),%eax
    5d67:	89 c7                	mov    %eax,%edi
    5d69:	e8 d2 c8 ff ff       	callq  2640 <strerror@plt>
    5d6e:	48 89 c2             	mov    %rax,%rdx
    5d71:	be d9 04 00 00       	mov    $0x4d9,%esi
    5d76:	48 8d 3d d4 22 00 00 	lea    0x22d4(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    5d7d:	b8 00 00 00 00       	mov    $0x0,%eax
    5d82:	e8 f9 c6 ff ff       	callq  2480 <printf@plt>
    5d87:	48 8d 3d 3a 39 00 00 	lea    0x393a(%rip),%rdi        # 96c8 <executable+0x1158>
    5d8e:	e8 4d c6 ff ff       	callq  23e0 <puts@plt>
    5d93:	bf 01 00 00 00       	mov    $0x1,%edi
    5d98:	e8 83 c8 ff ff       	callq  2620 <exit@plt>
    5d9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5da1:	48 8d 90 e0 01 00 00 	lea    0x1e0(%rax),%rdx
    5da8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dac:	8b 00                	mov    (%rax),%eax
    5dae:	be a1 ae 80 80       	mov    $0x8080aea1,%esi
    5db3:	89 c7                	mov    %eax,%edi
    5db5:	b8 00 00 00 00       	mov    $0x0,%eax
    5dba:	e8 01 c7 ff ff       	callq  24c0 <ioctl@plt>
    5dbf:	89 45 fc             	mov    %eax,-0x4(%rbp)
    5dc2:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%rbp)
    5dc6:	75 3d                	jne    5e05 <print_regs+0x145>
    5dc8:	e8 c3 c5 ff ff       	callq  2390 <__errno_location@plt>
    5dcd:	8b 00                	mov    (%rax),%eax
    5dcf:	89 c7                	mov    %eax,%edi
    5dd1:	e8 6a c8 ff ff       	callq  2640 <strerror@plt>
    5dd6:	48 89 c2             	mov    %rax,%rdx
    5dd9:	be dc 04 00 00       	mov    $0x4dc,%esi
    5dde:	48 8d 3d 6c 22 00 00 	lea    0x226c(%rip),%rdi        # 8051 <_IO_stdin_used+0x51>
    5de5:	b8 00 00 00 00       	mov    $0x0,%eax
    5dea:	e8 91 c6 ff ff       	callq  2480 <printf@plt>
    5def:	48 8d 3d e0 38 00 00 	lea    0x38e0(%rip),%rdi        # 96d6 <executable+0x1166>
    5df6:	e8 e5 c5 ff ff       	callq  23e0 <puts@plt>
    5dfb:	bf 01 00 00 00       	mov    $0x1,%edi
    5e00:	e8 1b c8 ff ff       	callq  2620 <exit@plt>
    5e05:	48 8d 3d e4 38 00 00 	lea    0x38e4(%rip),%rdi        # 96f0 <executable+0x1180>
    5e0c:	e8 cf c5 ff ff       	callq  23e0 <puts@plt>
    5e11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e15:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    5e19:	0f b6 c0             	movzbl %al,%eax
    5e1c:	89 c6                	mov    %eax,%esi
    5e1e:	48 8d 3d ec 38 00 00 	lea    0x38ec(%rip),%rdi        # 9711 <executable+0x11a1>
    5e25:	b8 00 00 00 00       	mov    $0x0,%eax
    5e2a:	e8 51 c6 ff ff       	callq  2480 <printf@plt>
    5e2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e33:	48 8b 80 d0 01 00 00 	mov    0x1d0(%rax),%rax
    5e3a:	48 89 c6             	mov    %rax,%rsi
    5e3d:	48 8d 3d da 38 00 00 	lea    0x38da(%rip),%rdi        # 971e <executable+0x11ae>
    5e44:	b8 00 00 00 00       	mov    $0x0,%eax
    5e49:	e8 32 c6 ff ff       	callq  2480 <printf@plt>
    5e4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e52:	48 8b 80 50 01 00 00 	mov    0x150(%rax),%rax
    5e59:	48 89 c6             	mov    %rax,%rsi
    5e5c:	48 8d 3d cf 38 00 00 	lea    0x38cf(%rip),%rdi        # 9732 <executable+0x11c2>
    5e63:	b8 00 00 00 00       	mov    $0x0,%eax
    5e68:	e8 13 c6 ff ff       	callq  2480 <printf@plt>
    5e6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e71:	48 8b 80 58 01 00 00 	mov    0x158(%rax),%rax
    5e78:	48 89 c6             	mov    %rax,%rsi
    5e7b:	48 8d 3d c4 38 00 00 	lea    0x38c4(%rip),%rdi        # 9746 <executable+0x11d6>
    5e82:	b8 00 00 00 00       	mov    $0x0,%eax
    5e87:	e8 f4 c5 ff ff       	callq  2480 <printf@plt>
    5e8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e90:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    5e97:	48 89 c6             	mov    %rax,%rsi
    5e9a:	48 8d 3d b9 38 00 00 	lea    0x38b9(%rip),%rdi        # 975a <executable+0x11ea>
    5ea1:	b8 00 00 00 00       	mov    $0x0,%eax
    5ea6:	e8 d5 c5 ff ff       	callq  2480 <printf@plt>
    5eab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5eaf:	48 8b 80 68 01 00 00 	mov    0x168(%rax),%rax
    5eb6:	48 89 c6             	mov    %rax,%rsi
    5eb9:	48 8d 3d ae 38 00 00 	lea    0x38ae(%rip),%rdi        # 976e <executable+0x11fe>
    5ec0:	b8 00 00 00 00       	mov    $0x0,%eax
    5ec5:	e8 b6 c5 ff ff       	callq  2480 <printf@plt>
    5eca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ece:	48 8b 80 80 01 00 00 	mov    0x180(%rax),%rax
    5ed5:	48 89 c6             	mov    %rax,%rsi
    5ed8:	48 8d 3d a3 38 00 00 	lea    0x38a3(%rip),%rdi        # 9782 <executable+0x1212>
    5edf:	b8 00 00 00 00       	mov    $0x0,%eax
    5ee4:	e8 97 c5 ff ff       	callq  2480 <printf@plt>
    5ee9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5eed:	48 8b 80 88 01 00 00 	mov    0x188(%rax),%rax
    5ef4:	48 89 c6             	mov    %rax,%rsi
    5ef7:	48 8d 3d 98 38 00 00 	lea    0x3898(%rip),%rdi        # 9796 <executable+0x1226>
    5efe:	b8 00 00 00 00       	mov    $0x0,%eax
    5f03:	e8 78 c5 ff ff       	callq  2480 <printf@plt>
    5f08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f0c:	48 8b 80 78 01 00 00 	mov    0x178(%rax),%rax
    5f13:	48 89 c6             	mov    %rax,%rsi
    5f16:	48 8d 3d 8d 38 00 00 	lea    0x388d(%rip),%rdi        # 97aa <executable+0x123a>
    5f1d:	b8 00 00 00 00       	mov    $0x0,%eax
    5f22:	e8 59 c5 ff ff       	callq  2480 <printf@plt>
    5f27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f2b:	48 8b 80 70 01 00 00 	mov    0x170(%rax),%rax
    5f32:	48 89 c6             	mov    %rax,%rsi
    5f35:	48 8d 3d 82 38 00 00 	lea    0x3882(%rip),%rdi        # 97be <executable+0x124e>
    5f3c:	b8 00 00 00 00       	mov    $0x0,%eax
    5f41:	e8 3a c5 ff ff       	callq  2480 <printf@plt>
    5f46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f4a:	48 8b 80 90 01 00 00 	mov    0x190(%rax),%rax
    5f51:	48 89 c2             	mov    %rax,%rdx
    5f54:	be 08 00 00 00       	mov    $0x8,%esi
    5f59:	48 8d 3d 72 38 00 00 	lea    0x3872(%rip),%rdi        # 97d2 <executable+0x1262>
    5f60:	b8 00 00 00 00       	mov    $0x0,%eax
    5f65:	e8 16 c5 ff ff       	callq  2480 <printf@plt>
    5f6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f6e:	48 8b 80 98 01 00 00 	mov    0x198(%rax),%rax
    5f75:	48 89 c2             	mov    %rax,%rdx
    5f78:	be 09 00 00 00       	mov    $0x9,%esi
    5f7d:	48 8d 3d 4e 38 00 00 	lea    0x384e(%rip),%rdi        # 97d2 <executable+0x1262>
    5f84:	b8 00 00 00 00       	mov    $0x0,%eax
    5f89:	e8 f2 c4 ff ff       	callq  2480 <printf@plt>
    5f8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f92:	48 8b 80 a0 01 00 00 	mov    0x1a0(%rax),%rax
    5f99:	48 89 c2             	mov    %rax,%rdx
    5f9c:	be 0a 00 00 00       	mov    $0xa,%esi
    5fa1:	48 8d 3d 2a 38 00 00 	lea    0x382a(%rip),%rdi        # 97d2 <executable+0x1262>
    5fa8:	b8 00 00 00 00       	mov    $0x0,%eax
    5fad:	e8 ce c4 ff ff       	callq  2480 <printf@plt>
    5fb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fb6:	48 8b 80 a8 01 00 00 	mov    0x1a8(%rax),%rax
    5fbd:	48 89 c2             	mov    %rax,%rdx
    5fc0:	be 0b 00 00 00       	mov    $0xb,%esi
    5fc5:	48 8d 3d 06 38 00 00 	lea    0x3806(%rip),%rdi        # 97d2 <executable+0x1262>
    5fcc:	b8 00 00 00 00       	mov    $0x0,%eax
    5fd1:	e8 aa c4 ff ff       	callq  2480 <printf@plt>
    5fd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fda:	48 8b 80 b0 01 00 00 	mov    0x1b0(%rax),%rax
    5fe1:	48 89 c2             	mov    %rax,%rdx
    5fe4:	be 0c 00 00 00       	mov    $0xc,%esi
    5fe9:	48 8d 3d e2 37 00 00 	lea    0x37e2(%rip),%rdi        # 97d2 <executable+0x1262>
    5ff0:	b8 00 00 00 00       	mov    $0x0,%eax
    5ff5:	e8 86 c4 ff ff       	callq  2480 <printf@plt>
    5ffa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ffe:	48 8b 80 b8 01 00 00 	mov    0x1b8(%rax),%rax
    6005:	48 89 c2             	mov    %rax,%rdx
    6008:	be 0d 00 00 00       	mov    $0xd,%esi
    600d:	48 8d 3d be 37 00 00 	lea    0x37be(%rip),%rdi        # 97d2 <executable+0x1262>
    6014:	b8 00 00 00 00       	mov    $0x0,%eax
    6019:	e8 62 c4 ff ff       	callq  2480 <printf@plt>
    601e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6022:	48 8b 80 c0 01 00 00 	mov    0x1c0(%rax),%rax
    6029:	48 89 c2             	mov    %rax,%rdx
    602c:	be 0e 00 00 00       	mov    $0xe,%esi
    6031:	48 8d 3d 9a 37 00 00 	lea    0x379a(%rip),%rdi        # 97d2 <executable+0x1262>
    6038:	b8 00 00 00 00       	mov    $0x0,%eax
    603d:	e8 3e c4 ff ff       	callq  2480 <printf@plt>
    6042:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6046:	48 8b 80 c8 01 00 00 	mov    0x1c8(%rax),%rax
    604d:	48 89 c2             	mov    %rax,%rdx
    6050:	be 0f 00 00 00       	mov    $0xf,%esi
    6055:	48 8d 3d 76 37 00 00 	lea    0x3776(%rip),%rdi        # 97d2 <executable+0x1262>
    605c:	b8 00 00 00 00       	mov    $0x0,%eax
    6061:	e8 1a c4 ff ff       	callq  2480 <printf@plt>
    6066:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    606a:	48 8b 80 d8 01 00 00 	mov    0x1d8(%rax),%rax
    6071:	48 89 c6             	mov    %rax,%rsi
    6074:	48 8d 3d 6f 37 00 00 	lea    0x376f(%rip),%rdi        # 97ea <executable+0x127a>
    607b:	b8 00 00 00 00       	mov    $0x0,%eax
    6080:	e8 fb c3 ff ff       	callq  2480 <printf@plt>
    6085:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6089:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
    6090:	48 89 c6             	mov    %rax,%rsi
    6093:	48 8d 3d 64 37 00 00 	lea    0x3764(%rip),%rdi        # 97fe <executable+0x128e>
    609a:	b8 00 00 00 00       	mov    $0x0,%eax
    609f:	e8 dc c3 ff ff       	callq  2480 <printf@plt>
    60a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60a8:	48 8b 80 f8 00 00 00 	mov    0xf8(%rax),%rax
    60af:	48 89 c6             	mov    %rax,%rsi
    60b2:	48 8d 3d 59 37 00 00 	lea    0x3759(%rip),%rdi        # 9812 <executable+0x12a2>
    60b9:	b8 00 00 00 00       	mov    $0x0,%eax
    60be:	e8 bd c3 ff ff       	callq  2480 <printf@plt>
    60c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60c7:	48 8b 80 00 01 00 00 	mov    0x100(%rax),%rax
    60ce:	48 89 c6             	mov    %rax,%rsi
    60d1:	48 8d 3d 4e 37 00 00 	lea    0x374e(%rip),%rdi        # 9826 <executable+0x12b6>
    60d8:	b8 00 00 00 00       	mov    $0x0,%eax
    60dd:	e8 9e c3 ff ff       	callq  2480 <printf@plt>
    60e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    60e6:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
    60ed:	48 89 c6             	mov    %rax,%rsi
    60f0:	48 8d 3d 43 37 00 00 	lea    0x3743(%rip),%rdi        # 983a <executable+0x12ca>
    60f7:	b8 00 00 00 00       	mov    $0x0,%eax
    60fc:	e8 7f c3 ff ff       	callq  2480 <printf@plt>
    6101:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6105:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
    610c:	48 89 c6             	mov    %rax,%rsi
    610f:	48 8d 3d 38 37 00 00 	lea    0x3738(%rip),%rdi        # 984e <executable+0x12de>
    6116:	b8 00 00 00 00       	mov    $0x0,%eax
    611b:	e8 60 c3 ff ff       	callq  2480 <printf@plt>
    6120:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    6127:	eb 2c                	jmp    6155 <print_regs+0x495>
    6129:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    612d:	8b 55 f8             	mov    -0x8(%rbp),%edx
    6130:	48 63 d2             	movslq %edx,%rdx
    6133:	48 83 c2 3c          	add    $0x3c,%rdx
    6137:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx
    613b:	8b 45 f8             	mov    -0x8(%rbp),%eax
    613e:	89 c6                	mov    %eax,%esi
    6140:	48 8d 3d 1b 37 00 00 	lea    0x371b(%rip),%rdi        # 9862 <executable+0x12f2>
    6147:	b8 00 00 00 00       	mov    $0x0,%eax
    614c:	e8 2f c3 ff ff       	callq  2480 <printf@plt>
    6151:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    6155:	83 7d f8 03          	cmpl   $0x3,-0x8(%rbp)
    6159:	7e ce                	jle    6129 <print_regs+0x469>
    615b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    615f:	48 8b 80 00 02 00 00 	mov    0x200(%rax),%rax
    6166:	48 89 c6             	mov    %rax,%rsi
    6169:	48 8d 3d 07 37 00 00 	lea    0x3707(%rip),%rdi        # 9877 <executable+0x1307>
    6170:	b8 00 00 00 00       	mov    $0x0,%eax
    6175:	e8 06 c3 ff ff       	callq  2480 <printf@plt>
    617a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    617e:	48 8b 80 08 02 00 00 	mov    0x208(%rax),%rax
    6185:	48 89 c6             	mov    %rax,%rsi
    6188:	48 8d 3d fc 36 00 00 	lea    0x36fc(%rip),%rdi        # 988b <executable+0x131b>
    618f:	b8 00 00 00 00       	mov    $0x0,%eax
    6194:	e8 e7 c2 ff ff       	callq  2480 <printf@plt>
    6199:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    619d:	48 8b 80 10 02 00 00 	mov    0x210(%rax),%rax
    61a4:	48 89 c6             	mov    %rax,%rsi
    61a7:	48 8d 3d f1 36 00 00 	lea    0x36f1(%rip),%rdi        # 989f <executable+0x132f>
    61ae:	b8 00 00 00 00       	mov    $0x0,%eax
    61b3:	e8 c8 c2 ff ff       	callq  2480 <printf@plt>
    61b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61bc:	48 83 c0 18          	add    $0x18,%rax
    61c0:	48 89 c7             	mov    %rax,%rdi
    61c3:	e8 f9 f8 ff ff       	callq  5ac1 <print_segment>
    61c8:	48 8d 3d 21 35 00 00 	lea    0x3521(%rip),%rdi        # 96f0 <executable+0x1180>
    61cf:	e8 0c c2 ff ff       	callq  23e0 <puts@plt>
    61d4:	90                   	nop
    61d5:	c9                   	leaveq 
    61d6:	c3                   	retq   

00000000000061d7 <print_lapic_state>:
    61d7:	f3 0f 1e fa          	endbr64 
    61db:	55                   	push   %rbp
    61dc:	48 89 e5             	mov    %rsp,%rbp
    61df:	48 83 ec 20          	sub    $0x20,%rsp
    61e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    61e7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    61ee:	eb 33                	jmp    6223 <print_lapic_state+0x4c>
    61f0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    61f3:	c1 e0 04             	shl    $0x4,%eax
    61f6:	48 63 d0             	movslq %eax,%rdx
    61f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61fd:	48 01 d0             	add    %rdx,%rax
    6200:	8b 00                	mov    (%rax),%eax
    6202:	8b 55 fc             	mov    -0x4(%rbp),%edx
    6205:	89 d1                	mov    %edx,%ecx
    6207:	c1 e1 04             	shl    $0x4,%ecx
    620a:	89 c2                	mov    %eax,%edx
    620c:	89 ce                	mov    %ecx,%esi
    620e:	48 8d 3d 9e 36 00 00 	lea    0x369e(%rip),%rdi        # 98b3 <executable+0x1343>
    6215:	b8 00 00 00 00       	mov    $0x0,%eax
    621a:	e8 61 c2 ff ff       	callq  2480 <printf@plt>
    621f:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    6223:	83 7d fc 3f          	cmpl   $0x3f,-0x4(%rbp)
    6227:	7e c7                	jle    61f0 <print_lapic_state+0x19>
    6229:	90                   	nop
    622a:	90                   	nop
    622b:	c9                   	leaveq 
    622c:	c3                   	retq   

000000000000622d <sigint_handler>:
    622d:	f3 0f 1e fa          	endbr64 
    6231:	55                   	push   %rbp
    6232:	48 89 e5             	mov    %rsp,%rbp
    6235:	48 83 ec 20          	sub    $0x20,%rsp
    6239:	89 7d ec             	mov    %edi,-0x14(%rbp)
    623c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    6243:	eb 22                	jmp    6267 <sigint_handler+0x3a>
    6245:	48 8b 15 44 5f 00 00 	mov    0x5f44(%rip),%rdx        # c190 <vm+0x10>
    624c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    624f:	48 98                	cltq   
    6251:	48 69 c0 b0 02 00 00 	imul   $0x2b0,%rax,%rax
    6258:	48 01 d0             	add    %rdx,%rax
    625b:	48 89 c7             	mov    %rax,%rdi
    625e:	e8 5d fa ff ff       	callq  5cc0 <print_regs>
    6263:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    6267:	8b 05 1b 5f 00 00    	mov    0x5f1b(%rip),%eax        # c188 <vm+0x8>
    626d:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    6270:	7c d3                	jl     6245 <sigint_handler+0x18>
    6272:	be 00 00 00 00       	mov    $0x0,%esi
    6277:	bf 02 00 00 00       	mov    $0x2,%edi
    627c:	e8 8f c2 ff ff       	callq  2510 <signal@plt>
    6281:	90                   	nop
    6282:	c9                   	leaveq 
    6283:	c3                   	retq   

0000000000006284 <install_signal_handlers>:
    6284:	f3 0f 1e fa          	endbr64 
    6288:	55                   	push   %rbp
    6289:	48 89 e5             	mov    %rsp,%rbp
    628c:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    6293:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    629a:	00 00 
    629c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    62a0:	31 c0                	xor    %eax,%eax
    62a2:	90                   	nop
    62a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62a7:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    62ae:	00 00 
    62b0:	74 05                	je     62b7 <install_signal_handlers+0x33>
    62b2:	e8 89 c1 ff ff       	callq  2440 <__stack_chk_fail@plt>
    62b7:	c9                   	leaveq 
    62b8:	c3                   	retq   

00000000000062b9 <get_sock_for_flow>:
    62b9:	f3 0f 1e fa          	endbr64 
    62bd:	55                   	push   %rbp
    62be:	48 89 e5             	mov    %rsp,%rbp
    62c1:	48 83 ec 70          	sub    $0x70,%rsp
    62c5:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    62c9:	89 75 a4             	mov    %esi,-0x5c(%rbp)
    62cc:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    62d0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    62d7:	00 00 
    62d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    62dd:	31 c0                	xor    %eax,%eax
    62df:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    62e2:	66 89 45 c0          	mov    %ax,-0x40(%rbp)
    62e6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    62ea:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    62ee:	bf 00 08 00 00       	mov    $0x800,%edi
    62f3:	e8 78 c1 ff ff       	callq  2470 <htons@plt>
    62f8:	0f b7 c0             	movzwl %ax,%eax
    62fb:	89 c2                	mov    %eax,%edx
    62fd:	be 03 00 00 00       	mov    $0x3,%esi
    6302:	bf 11 00 00 00       	mov    $0x11,%edi
    6307:	e8 64 c3 ff ff       	callq  2670 <socket@plt>
    630c:	89 45 b8             	mov    %eax,-0x48(%rbp)
    630f:	83 7d bc 00          	cmpl   $0x0,-0x44(%rbp)
    6313:	79 22                	jns    6337 <get_sock_for_flow+0x7e>
    6315:	ba 25 00 00 00       	mov    $0x25,%edx
    631a:	48 8d 35 bf 36 00 00 	lea    0x36bf(%rip),%rsi        # 99e0 <__FUNCTION__.4623>
    6321:	48 8d 3d a8 35 00 00 	lea    0x35a8(%rip),%rdi        # 98d0 <executable+0x1360>
    6328:	b8 00 00 00 00       	mov    $0x0,%eax
    632d:	e8 4e c1 ff ff       	callq  2480 <printf@plt>
    6332:	e9 1f 02 00 00       	jmpq   6556 <get_sock_for_flow+0x29d>
    6337:	8b 45 b8             	mov    -0x48(%rbp),%eax
    633a:	89 45 bc             	mov    %eax,-0x44(%rbp)
    633d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6341:	0f b6 00             	movzbl (%rax),%eax
    6344:	84 c0                	test   %al,%al
    6346:	75 0b                	jne    6353 <get_sock_for_flow+0x9a>
    6348:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)
    634d:	0f 85 27 01 00 00    	jne    647a <get_sock_for_flow+0x1c1>
    6353:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6357:	48 89 c7             	mov    %rax,%rdi
    635a:	e8 d1 c0 ff ff       	callq  2430 <strlen@plt>
    635f:	89 c1                	mov    %eax,%ecx
    6361:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    6365:	8b 45 bc             	mov    -0x44(%rbp),%eax
    6368:	41 89 c8             	mov    %ecx,%r8d
    636b:	48 89 d1             	mov    %rdx,%rcx
    636e:	ba 19 00 00 00       	mov    $0x19,%edx
    6373:	be 01 00 00 00       	mov    $0x1,%esi
    6378:	89 c7                	mov    %eax,%edi
    637a:	e8 81 c0 ff ff       	callq  2400 <setsockopt@plt>
    637f:	89 45 b8             	mov    %eax,-0x48(%rbp)
    6382:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    6386:	79 22                	jns    63aa <get_sock_for_flow+0xf1>
    6388:	ba 2e 00 00 00       	mov    $0x2e,%edx
    638d:	48 8d 35 4c 36 00 00 	lea    0x364c(%rip),%rsi        # 99e0 <__FUNCTION__.4623>
    6394:	48 8d 3d 55 35 00 00 	lea    0x3555(%rip),%rdi        # 98f0 <executable+0x1380>
    639b:	b8 00 00 00 00       	mov    $0x0,%eax
    63a0:	e8 db c0 ff ff       	callq  2480 <printf@plt>
    63a5:	e9 a2 01 00 00       	jmpq   654c <get_sock_for_flow+0x293>
    63aa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    63ae:	ba 28 00 00 00       	mov    $0x28,%edx
    63b3:	be 00 00 00 00       	mov    $0x0,%esi
    63b8:	48 89 c7             	mov    %rax,%rdi
    63bb:	e8 f0 c0 ff ff       	callq  24b0 <memset@plt>
    63c0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    63c4:	48 89 c7             	mov    %rax,%rdi
    63c7:	e8 64 c0 ff ff       	callq  2430 <strlen@plt>
    63cc:	48 89 c2             	mov    %rax,%rdx
    63cf:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    63d3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    63d7:	48 89 ce             	mov    %rcx,%rsi
    63da:	48 89 c7             	mov    %rax,%rdi
    63dd:	e8 be bf ff ff       	callq  23a0 <strncpy@plt>
    63e2:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    63e6:	8b 45 bc             	mov    -0x44(%rbp),%eax
    63e9:	be 13 89 00 00       	mov    $0x8913,%esi
    63ee:	89 c7                	mov    %eax,%edi
    63f0:	b8 00 00 00 00       	mov    $0x0,%eax
    63f5:	e8 c6 c0 ff ff       	callq  24c0 <ioctl@plt>
    63fa:	89 45 b8             	mov    %eax,-0x48(%rbp)
    63fd:	83 7d b8 ff          	cmpl   $0xffffffff,-0x48(%rbp)
    6401:	75 29                	jne    642c <get_sock_for_flow+0x173>
    6403:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6407:	48 89 c1             	mov    %rax,%rcx
    640a:	ba 35 00 00 00       	mov    $0x35,%edx
    640f:	48 8d 35 ca 35 00 00 	lea    0x35ca(%rip),%rsi        # 99e0 <__FUNCTION__.4623>
    6416:	48 8d 3d fb 34 00 00 	lea    0x34fb(%rip),%rdi        # 9918 <executable+0x13a8>
    641d:	b8 00 00 00 00       	mov    $0x0,%eax
    6422:	e8 59 c0 ff ff       	callq  2480 <printf@plt>
    6427:	e9 20 01 00 00       	jmpq   654c <get_sock_for_flow+0x293>
    642c:	0f b7 45 e0          	movzwl -0x20(%rbp),%eax
    6430:	80 cc 01             	or     $0x1,%ah
    6433:	66 89 45 e0          	mov    %ax,-0x20(%rbp)
    6437:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    643b:	8b 45 bc             	mov    -0x44(%rbp),%eax
    643e:	be 14 89 00 00       	mov    $0x8914,%esi
    6443:	89 c7                	mov    %eax,%edi
    6445:	b8 00 00 00 00       	mov    $0x0,%eax
    644a:	e8 71 c0 ff ff       	callq  24c0 <ioctl@plt>
    644f:	89 45 b8             	mov    %eax,-0x48(%rbp)
    6452:	83 7d b8 ff          	cmpl   $0xffffffff,-0x48(%rbp)
    6456:	75 22                	jne    647a <get_sock_for_flow+0x1c1>
    6458:	ba 3b 00 00 00       	mov    $0x3b,%edx
    645d:	48 8d 35 7c 35 00 00 	lea    0x357c(%rip),%rsi        # 99e0 <__FUNCTION__.4623>
    6464:	48 8d 3d dd 34 00 00 	lea    0x34dd(%rip),%rdi        # 9948 <executable+0x13d8>
    646b:	b8 00 00 00 00       	mov    $0x0,%eax
    6470:	e8 0b c0 ff ff       	callq  2480 <printf@plt>
    6475:	e9 d2 00 00 00       	jmpq   654c <get_sock_for_flow+0x293>
    647a:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)
    647e:	7e 73                	jle    64f3 <get_sock_for_flow+0x23a>
    6480:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    6484:	8b 45 bc             	mov    -0x44(%rbp),%eax
    6487:	41 b8 10 00 00 00    	mov    $0x10,%r8d
    648d:	48 89 d1             	mov    %rdx,%rcx
    6490:	ba 1a 00 00 00       	mov    $0x1a,%edx
    6495:	be 01 00 00 00       	mov    $0x1,%esi
    649a:	89 c7                	mov    %eax,%edi
    649c:	e8 5f bf ff ff       	callq  2400 <setsockopt@plt>
    64a1:	89 45 b8             	mov    %eax,-0x48(%rbp)
    64a4:	83 7d b8 00          	cmpl   $0x0,-0x48(%rbp)
    64a8:	79 49                	jns    64f3 <get_sock_for_flow+0x23a>
    64aa:	ba 44 00 00 00       	mov    $0x44,%edx
    64af:	48 8d 35 2a 35 00 00 	lea    0x352a(%rip),%rsi        # 99e0 <__FUNCTION__.4623>
    64b6:	48 8d 3d b3 34 00 00 	lea    0x34b3(%rip),%rdi        # 9970 <executable+0x1400>
    64bd:	b8 00 00 00 00       	mov    $0x0,%eax
    64c2:	e8 b9 bf ff ff       	callq  2480 <printf@plt>
    64c7:	90                   	nop
    64c8:	f3 0f 1e fa          	endbr64 
    64cc:	8b 45 bc             	mov    -0x44(%rbp),%eax
    64cf:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    64d5:	48 8d 0d bb 34 00 00 	lea    0x34bb(%rip),%rcx        # 9997 <executable+0x1427>
    64dc:	ba 19 00 00 00       	mov    $0x19,%edx
    64e1:	be 01 00 00 00       	mov    $0x1,%esi
    64e6:	89 c7                	mov    %eax,%edi
    64e8:	e8 13 bf ff ff       	callq  2400 <setsockopt@plt>
    64ed:	85 c0                	test   %eax,%eax
    64ef:	79 5a                	jns    654b <get_sock_for_flow+0x292>
    64f1:	eb 0a                	jmp    64fd <get_sock_for_flow+0x244>
    64f3:	90                   	nop
    64f4:	f3 0f 1e fa          	endbr64 
    64f8:	8b 45 bc             	mov    -0x44(%rbp),%eax
    64fb:	eb 5c                	jmp    6559 <get_sock_for_flow+0x2a0>
    64fd:	be 4c 00 00 00       	mov    $0x4c,%esi
    6502:	48 8d 3d 8f 34 00 00 	lea    0x348f(%rip),%rdi        # 9998 <executable+0x1428>
    6509:	b8 00 00 00 00       	mov    $0x0,%eax
    650e:	e8 6d bf ff ff       	callq  2480 <printf@plt>
    6513:	48 8d 3d 8e 34 00 00 	lea    0x348e(%rip),%rdi        # 99a8 <executable+0x1438>
    651a:	e8 c1 be ff ff       	callq  23e0 <puts@plt>
    651f:	e8 6c be ff ff       	callq  2390 <__errno_location@plt>
    6524:	8b 00                	mov    (%rax),%eax
    6526:	89 c7                	mov    %eax,%edi
    6528:	e8 13 c1 ff ff       	callq  2640 <strerror@plt>
    652d:	48 89 c6             	mov    %rax,%rsi
    6530:	48 8d 3d 95 34 00 00 	lea    0x3495(%rip),%rdi        # 99cc <executable+0x145c>
    6537:	b8 00 00 00 00       	mov    $0x0,%eax
    653c:	e8 3f bf ff ff       	callq  2480 <printf@plt>
    6541:	bf 00 00 00 00       	mov    $0x0,%edi
    6546:	e8 d5 c0 ff ff       	callq  2620 <exit@plt>
    654b:	90                   	nop
    654c:	8b 45 bc             	mov    -0x44(%rbp),%eax
    654f:	89 c7                	mov    %eax,%edi
    6551:	e8 7a bf ff ff       	callq  24d0 <close@plt>
    6556:	8b 45 b8             	mov    -0x48(%rbp),%eax
    6559:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    655d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    6564:	00 00 
    6566:	74 05                	je     656d <get_sock_for_flow+0x2b4>
    6568:	e8 d3 be ff ff       	callq  2440 <__stack_chk_fail@plt>
    656d:	c9                   	leaveq 
    656e:	c3                   	retq   

000000000000656f <phex>:
    656f:	f3 0f 1e fa          	endbr64 
    6573:	55                   	push   %rbp
    6574:	48 89 e5             	mov    %rsp,%rbp
    6577:	48 83 ec 20          	sub    $0x20,%rsp
    657b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    657f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    6582:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6586:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    658a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    6591:	eb 41                	jmp    65d4 <phex+0x65>
    6593:	8b 45 f4             	mov    -0xc(%rbp),%eax
    6596:	48 63 d0             	movslq %eax,%rdx
    6599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    659d:	48 01 d0             	add    %rdx,%rax
    65a0:	0f b6 00             	movzbl (%rax),%eax
    65a3:	0f b6 c0             	movzbl %al,%eax
    65a6:	89 c6                	mov    %eax,%esi
    65a8:	48 8d 3d 11 36 00 00 	lea    0x3611(%rip),%rdi        # 9bc0 <prot_map+0x20>
    65af:	b8 00 00 00 00       	mov    $0x0,%eax
    65b4:	e8 c7 be ff ff       	callq  2480 <printf@plt>
    65b9:	8b 45 f4             	mov    -0xc(%rbp),%eax
    65bc:	83 c0 01             	add    $0x1,%eax
    65bf:	83 e0 0f             	and    $0xf,%eax
    65c2:	85 c0                	test   %eax,%eax
    65c4:	75 0a                	jne    65d0 <phex+0x61>
    65c6:	bf 0a 00 00 00       	mov    $0xa,%edi
    65cb:	e8 a0 bd ff ff       	callq  2370 <putchar@plt>
    65d0:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    65d4:	8b 45 f4             	mov    -0xc(%rbp),%eax
    65d7:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    65da:	7c b7                	jl     6593 <phex+0x24>
    65dc:	8b 45 f4             	mov    -0xc(%rbp),%eax
    65df:	83 e0 0f             	and    $0xf,%eax
    65e2:	85 c0                	test   %eax,%eax
    65e4:	74 0a                	je     65f0 <phex+0x81>
    65e6:	bf 0a 00 00 00       	mov    $0xa,%edi
    65eb:	e8 80 bd ff ff       	callq  2370 <putchar@plt>
    65f0:	90                   	nop
    65f1:	c9                   	leaveq 
    65f2:	c3                   	retq   

00000000000065f3 <within_lmts>:
    65f3:	f3 0f 1e fa          	endbr64 
    65f7:	55                   	push   %rbp
    65f8:	48 89 e5             	mov    %rsp,%rbp
    65fb:	48 83 ec 30          	sub    $0x30,%rsp
    65ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6603:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    6606:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    660a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    6611:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    6615:	74 2c                	je     6643 <within_lmts+0x50>
    6617:	be 4e 00 00 00       	mov    $0x4e,%esi
    661c:	48 8d 3d a3 35 00 00 	lea    0x35a3(%rip),%rdi        # 9bc6 <prot_map+0x26>
    6623:	b8 00 00 00 00       	mov    $0x0,%eax
    6628:	e8 53 be ff ff       	callq  2480 <printf@plt>
    662d:	48 8d 3d 99 35 00 00 	lea    0x3599(%rip),%rdi        # 9bcd <prot_map+0x2d>
    6634:	e8 a7 bd ff ff       	callq  23e0 <puts@plt>
    6639:	bf 01 00 00 00       	mov    $0x1,%edi
    663e:	e8 dd bf ff ff       	callq  2620 <exit@plt>
    6643:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)
    6647:	75 33                	jne    667c <within_lmts+0x89>
    6649:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    664d:	0f b7 10             	movzwl (%rax),%edx
    6650:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6654:	0f b7 00             	movzwl (%rax),%eax
    6657:	66 39 c2             	cmp    %ax,%dx
    665a:	72 23                	jb     667f <within_lmts+0x8c>
    665c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6660:	0f b7 10             	movzwl (%rax),%edx
    6663:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6667:	48 83 c0 08          	add    $0x8,%rax
    666b:	0f b7 00             	movzwl (%rax),%eax
    666e:	66 39 c2             	cmp    %ax,%dx
    6671:	77 0c                	ja     667f <within_lmts+0x8c>
    6673:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
    667a:	eb 03                	jmp    667f <within_lmts+0x8c>
    667c:	90                   	nop
    667d:	eb 01                	jmp    6680 <within_lmts+0x8d>
    667f:	90                   	nop
    6680:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6683:	c9                   	leaveq 
    6684:	c3                   	retq   

0000000000006685 <read_limits>:
    6685:	f3 0f 1e fa          	endbr64 
    6689:	55                   	push   %rbp
    668a:	48 89 e5             	mov    %rsp,%rbp
    668d:	48 83 ec 30          	sub    $0x30,%rsp
    6691:	89 7d ec             	mov    %edi,-0x14(%rbp)
    6694:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6698:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    669c:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
    66a3:	eb 59                	jmp    66fe <read_limits+0x79>
    66a5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    66a8:	83 e8 01             	sub    $0x1,%eax
    66ab:	48 98                	cltq   
    66ad:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    66b4:	00 
    66b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    66b9:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    66bd:	8b 55 ec             	mov    -0x14(%rbp),%edx
    66c0:	48 89 d0             	mov    %rdx,%rax
    66c3:	48 01 c0             	add    %rax,%rax
    66c6:	48 01 d0             	add    %rdx,%rax
    66c9:	48 8d 15 b0 34 00 00 	lea    0x34b0(%rip),%rdx        # 9b80 <inp_read_str>
    66d0:	48 01 d0             	add    %rdx,%rax
    66d3:	8b 55 fc             	mov    -0x4(%rbp),%edx
    66d6:	48 63 d2             	movslq %edx,%rdx
    66d9:	48 89 d6             	mov    %rdx,%rsi
    66dc:	48 c1 e6 06          	shl    $0x6,%rsi
    66e0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    66e4:	48 01 f2             	add    %rsi,%rdx
    66e7:	48 89 d7             	mov    %rdx,%rdi
    66ea:	48 89 ca             	mov    %rcx,%rdx
    66ed:	48 89 c6             	mov    %rax,%rsi
    66f0:	b8 00 00 00 00       	mov    $0x0,%eax
    66f5:	e8 66 be ff ff       	callq  2560 <__isoc99_sscanf@plt>
    66fa:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    66fe:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
    6702:	7e a1                	jle    66a5 <read_limits+0x20>
    6704:	90                   	nop
    6705:	90                   	nop
    6706:	c9                   	leaveq 
    6707:	c3                   	retq   

0000000000006708 <match_to_limit_type>:
    6708:	f3 0f 1e fa          	endbr64 
    670c:	55                   	push   %rbp
    670d:	48 89 e5             	mov    %rsp,%rbp
    6710:	48 83 ec 20          	sub    $0x20,%rsp
    6714:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6718:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%rbp)
    671f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    6726:	eb 3e                	jmp    6766 <match_to_limit_type+0x5e>
    6728:	8b 45 f8             	mov    -0x8(%rbp),%eax
    672b:	48 98                	cltq   
    672d:	48 c1 e0 07          	shl    $0x7,%rax
    6731:	48 89 c2             	mov    %rax,%rdx
    6734:	48 8d 05 c5 32 00 00 	lea    0x32c5(%rip),%rax        # 9a00 <str_limit_t>
    673b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    673f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6743:	ba 40 00 00 00       	mov    $0x40,%edx
    6748:	48 89 ce             	mov    %rcx,%rsi
    674b:	48 89 c7             	mov    %rax,%rdi
    674e:	e8 5d bc ff ff       	callq  23b0 <strncmp@plt>
    6753:	85 c0                	test   %eax,%eax
    6755:	75 0b                	jne    6762 <match_to_limit_type+0x5a>
    6757:	8b 45 f8             	mov    -0x8(%rbp),%eax
    675a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    675d:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6760:	eb 0d                	jmp    676f <match_to_limit_type+0x67>
    6762:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    6766:	83 7d f8 02          	cmpl   $0x2,-0x8(%rbp)
    676a:	7e bc                	jle    6728 <match_to_limit_type+0x20>
    676c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    676f:	c9                   	leaveq 
    6770:	c3                   	retq   

0000000000006771 <init_limits>:
    6771:	f3 0f 1e fa          	endbr64 
    6775:	55                   	push   %rbp
    6776:	48 89 e5             	mov    %rsp,%rbp
    6779:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp
    6780:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
    6787:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    678e:	00 00 
    6790:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6794:	31 c0                	xor    %eax,%eax
    6796:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    679d:	48 8d 35 39 34 00 00 	lea    0x3439(%rip),%rsi        # 9bdd <prot_map+0x3d>
    67a4:	48 89 c7             	mov    %rax,%rdi
    67a7:	e8 44 be ff ff       	callq  25f0 <fopen@plt>
    67ac:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    67b3:	48 83 bd 28 ff ff ff 	cmpq   $0x0,-0xd8(%rbp)
    67ba:	00 
    67bb:	75 3b                	jne    67f8 <init_limits+0x87>
    67bd:	be 78 00 00 00       	mov    $0x78,%esi
    67c2:	48 8d 3d fd 33 00 00 	lea    0x33fd(%rip),%rdi        # 9bc6 <prot_map+0x26>
    67c9:	b8 00 00 00 00       	mov    $0x0,%eax
    67ce:	e8 ad bc ff ff       	callq  2480 <printf@plt>
    67d3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    67da:	48 89 c6             	mov    %rax,%rsi
    67dd:	48 8d 3d fb 33 00 00 	lea    0x33fb(%rip),%rdi        # 9bdf <prot_map+0x3f>
    67e4:	b8 00 00 00 00       	mov    $0x0,%eax
    67e9:	e8 92 bc ff ff       	callq  2480 <printf@plt>
    67ee:	bf 01 00 00 00       	mov    $0x1,%edi
    67f3:	e8 28 be ff ff       	callq  2620 <exit@plt>
    67f8:	c7 85 1c ff ff ff 00 	movl   $0x0,-0xe4(%rbp)
    67ff:	00 00 00 
    6802:	e9 f5 00 00 00       	jmpq   68fc <init_limits+0x18b>
    6807:	c7 85 20 ff ff ff 00 	movl   $0x0,-0xe0(%rbp)
    680e:	00 00 00 
    6811:	eb 41                	jmp    6854 <init_limits+0xe3>
    6813:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    681a:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx
    6820:	48 63 d2             	movslq %edx,%rdx
    6823:	48 c1 e2 06          	shl    $0x6,%rdx
    6827:	48 01 c2             	add    %rax,%rdx
    682a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    6831:	48 8d 35 ba 33 00 00 	lea    0x33ba(%rip),%rsi        # 9bf2 <prot_map+0x52>
    6838:	48 89 c7             	mov    %rax,%rdi
    683b:	b8 00 00 00 00       	mov    $0x0,%eax
    6840:	e8 8b bb ff ff       	callq  23d0 <__isoc99_fscanf@plt>
    6845:	85 c0                	test   %eax,%eax
    6847:	0f 8e be 00 00 00    	jle    690b <init_limits+0x19a>
    684d:	83 85 20 ff ff ff 01 	addl   $0x1,-0xe0(%rbp)
    6854:	83 bd 20 ff ff ff 02 	cmpl   $0x2,-0xe0(%rbp)
    685b:	7e b6                	jle    6813 <init_limits+0xa2>
    685d:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    6864:	48 89 c7             	mov    %rax,%rdi
    6867:	e8 9c fe ff ff       	callq  6708 <match_to_limit_type>
    686c:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    6872:	83 bd 24 ff ff ff 02 	cmpl   $0x2,-0xdc(%rbp)
    6879:	7f 32                	jg     68ad <init_limits+0x13c>
    687b:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    6881:	48 98                	cltq   
    6883:	48 c1 e0 04          	shl    $0x4,%rax
    6887:	48 89 c2             	mov    %rax,%rdx
    688a:	48 8d 05 2f 58 00 00 	lea    0x582f(%rip),%rax        # c0c0 <limits>
    6891:	48 01 c2             	add    %rax,%rdx
    6894:	8b 85 24 ff ff ff    	mov    -0xdc(%rbp),%eax
    689a:	48 8d 8d 30 ff ff ff 	lea    -0xd0(%rbp),%rcx
    68a1:	48 89 ce             	mov    %rcx,%rsi
    68a4:	89 c7                	mov    %eax,%edi
    68a6:	e8 da fd ff ff       	callq  6685 <read_limits>
    68ab:	eb 48                	jmp    68f5 <init_limits+0x184>
    68ad:	be 83 00 00 00       	mov    $0x83,%esi
    68b2:	48 8d 3d 0d 33 00 00 	lea    0x330d(%rip),%rdi        # 9bc6 <prot_map+0x26>
    68b9:	b8 00 00 00 00       	mov    $0x0,%eax
    68be:	e8 bd bb ff ff       	callq  2480 <printf@plt>
    68c3:	8b 8d 24 ff ff ff    	mov    -0xdc(%rbp),%ecx
    68c9:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    68d0:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    68d7:	48 89 c6             	mov    %rax,%rsi
    68da:	48 8d 3d 14 33 00 00 	lea    0x3314(%rip),%rdi        # 9bf5 <prot_map+0x55>
    68e1:	b8 00 00 00 00       	mov    $0x0,%eax
    68e6:	e8 95 bb ff ff       	callq  2480 <printf@plt>
    68eb:	bf 01 00 00 00       	mov    $0x1,%edi
    68f0:	e8 2b bd ff ff       	callq  2620 <exit@plt>
    68f5:	83 85 1c ff ff ff 01 	addl   $0x1,-0xe4(%rbp)
    68fc:	83 bd 1c ff ff ff 02 	cmpl   $0x2,-0xe4(%rbp)
    6903:	0f 8e fe fe ff ff    	jle    6807 <init_limits+0x96>
    6909:	eb 40                	jmp    694b <init_limits+0x1da>
    690b:	90                   	nop
    690c:	f3 0f 1e fa          	endbr64 
    6910:	be 89 00 00 00       	mov    $0x89,%esi
    6915:	48 8d 3d aa 32 00 00 	lea    0x32aa(%rip),%rdi        # 9bc6 <prot_map+0x26>
    691c:	b8 00 00 00 00       	mov    $0x0,%eax
    6921:	e8 5a bb ff ff       	callq  2480 <printf@plt>
    6926:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    692d:	48 89 c6             	mov    %rax,%rsi
    6930:	48 8d 3d dc 32 00 00 	lea    0x32dc(%rip),%rdi        # 9c13 <prot_map+0x73>
    6937:	b8 00 00 00 00       	mov    $0x0,%eax
    693c:	e8 3f bb ff ff       	callq  2480 <printf@plt>
    6941:	bf 01 00 00 00       	mov    $0x1,%edi
    6946:	e8 d5 bc ff ff       	callq  2620 <exit@plt>
    694b:	f3 0f 1e fa          	endbr64 
    694f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    6956:	48 89 c7             	mov    %rax,%rdi
    6959:	e8 c2 ba ff ff       	callq  2420 <fclose@plt>
    695e:	90                   	nop
    695f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6963:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    696a:	00 00 
    696c:	74 05                	je     6973 <init_limits+0x202>
    696e:	e8 cd ba ff ff       	callq  2440 <__stack_chk_fail@plt>
    6973:	c9                   	leaveq 
    6974:	c3                   	retq   

0000000000006975 <print_elf_hdr_64>:
    6975:	f3 0f 1e fa          	endbr64 
    6979:	55                   	push   %rbp
    697a:	48 89 e5             	mov    %rsp,%rbp
    697d:	53                   	push   %rbx
    697e:	48 83 ec 28          	sub    $0x28,%rsp
    6982:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6986:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    698d:	eb 2e                	jmp    69bd <print_elf_hdr_64+0x48>
    698f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6993:	48 8b 90 38 01 00 00 	mov    0x138(%rax),%rdx
    699a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    699d:	48 98                	cltq   
    699f:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax
    69a3:	0f b6 c0             	movzbl %al,%eax
    69a6:	89 c6                	mov    %eax,%esi
    69a8:	48 8d 3d 11 32 00 00 	lea    0x3211(%rip),%rdi        # 9bc0 <prot_map+0x20>
    69af:	b8 00 00 00 00       	mov    $0x0,%eax
    69b4:	e8 c7 ba ff ff       	callq  2480 <printf@plt>
    69b9:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    69bd:	83 7d ec 0f          	cmpl   $0xf,-0x14(%rbp)
    69c1:	7e cc                	jle    698f <print_elf_hdr_64+0x1a>
    69c3:	bf 0a 00 00 00       	mov    $0xa,%edi
    69c8:	e8 a3 b9 ff ff       	callq  2370 <putchar@plt>
    69cd:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    69d4:	e9 6f 01 00 00       	jmpq   6b48 <print_elf_hdr_64+0x1d3>
    69d9:	8b 45 ec             	mov    -0x14(%rbp),%eax
    69dc:	89 c6                	mov    %eax,%esi
    69de:	48 8d 3d 3f 32 00 00 	lea    0x323f(%rip),%rdi        # 9c24 <prot_map+0x84>
    69e5:	b8 00 00 00 00       	mov    $0x0,%eax
    69ea:	e8 91 ba ff ff       	callq  2480 <printf@plt>
    69ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69f3:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    69fa:	8b 45 ec             	mov    -0x14(%rbp),%eax
    69fd:	48 63 d0             	movslq %eax,%rdx
    6a00:	48 89 d0             	mov    %rdx,%rax
    6a03:	48 c1 e0 03          	shl    $0x3,%rax
    6a07:	48 29 d0             	sub    %rdx,%rax
    6a0a:	48 c1 e0 03          	shl    $0x3,%rax
    6a0e:	48 01 c8             	add    %rcx,%rax
    6a11:	4c 8b 48 30          	mov    0x30(%rax),%r9
    6a15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a19:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    6a20:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6a23:	48 63 d0             	movslq %eax,%rdx
    6a26:	48 89 d0             	mov    %rdx,%rax
    6a29:	48 c1 e0 03          	shl    $0x3,%rax
    6a2d:	48 29 d0             	sub    %rdx,%rax
    6a30:	48 c1 e0 03          	shl    $0x3,%rax
    6a34:	48 01 c8             	add    %rcx,%rax
    6a37:	4c 8b 40 28          	mov    0x28(%rax),%r8
    6a3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a3f:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    6a46:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6a49:	48 63 d0             	movslq %eax,%rdx
    6a4c:	48 89 d0             	mov    %rdx,%rax
    6a4f:	48 c1 e0 03          	shl    $0x3,%rax
    6a53:	48 29 d0             	sub    %rdx,%rax
    6a56:	48 c1 e0 03          	shl    $0x3,%rax
    6a5a:	48 01 c8             	add    %rcx,%rax
    6a5d:	48 8b 78 20          	mov    0x20(%rax),%rdi
    6a61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a65:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    6a6c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6a6f:	48 63 d0             	movslq %eax,%rdx
    6a72:	48 89 d0             	mov    %rdx,%rax
    6a75:	48 c1 e0 03          	shl    $0x3,%rax
    6a79:	48 29 d0             	sub    %rdx,%rax
    6a7c:	48 c1 e0 03          	shl    $0x3,%rax
    6a80:	48 01 c8             	add    %rcx,%rax
    6a83:	48 8b 58 18          	mov    0x18(%rax),%rbx
    6a87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a8b:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    6a92:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6a95:	48 63 d0             	movslq %eax,%rdx
    6a98:	48 89 d0             	mov    %rdx,%rax
    6a9b:	48 c1 e0 03          	shl    $0x3,%rax
    6a9f:	48 29 d0             	sub    %rdx,%rax
    6aa2:	48 c1 e0 03          	shl    $0x3,%rax
    6aa6:	48 01 c8             	add    %rcx,%rax
    6aa9:	4c 8b 58 10          	mov    0x10(%rax),%r11
    6aad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ab1:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    6ab8:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6abb:	48 63 d0             	movslq %eax,%rdx
    6abe:	48 89 d0             	mov    %rdx,%rax
    6ac1:	48 c1 e0 03          	shl    $0x3,%rax
    6ac5:	48 29 d0             	sub    %rdx,%rax
    6ac8:	48 c1 e0 03          	shl    $0x3,%rax
    6acc:	48 01 c8             	add    %rcx,%rax
    6acf:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6ad3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ad7:	48 8b b0 40 01 00 00 	mov    0x140(%rax),%rsi
    6ade:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6ae1:	48 63 d0             	movslq %eax,%rdx
    6ae4:	48 89 d0             	mov    %rdx,%rax
    6ae7:	48 c1 e0 03          	shl    $0x3,%rax
    6aeb:	48 29 d0             	sub    %rdx,%rax
    6aee:	48 c1 e0 03          	shl    $0x3,%rax
    6af2:	48 01 f0             	add    %rsi,%rax
    6af5:	8b 70 04             	mov    0x4(%rax),%esi
    6af8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6afc:	4c 8b 90 40 01 00 00 	mov    0x140(%rax),%r10
    6b03:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6b06:	48 63 d0             	movslq %eax,%rdx
    6b09:	48 89 d0             	mov    %rdx,%rax
    6b0c:	48 c1 e0 03          	shl    $0x3,%rax
    6b10:	48 29 d0             	sub    %rdx,%rax
    6b13:	48 c1 e0 03          	shl    $0x3,%rax
    6b17:	4c 01 d0             	add    %r10,%rax
    6b1a:	8b 00                	mov    (%rax),%eax
    6b1c:	48 83 ec 08          	sub    $0x8,%rsp
    6b20:	41 51                	push   %r9
    6b22:	41 50                	push   %r8
    6b24:	57                   	push   %rdi
    6b25:	49 89 d9             	mov    %rbx,%r9
    6b28:	4d 89 d8             	mov    %r11,%r8
    6b2b:	89 f2                	mov    %esi,%edx
    6b2d:	89 c6                	mov    %eax,%esi
    6b2f:	48 8d 3d fa 30 00 00 	lea    0x30fa(%rip),%rdi        # 9c30 <prot_map+0x90>
    6b36:	b8 00 00 00 00       	mov    $0x0,%eax
    6b3b:	e8 40 b9 ff ff       	callq  2480 <printf@plt>
    6b40:	48 83 c4 20          	add    $0x20,%rsp
    6b44:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    6b48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b4c:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    6b53:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    6b57:	0f b7 c0             	movzwl %ax,%eax
    6b5a:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    6b5d:	0f 8c 76 fe ff ff    	jl     69d9 <print_elf_hdr_64+0x64>
    6b63:	48 8d 3d fc 30 00 00 	lea    0x30fc(%rip),%rdi        # 9c66 <prot_map+0xc6>
    6b6a:	e8 71 b8 ff ff       	callq  23e0 <puts@plt>
    6b6f:	48 83 ec 08          	sub    $0x8,%rsp
    6b73:	48 8d 05 46 31 00 00 	lea    0x3146(%rip),%rax        # 9cc0 <prot_map+0x120>
    6b7a:	50                   	push   %rax
    6b7b:	4c 8d 0d fd 30 00 00 	lea    0x30fd(%rip),%r9        # 9c7f <prot_map+0xdf>
    6b82:	4c 8d 05 fd 30 00 00 	lea    0x30fd(%rip),%r8        # 9c86 <prot_map+0xe6>
    6b89:	48 8d 0d fd 30 00 00 	lea    0x30fd(%rip),%rcx        # 9c8d <prot_map+0xed>
    6b90:	48 8d 15 fc 30 00 00 	lea    0x30fc(%rip),%rdx        # 9c93 <prot_map+0xf3>
    6b97:	48 8d 35 fb 30 00 00 	lea    0x30fb(%rip),%rsi        # 9c99 <prot_map+0xf9>
    6b9e:	48 8d 3d fb 30 00 00 	lea    0x30fb(%rip),%rdi        # 9ca0 <prot_map+0x100>
    6ba5:	b8 00 00 00 00       	mov    $0x0,%eax
    6baa:	e8 d1 b8 ff ff       	callq  2480 <printf@plt>
    6baf:	48 83 c4 10          	add    $0x10,%rsp
    6bb3:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    6bba:	e9 c2 00 00 00       	jmpq   6c81 <print_elf_hdr_64+0x30c>
    6bbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6bc3:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    6bca:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6bcd:	48 63 d2             	movslq %edx,%rdx
    6bd0:	48 c1 e2 03          	shl    $0x3,%rdx
    6bd4:	48 01 d0             	add    %rdx,%rax
    6bd7:	48 8b 00             	mov    (%rax),%rax
    6bda:	8b 70 1c             	mov    0x1c(%rax),%esi
    6bdd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6be1:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    6be8:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6beb:	48 63 d2             	movslq %edx,%rdx
    6bee:	48 c1 e2 03          	shl    $0x3,%rdx
    6bf2:	48 01 d0             	add    %rdx,%rax
    6bf5:	48 8b 00             	mov    (%rax),%rax
    6bf8:	44 8b 40 20          	mov    0x20(%rax),%r8d
    6bfc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c00:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    6c07:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6c0a:	48 63 d2             	movslq %edx,%rdx
    6c0d:	48 c1 e2 03          	shl    $0x3,%rdx
    6c11:	48 01 d0             	add    %rdx,%rax
    6c14:	48 8b 00             	mov    (%rax),%rax
    6c17:	48 8b 78 10          	mov    0x10(%rax),%rdi
    6c1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c1f:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    6c26:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6c29:	48 63 d2             	movslq %edx,%rdx
    6c2c:	48 c1 e2 03          	shl    $0x3,%rdx
    6c30:	48 01 d0             	add    %rdx,%rax
    6c33:	48 8b 00             	mov    (%rax),%rax
    6c36:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6c3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c3e:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    6c45:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6c48:	48 63 d2             	movslq %edx,%rdx
    6c4b:	48 c1 e2 03          	shl    $0x3,%rdx
    6c4f:	48 01 d0             	add    %rdx,%rax
    6c52:	48 8b 00             	mov    (%rax),%rax
    6c55:	48 8b 10             	mov    (%rax),%rdx
    6c58:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6c5b:	48 83 ec 08          	sub    $0x8,%rsp
    6c5f:	56                   	push   %rsi
    6c60:	45 89 c1             	mov    %r8d,%r9d
    6c63:	49 89 f8             	mov    %rdi,%r8
    6c66:	89 c6                	mov    %eax,%esi
    6c68:	48 8d 3d 59 30 00 00 	lea    0x3059(%rip),%rdi        # 9cc8 <prot_map+0x128>
    6c6f:	b8 00 00 00 00       	mov    $0x0,%eax
    6c74:	e8 07 b8 ff ff       	callq  2480 <printf@plt>
    6c79:	48 83 c4 10          	add    $0x10,%rsp
    6c7d:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    6c81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c85:	8b 80 5c 01 00 00    	mov    0x15c(%rax),%eax
    6c8b:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    6c8e:	0f 8c 2b ff ff ff    	jl     6bbf <print_elf_hdr_64+0x24a>
    6c94:	90                   	nop
    6c95:	90                   	nop
    6c96:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6c9a:	c9                   	leaveq 
    6c9b:	c3                   	retq   

0000000000006c9c <init_elf64_file>:
    6c9c:	f3 0f 1e fa          	endbr64 
    6ca0:	55                   	push   %rbp
    6ca1:	48 89 e5             	mov    %rsp,%rbp
    6ca4:	53                   	push   %rbx
    6ca5:	48 83 ec 68          	sub    $0x68,%rsp
    6ca9:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    6cad:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    6cb1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6cb8:	00 00 
    6cba:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6cbe:	31 c0                	xor    %eax,%eax
    6cc0:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6cc4:	48 8b 4d 98          	mov    -0x68(%rbp),%rcx
    6cc8:	ba 80 00 00 00       	mov    $0x80,%edx
    6ccd:	48 89 ce             	mov    %rcx,%rsi
    6cd0:	48 89 c7             	mov    %rax,%rdi
    6cd3:	e8 c8 b6 ff ff       	callq  23a0 <strncpy@plt>
    6cd8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6cdc:	48 8d 35 fa 2e 00 00 	lea    0x2efa(%rip),%rsi        # 9bdd <prot_map+0x3d>
    6ce3:	48 89 c7             	mov    %rax,%rdi
    6ce6:	e8 05 b9 ff ff       	callq  25f0 <fopen@plt>
    6ceb:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    6cef:	48 89 82 80 00 00 00 	mov    %rax,0x80(%rdx)
    6cf6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6cfa:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    6d01:	48 85 c0             	test   %rax,%rax
    6d04:	75 38                	jne    6d3e <init_elf64_file+0xa2>
    6d06:	be bf 00 00 00       	mov    $0xbf,%esi
    6d0b:	48 8d 3d b4 2e 00 00 	lea    0x2eb4(%rip),%rdi        # 9bc6 <prot_map+0x26>
    6d12:	b8 00 00 00 00       	mov    $0x0,%eax
    6d17:	e8 64 b7 ff ff       	callq  2480 <printf@plt>
    6d1c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6d20:	48 89 c6             	mov    %rax,%rsi
    6d23:	48 8d 3d c1 2f 00 00 	lea    0x2fc1(%rip),%rdi        # 9ceb <prot_map+0x14b>
    6d2a:	b8 00 00 00 00       	mov    $0x0,%eax
    6d2f:	e8 4c b7 ff ff       	callq  2480 <printf@plt>
    6d34:	bf 01 00 00 00       	mov    $0x1,%edi
    6d39:	e8 e2 b8 ff ff       	callq  2620 <exit@plt>
    6d3e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6d42:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    6d49:	48 89 c7             	mov    %rax,%rdi
    6d4c:	e8 ef b7 ff ff       	callq  2540 <fileno@plt>
    6d51:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    6d55:	89 82 88 00 00 00    	mov    %eax,0x88(%rdx)
    6d5b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6d5f:	8b 80 88 00 00 00    	mov    0x88(%rax),%eax
    6d65:	83 f8 ff             	cmp    $0xffffffff,%eax
    6d68:	75 2c                	jne    6d96 <init_elf64_file+0xfa>
    6d6a:	be c2 00 00 00       	mov    $0xc2,%esi
    6d6f:	48 8d 3d 50 2e 00 00 	lea    0x2e50(%rip),%rdi        # 9bc6 <prot_map+0x26>
    6d76:	b8 00 00 00 00       	mov    $0x0,%eax
    6d7b:	e8 00 b7 ff ff       	callq  2480 <printf@plt>
    6d80:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 9d00 <prot_map+0x160>
    6d87:	e8 54 b6 ff ff       	callq  23e0 <puts@plt>
    6d8c:	bf 01 00 00 00       	mov    $0x1,%edi
    6d91:	e8 8a b8 ff ff       	callq  2620 <exit@plt>
    6d96:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6d9a:	c7 80 28 01 00 00 00 	movl   $0x0,0x128(%rax)
    6da1:	00 00 00 
    6da4:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6da8:	48 8d 90 90 00 00 00 	lea    0x90(%rax),%rdx
    6daf:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6db3:	8b 80 88 00 00 00    	mov    0x88(%rax),%eax
    6db9:	48 89 d6             	mov    %rdx,%rsi
    6dbc:	89 c7                	mov    %eax,%edi
    6dbe:	e8 9d 0a 00 00       	callq  7860 <__fstat>
    6dc3:	85 c0                	test   %eax,%eax
    6dc5:	74 2c                	je     6df3 <init_elf64_file+0x157>
    6dc7:	be c5 00 00 00       	mov    $0xc5,%esi
    6dcc:	48 8d 3d f3 2d 00 00 	lea    0x2df3(%rip),%rdi        # 9bc6 <prot_map+0x26>
    6dd3:	b8 00 00 00 00       	mov    $0x0,%eax
    6dd8:	e8 a3 b6 ff ff       	callq  2480 <printf@plt>
    6ddd:	48 8d 3d 40 2f 00 00 	lea    0x2f40(%rip),%rdi        # 9d24 <prot_map+0x184>
    6de4:	e8 f7 b5 ff ff       	callq  23e0 <puts@plt>
    6de9:	bf 01 00 00 00       	mov    $0x1,%edi
    6dee:	e8 2d b8 ff ff       	callq  2620 <exit@plt>
    6df3:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6df7:	8b 90 88 00 00 00    	mov    0x88(%rax),%edx
    6dfd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6e01:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
    6e08:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    6e0e:	41 89 d0             	mov    %edx,%r8d
    6e11:	b9 01 00 00 00       	mov    $0x1,%ecx
    6e16:	ba 01 00 00 00       	mov    $0x1,%edx
    6e1b:	48 89 c6             	mov    %rax,%rsi
    6e1e:	bf 00 00 00 00       	mov    $0x0,%edi
    6e23:	e8 28 b6 ff ff       	callq  2450 <mmap@plt>
    6e28:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    6e2c:	48 89 82 20 01 00 00 	mov    %rax,0x120(%rdx)
    6e33:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6e37:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
    6e3e:	48 85 c0             	test   %rax,%rax
    6e41:	75 2c                	jne    6e6f <init_elf64_file+0x1d3>
    6e43:	be ca 00 00 00       	mov    $0xca,%esi
    6e48:	48 8d 3d 77 2d 00 00 	lea    0x2d77(%rip),%rdi        # 9bc6 <prot_map+0x26>
    6e4f:	b8 00 00 00 00       	mov    $0x0,%eax
    6e54:	e8 27 b6 ff ff       	callq  2480 <printf@plt>
    6e59:	48 8d 3d d3 2e 00 00 	lea    0x2ed3(%rip),%rdi        # 9d33 <prot_map+0x193>
    6e60:	e8 7b b5 ff ff       	callq  23e0 <puts@plt>
    6e65:	bf 01 00 00 00       	mov    $0x1,%edi
    6e6a:	e8 b1 b7 ff ff       	callq  2620 <exit@plt>
    6e6f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6e73:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    6e7a:	ba 02 00 00 00       	mov    $0x2,%edx
    6e7f:	be 00 00 00 00       	mov    $0x0,%esi
    6e84:	48 89 c7             	mov    %rax,%rdi
    6e87:	e8 04 b7 ff ff       	callq  2590 <fseek@plt>
    6e8c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6e90:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
    6e97:	48 89 c2             	mov    %rax,%rdx
    6e9a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6e9e:	48 89 90 30 01 00 00 	mov    %rdx,0x130(%rax)
    6ea5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6ea9:	8b 80 28 01 00 00    	mov    0x128(%rax),%eax
    6eaf:	83 f8 01             	cmp    $0x1,%eax
    6eb2:	75 38                	jne    6eec <init_elf64_file+0x250>
    6eb4:	be d0 00 00 00       	mov    $0xd0,%esi
    6eb9:	48 8d 3d 06 2d 00 00 	lea    0x2d06(%rip),%rdi        # 9bc6 <prot_map+0x26>
    6ec0:	b8 00 00 00 00       	mov    $0x0,%eax
    6ec5:	e8 b6 b5 ff ff       	callq  2480 <printf@plt>
    6eca:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6ece:	48 89 c6             	mov    %rax,%rsi
    6ed1:	48 8d 3d 70 2e 00 00 	lea    0x2e70(%rip),%rdi        # 9d48 <prot_map+0x1a8>
    6ed8:	b8 00 00 00 00       	mov    $0x0,%eax
    6edd:	e8 9e b5 ff ff       	callq  2480 <printf@plt>
    6ee2:	bf 01 00 00 00       	mov    $0x1,%edi
    6ee7:	e8 34 b7 ff ff       	callq  2620 <exit@plt>
    6eec:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6ef0:	48 8b 90 20 01 00 00 	mov    0x120(%rax),%rdx
    6ef7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6efb:	48 89 90 38 01 00 00 	mov    %rdx,0x138(%rax)
    6f02:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6f06:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    6f0d:	48 8b 50 20          	mov    0x20(%rax),%rdx
    6f11:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6f15:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
    6f1c:	48 39 c2             	cmp    %rax,%rdx
    6f1f:	72 4e                	jb     6f6f <init_elf64_file+0x2d3>
    6f21:	be d9 00 00 00       	mov    $0xd9,%esi
    6f26:	48 8d 3d 99 2c 00 00 	lea    0x2c99(%rip),%rdi        # 9bc6 <prot_map+0x26>
    6f2d:	b8 00 00 00 00       	mov    $0x0,%eax
    6f32:	e8 49 b5 ff ff       	callq  2480 <printf@plt>
    6f37:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6f3b:	48 8b 90 30 01 00 00 	mov    0x130(%rax),%rdx
    6f42:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6f46:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    6f4d:	48 8b 40 20          	mov    0x20(%rax),%rax
    6f51:	48 89 c6             	mov    %rax,%rsi
    6f54:	48 8d 3d 0d 2e 00 00 	lea    0x2e0d(%rip),%rdi        # 9d68 <prot_map+0x1c8>
    6f5b:	b8 00 00 00 00       	mov    $0x0,%eax
    6f60:	e8 1b b5 ff ff       	callq  2480 <printf@plt>
    6f65:	bf 01 00 00 00       	mov    $0x1,%edi
    6f6a:	e8 b1 b6 ff ff       	callq  2620 <exit@plt>
    6f6f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6f73:	48 8d 15 fb f9 ff ff 	lea    -0x605(%rip),%rdx        # 6975 <print_elf_hdr_64>
    6f7a:	48 89 90 68 01 00 00 	mov    %rdx,0x168(%rax)
    6f81:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6f85:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    6f8c:	48 8b 40 20          	mov    0x20(%rax),%rax
    6f90:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6f94:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6f98:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    6f9f:	0f b7 40 36          	movzwl 0x36(%rax),%eax
    6fa3:	66 89 45 aa          	mov    %ax,-0x56(%rbp)
    6fa7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    6fab:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    6fb2:	0f b7 40 38          	movzwl 0x38(%rax),%eax
    6fb6:	66 89 45 b0          	mov    %ax,-0x50(%rbp)
    6fba:	48 8d 45 aa          	lea    -0x56(%rbp),%rax
    6fbe:	48 8d 15 fb 50 00 00 	lea    0x50fb(%rip),%rdx        # c0c0 <limits>
    6fc5:	be 00 00 00 00       	mov    $0x0,%esi
    6fca:	48 89 c7             	mov    %rax,%rdi
    6fcd:	e8 21 f6 ff ff       	callq  65f3 <within_lmts>
    6fd2:	85 c0                	test   %eax,%eax
    6fd4:	75 3a                	jne    7010 <init_elf64_file+0x374>
    6fd6:	be e2 00 00 00       	mov    $0xe2,%esi
    6fdb:	48 8d 3d e4 2b 00 00 	lea    0x2be4(%rip),%rdi        # 9bc6 <prot_map+0x26>
    6fe2:	b8 00 00 00 00       	mov    $0x0,%eax
    6fe7:	e8 94 b4 ff ff       	callq  2480 <printf@plt>
    6fec:	0f b7 45 aa          	movzwl -0x56(%rbp),%eax
    6ff0:	0f b7 c0             	movzwl %ax,%eax
    6ff3:	89 c6                	mov    %eax,%esi
    6ff5:	48 8d 3d 9c 2d 00 00 	lea    0x2d9c(%rip),%rdi        # 9d98 <prot_map+0x1f8>
    6ffc:	b8 00 00 00 00       	mov    $0x0,%eax
    7001:	e8 7a b4 ff ff       	callq  2480 <printf@plt>
    7006:	bf 01 00 00 00       	mov    $0x1,%edi
    700b:	e8 10 b6 ff ff       	callq  2620 <exit@plt>
    7010:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7014:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
    701b:	48 83 c0 40          	add    $0x40,%rax
    701f:	48 89 c2             	mov    %rax,%rdx
    7022:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7026:	48 89 90 40 01 00 00 	mov    %rdx,0x140(%rax)
    702d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7031:	c7 80 5c 01 00 00 00 	movl   $0x0,0x15c(%rax)
    7038:	00 00 00 
    703b:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    7042:	eb 44                	jmp    7088 <init_elf64_file+0x3ec>
    7044:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7048:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    704f:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    7052:	48 63 d0             	movslq %eax,%rdx
    7055:	48 89 d0             	mov    %rdx,%rax
    7058:	48 c1 e0 03          	shl    $0x3,%rax
    705c:	48 29 d0             	sub    %rdx,%rax
    705f:	48 c1 e0 03          	shl    $0x3,%rax
    7063:	48 01 c8             	add    %rcx,%rax
    7066:	8b 00                	mov    (%rax),%eax
    7068:	83 f8 01             	cmp    $0x1,%eax
    706b:	75 17                	jne    7084 <init_elf64_file+0x3e8>
    706d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7071:	8b 80 5c 01 00 00    	mov    0x15c(%rax),%eax
    7077:	8d 50 01             	lea    0x1(%rax),%edx
    707a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    707e:	89 90 5c 01 00 00    	mov    %edx,0x15c(%rax)
    7084:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
    7088:	0f b7 45 b0          	movzwl -0x50(%rbp),%eax
    708c:	39 45 b4             	cmp    %eax,-0x4c(%rbp)
    708f:	7c b3                	jl     7044 <init_elf64_file+0x3a8>
    7091:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7095:	8b 80 5c 01 00 00    	mov    0x15c(%rax),%eax
    709b:	48 98                	cltq   
    709d:	be 08 00 00 00       	mov    $0x8,%esi
    70a2:	48 89 c7             	mov    %rax,%rdi
    70a5:	e8 46 b4 ff ff       	callq  24f0 <calloc@plt>
    70aa:	48 89 c2             	mov    %rax,%rdx
    70ad:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    70b1:	48 89 90 60 01 00 00 	mov    %rdx,0x160(%rax)
    70b8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    70bc:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    70c3:	48 85 c0             	test   %rax,%rax
    70c6:	75 31                	jne    70f9 <init_elf64_file+0x45d>
    70c8:	be f7 00 00 00       	mov    $0xf7,%esi
    70cd:	48 8d 3d f2 2a 00 00 	lea    0x2af2(%rip),%rdi        # 9bc6 <prot_map+0x26>
    70d4:	b8 00 00 00 00       	mov    $0x0,%eax
    70d9:	e8 a2 b3 ff ff       	callq  2480 <printf@plt>
    70de:	48 8d 3d de 2c 00 00 	lea    0x2cde(%rip),%rdi        # 9dc3 <prot_map+0x223>
    70e5:	b8 00 00 00 00       	mov    $0x0,%eax
    70ea:	e8 91 b3 ff ff       	callq  2480 <printf@plt>
    70ef:	bf 01 00 00 00       	mov    $0x1,%edi
    70f4:	e8 27 b5 ff ff       	callq  2620 <exit@plt>
    70f9:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    7100:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    7107:	e9 c8 00 00 00       	jmpq   71d4 <init_elf64_file+0x538>
    710c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7110:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    7117:	8b 45 b4             	mov    -0x4c(%rbp),%eax
    711a:	48 63 d0             	movslq %eax,%rdx
    711d:	48 89 d0             	mov    %rdx,%rax
    7120:	48 c1 e0 03          	shl    $0x3,%rax
    7124:	48 29 d0             	sub    %rdx,%rax
    7127:	48 c1 e0 03          	shl    $0x3,%rax
    712b:	48 01 c8             	add    %rcx,%rax
    712e:	8b 00                	mov    (%rax),%eax
    7130:	83 f8 01             	cmp    $0x1,%eax
    7133:	0f 85 97 00 00 00    	jne    71d0 <init_elf64_file+0x534>
    7139:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    713d:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    7144:	8b 55 b8             	mov    -0x48(%rbp),%edx
    7147:	48 63 d2             	movslq %edx,%rdx
    714a:	48 c1 e2 03          	shl    $0x3,%rdx
    714e:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
    7152:	bf 30 00 00 00       	mov    $0x30,%edi
    7157:	e8 f4 b3 ff ff       	callq  2550 <malloc@plt>
    715c:	48 89 03             	mov    %rax,(%rbx)
    715f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7163:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    716a:	8b 55 b8             	mov    -0x48(%rbp),%edx
    716d:	48 63 d2             	movslq %edx,%rdx
    7170:	48 c1 e2 03          	shl    $0x3,%rdx
    7174:	48 01 d0             	add    %rdx,%rax
    7177:	48 8b 00             	mov    (%rax),%rax
    717a:	48 85 c0             	test   %rax,%rax
    717d:	75 2c                	jne    71ab <init_elf64_file+0x50f>
    717f:	be fe 00 00 00       	mov    $0xfe,%esi
    7184:	48 8d 3d 3b 2a 00 00 	lea    0x2a3b(%rip),%rdi        # 9bc6 <prot_map+0x26>
    718b:	b8 00 00 00 00       	mov    $0x0,%eax
    7190:	e8 eb b2 ff ff       	callq  2480 <printf@plt>
    7195:	48 8d 3d 32 2c 00 00 	lea    0x2c32(%rip),%rdi        # 9dce <prot_map+0x22e>
    719c:	e8 3f b2 ff ff       	callq  23e0 <puts@plt>
    71a1:	bf 01 00 00 00       	mov    $0x1,%edi
    71a6:	e8 75 b4 ff ff       	callq  2620 <exit@plt>
    71ab:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    71af:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    71b6:	8b 55 b8             	mov    -0x48(%rbp),%edx
    71b9:	48 63 d2             	movslq %edx,%rdx
    71bc:	48 c1 e2 03          	shl    $0x3,%rdx
    71c0:	48 01 d0             	add    %rdx,%rax
    71c3:	48 8b 00             	mov    (%rax),%rax
    71c6:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    71c9:	89 50 18             	mov    %edx,0x18(%rax)
    71cc:	83 45 b8 01          	addl   $0x1,-0x48(%rbp)
    71d0:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
    71d4:	0f b7 45 b0          	movzwl -0x50(%rbp),%eax
    71d8:	39 45 b4             	cmp    %eax,-0x4c(%rbp)
    71db:	0f 8c 2b ff ff ff    	jl     710c <init_elf64_file+0x470>
    71e1:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    71e8:	e9 a5 02 00 00       	jmpq   7492 <init_elf64_file+0x7f6>
    71ed:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    71f1:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    71f8:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    71fb:	48 63 d2             	movslq %edx,%rdx
    71fe:	48 c1 e2 03          	shl    $0x3,%rdx
    7202:	48 01 d0             	add    %rdx,%rax
    7205:	48 8b 00             	mov    (%rax),%rax
    7208:	8b 40 18             	mov    0x18(%rax),%eax
    720b:	89 45 b8             	mov    %eax,-0x48(%rbp)
    720e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7212:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    7219:	8b 45 b8             	mov    -0x48(%rbp),%eax
    721c:	48 63 d0             	movslq %eax,%rdx
    721f:	48 89 d0             	mov    %rdx,%rax
    7222:	48 c1 e0 03          	shl    $0x3,%rax
    7226:	48 29 d0             	sub    %rdx,%rax
    7229:	48 c1 e0 03          	shl    $0x3,%rax
    722d:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    7231:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7235:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    723c:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    723f:	48 63 c9             	movslq %ecx,%rcx
    7242:	48 c1 e1 03          	shl    $0x3,%rcx
    7246:	48 01 c8             	add    %rcx,%rax
    7249:	48 8b 00             	mov    (%rax),%rax
    724c:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    7250:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7254:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7258:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    725f:	8b 45 b8             	mov    -0x48(%rbp),%eax
    7262:	48 63 d0             	movslq %eax,%rdx
    7265:	48 89 d0             	mov    %rdx,%rax
    7268:	48 c1 e0 03          	shl    $0x3,%rax
    726c:	48 29 d0             	sub    %rdx,%rax
    726f:	48 c1 e0 03          	shl    $0x3,%rax
    7273:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    7277:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    727b:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    7282:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    7285:	48 63 c9             	movslq %ecx,%rcx
    7288:	48 c1 e1 03          	shl    $0x3,%rcx
    728c:	48 01 c8             	add    %rcx,%rax
    728f:	48 8b 00             	mov    (%rax),%rax
    7292:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    7296:	48 89 50 10          	mov    %rdx,0x10(%rax)
    729a:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    729e:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    72a5:	8b 45 b8             	mov    -0x48(%rbp),%eax
    72a8:	48 63 d0             	movslq %eax,%rdx
    72ab:	48 89 d0             	mov    %rdx,%rax
    72ae:	48 c1 e0 03          	shl    $0x3,%rax
    72b2:	48 29 d0             	sub    %rdx,%rax
    72b5:	48 c1 e0 03          	shl    $0x3,%rax
    72b9:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    72bd:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    72c1:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    72c8:	8b 4d b4             	mov    -0x4c(%rbp),%ecx
    72cb:	48 63 c9             	movslq %ecx,%rcx
    72ce:	48 c1 e1 03          	shl    $0x3,%rcx
    72d2:	48 01 c8             	add    %rcx,%rax
    72d5:	48 8b 00             	mov    (%rax),%rax
    72d8:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    72dc:	48 89 10             	mov    %rdx,(%rax)
    72df:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    72e3:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    72ea:	8b 45 b8             	mov    -0x48(%rbp),%eax
    72ed:	48 63 d0             	movslq %eax,%rdx
    72f0:	48 89 d0             	mov    %rdx,%rax
    72f3:	48 c1 e0 03          	shl    $0x3,%rax
    72f7:	48 29 d0             	sub    %rdx,%rax
    72fa:	48 c1 e0 03          	shl    $0x3,%rax
    72fe:	48 01 c8             	add    %rcx,%rax
    7301:	8b 40 04             	mov    0x4(%rax),%eax
    7304:	89 45 c0             	mov    %eax,-0x40(%rbp)
    7307:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    730b:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    7312:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    7315:	48 63 d2             	movslq %edx,%rdx
    7318:	48 c1 e2 03          	shl    $0x3,%rdx
    731c:	48 01 d0             	add    %rdx,%rax
    731f:	48 8b 00             	mov    (%rax),%rax
    7322:	8b 55 c0             	mov    -0x40(%rbp),%edx
    7325:	89 50 1c             	mov    %edx,0x1c(%rax)
    7328:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    732c:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    7333:	8b 45 b8             	mov    -0x48(%rbp),%eax
    7336:	48 63 d0             	movslq %eax,%rdx
    7339:	48 89 d0             	mov    %rdx,%rax
    733c:	48 c1 e0 03          	shl    $0x3,%rax
    7340:	48 29 d0             	sub    %rdx,%rax
    7343:	48 c1 e0 03          	shl    $0x3,%rax
    7347:	48 01 c8             	add    %rcx,%rax
    734a:	48 8b 40 10          	mov    0x10(%rax),%rax
    734e:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7354:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    7358:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    735c:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    7363:	8b 45 b8             	mov    -0x48(%rbp),%eax
    7366:	48 63 d0             	movslq %eax,%rdx
    7369:	48 89 d0             	mov    %rdx,%rax
    736c:	48 c1 e0 03          	shl    $0x3,%rax
    7370:	48 29 d0             	sub    %rdx,%rax
    7373:	48 c1 e0 03          	shl    $0x3,%rax
    7377:	48 01 c8             	add    %rcx,%rax
    737a:	48 8b 48 10          	mov    0x10(%rax),%rcx
    737e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7382:	48 8b b0 40 01 00 00 	mov    0x140(%rax),%rsi
    7389:	8b 45 b8             	mov    -0x48(%rbp),%eax
    738c:	48 63 d0             	movslq %eax,%rdx
    738f:	48 89 d0             	mov    %rdx,%rax
    7392:	48 c1 e0 03          	shl    $0x3,%rax
    7396:	48 29 d0             	sub    %rdx,%rax
    7399:	48 c1 e0 03          	shl    $0x3,%rax
    739d:	48 01 f0             	add    %rsi,%rax
    73a0:	48 8b 40 28          	mov    0x28(%rax),%rax
    73a4:	48 01 c8             	add    %rcx,%rax
    73a7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    73ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73af:	25 ff 0f 00 00       	and    $0xfff,%eax
    73b4:	48 85 c0             	test   %rax,%rax
    73b7:	75 09                	jne    73c2 <init_elf64_file+0x726>
    73b9:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
    73c0:	eb 07                	jmp    73c9 <init_elf64_file+0x72d>
    73c2:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%rbp)
    73c9:	48 81 65 e0 00 f0 ff 	andq   $0xfffffffffffff000,-0x20(%rbp)
    73d0:	ff 
    73d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73d5:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    73d9:	48 c1 e8 0c          	shr    $0xc,%rax
    73dd:	89 c2                	mov    %eax,%edx
    73df:	8b 45 bc             	mov    -0x44(%rbp),%eax
    73e2:	01 d0                	add    %edx,%eax
    73e4:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    73e7:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    73eb:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    73f2:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    73f5:	48 63 d2             	movslq %edx,%rdx
    73f8:	48 c1 e2 03          	shl    $0x3,%rdx
    73fc:	48 01 d0             	add    %rdx,%rax
    73ff:	48 8b 00             	mov    (%rax),%rax
    7402:	8b 55 c4             	mov    -0x3c(%rbp),%edx
    7405:	89 50 20             	mov    %edx,0x20(%rax)
    7408:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    740c:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    7413:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    7416:	48 63 d2             	movslq %edx,%rdx
    7419:	48 c1 e2 03          	shl    $0x3,%rdx
    741d:	48 01 d0             	add    %rdx,%rax
    7420:	48 8b 00             	mov    (%rax),%rax
    7423:	48 8b 00             	mov    (%rax),%rax
    7426:	48 85 c0             	test   %rax,%rax
    7429:	74 62                	je     748d <init_elf64_file+0x7f1>
    742b:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)
    742f:	74 5c                	je     748d <init_elf64_file+0x7f1>
    7431:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7435:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
    743c:	48 89 c6             	mov    %rax,%rsi
    743f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7443:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    744a:	8b 45 b8             	mov    -0x48(%rbp),%eax
    744d:	48 63 d0             	movslq %eax,%rdx
    7450:	48 89 d0             	mov    %rdx,%rax
    7453:	48 c1 e0 03          	shl    $0x3,%rax
    7457:	48 29 d0             	sub    %rdx,%rax
    745a:	48 c1 e0 03          	shl    $0x3,%rax
    745e:	48 01 c8             	add    %rcx,%rax
    7461:	48 8b 40 08          	mov    0x8(%rax),%rax
    7465:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
    7469:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    746d:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    7474:	8b 55 b4             	mov    -0x4c(%rbp),%edx
    7477:	48 63 d2             	movslq %edx,%rdx
    747a:	48 c1 e2 03          	shl    $0x3,%rdx
    747e:	48 01 d0             	add    %rdx,%rax
    7481:	48 8b 00             	mov    (%rax),%rax
    7484:	48 89 ca             	mov    %rcx,%rdx
    7487:	48 89 50 28          	mov    %rdx,0x28(%rax)
    748b:	eb 01                	jmp    748e <init_elf64_file+0x7f2>
    748d:	90                   	nop
    748e:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)
    7492:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7496:	8b 80 5c 01 00 00    	mov    0x15c(%rax),%eax
    749c:	39 45 b4             	cmp    %eax,-0x4c(%rbp)
    749f:	0f 8c 48 fd ff ff    	jl     71ed <init_elf64_file+0x551>
    74a5:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    74a9:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    74b0:	48 8b 40 28          	mov    0x28(%rax),%rax
    74b4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    74b8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    74bc:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    74c3:	0f b7 40 3a          	movzwl 0x3a(%rax),%eax
    74c7:	66 89 45 ac          	mov    %ax,-0x54(%rbp)
    74cb:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    74cf:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    74d6:	0f b7 40 3c          	movzwl 0x3c(%rax),%eax
    74da:	66 89 45 ae          	mov    %ax,-0x52(%rbp)
    74de:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    74e2:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    74e9:	0f b7 40 3e          	movzwl 0x3e(%rax),%eax
    74ed:	66 89 45 b2          	mov    %ax,-0x4e(%rbp)
    74f1:	48 8d 45 ac          	lea    -0x54(%rbp),%rax
    74f5:	48 8d 15 e4 4b 00 00 	lea    0x4be4(%rip),%rdx        # c0e0 <limits+0x20>
    74fc:	be 00 00 00 00       	mov    $0x0,%esi
    7501:	48 89 c7             	mov    %rax,%rdi
    7504:	e8 ea f0 ff ff       	callq  65f3 <within_lmts>
    7509:	85 c0                	test   %eax,%eax
    750b:	75 3a                	jne    7547 <init_elf64_file+0x8ab>
    750d:	be 3b 01 00 00       	mov    $0x13b,%esi
    7512:	48 8d 3d ad 26 00 00 	lea    0x26ad(%rip),%rdi        # 9bc6 <prot_map+0x26>
    7519:	b8 00 00 00 00       	mov    $0x0,%eax
    751e:	e8 5d af ff ff       	callq  2480 <printf@plt>
    7523:	0f b7 45 ac          	movzwl -0x54(%rbp),%eax
    7527:	0f b7 c0             	movzwl %ax,%eax
    752a:	89 c6                	mov    %eax,%esi
    752c:	48 8d 3d ad 28 00 00 	lea    0x28ad(%rip),%rdi        # 9de0 <prot_map+0x240>
    7533:	b8 00 00 00 00       	mov    $0x0,%eax
    7538:	e8 43 af ff ff       	callq  2480 <printf@plt>
    753d:	bf 01 00 00 00       	mov    $0x1,%edi
    7542:	e8 d9 b0 ff ff       	callq  2620 <exit@plt>
    7547:	0f b7 45 ae          	movzwl -0x52(%rbp),%eax
    754b:	66 39 45 b2          	cmp    %ax,-0x4e(%rbp)
    754f:	72 31                	jb     7582 <init_elf64_file+0x8e6>
    7551:	be 3e 01 00 00       	mov    $0x13e,%esi
    7556:	48 8d 3d 69 26 00 00 	lea    0x2669(%rip),%rdi        # 9bc6 <prot_map+0x26>
    755d:	b8 00 00 00 00       	mov    $0x0,%eax
    7562:	e8 19 af ff ff       	callq  2480 <printf@plt>
    7567:	48 8d 3d a7 28 00 00 	lea    0x28a7(%rip),%rdi        # 9e15 <prot_map+0x275>
    756e:	b8 00 00 00 00       	mov    $0x0,%eax
    7573:	e8 08 af ff ff       	callq  2480 <printf@plt>
    7578:	bf 01 00 00 00       	mov    $0x1,%edi
    757d:	e8 9e b0 ff ff       	callq  2620 <exit@plt>
    7582:	48 8d 45 ae          	lea    -0x52(%rbp),%rax
    7586:	48 8d 15 43 4b 00 00 	lea    0x4b43(%rip),%rdx        # c0d0 <limits+0x10>
    758d:	be 00 00 00 00       	mov    $0x0,%esi
    7592:	48 89 c7             	mov    %rax,%rdi
    7595:	e8 59 f0 ff ff       	callq  65f3 <within_lmts>
    759a:	85 c0                	test   %eax,%eax
    759c:	75 3a                	jne    75d8 <init_elf64_file+0x93c>
    759e:	be 41 01 00 00       	mov    $0x141,%esi
    75a3:	48 8d 3d 1c 26 00 00 	lea    0x261c(%rip),%rdi        # 9bc6 <prot_map+0x26>
    75aa:	b8 00 00 00 00       	mov    $0x0,%eax
    75af:	e8 cc ae ff ff       	callq  2480 <printf@plt>
    75b4:	0f b7 45 ae          	movzwl -0x52(%rbp),%eax
    75b8:	0f b7 c0             	movzwl %ax,%eax
    75bb:	89 c6                	mov    %eax,%esi
    75bd:	48 8d 3d 74 28 00 00 	lea    0x2874(%rip),%rdi        # 9e38 <prot_map+0x298>
    75c4:	b8 00 00 00 00       	mov    $0x0,%eax
    75c9:	e8 b2 ae ff ff       	callq  2480 <printf@plt>
    75ce:	bf 01 00 00 00       	mov    $0x1,%edi
    75d3:	e8 48 b0 ff ff       	callq  2620 <exit@plt>
    75d8:	0f b7 45 ac          	movzwl -0x54(%rbp),%eax
    75dc:	66 83 f8 40          	cmp    $0x40,%ax
    75e0:	74 2c                	je     760e <init_elf64_file+0x972>
    75e2:	be 44 01 00 00       	mov    $0x144,%esi
    75e7:	48 8d 3d d8 25 00 00 	lea    0x25d8(%rip),%rdi        # 9bc6 <prot_map+0x26>
    75ee:	b8 00 00 00 00       	mov    $0x0,%eax
    75f3:	e8 88 ae ff ff       	callq  2480 <printf@plt>
    75f8:	48 8d 3d 69 28 00 00 	lea    0x2869(%rip),%rdi        # 9e68 <prot_map+0x2c8>
    75ff:	e8 dc ad ff ff       	callq  23e0 <puts@plt>
    7604:	bf 01 00 00 00       	mov    $0x1,%edi
    7609:	e8 12 b0 ff ff       	callq  2620 <exit@plt>
    760e:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7612:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
    7619:	48 89 c2             	mov    %rax,%rdx
    761c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7620:	48 01 d0             	add    %rdx,%rax
    7623:	48 89 c2             	mov    %rax,%rdx
    7626:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    762a:	48 89 90 48 01 00 00 	mov    %rdx,0x148(%rax)
    7631:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7635:	48 8b 80 48 01 00 00 	mov    0x148(%rax),%rax
    763c:	0f b7 55 b2          	movzwl -0x4e(%rbp),%edx
    7640:	48 c1 e2 06          	shl    $0x6,%rdx
    7644:	48 01 d0             	add    %rdx,%rax
    7647:	48 8b 40 20          	mov    0x20(%rax),%rax
    764b:	89 c2                	mov    %eax,%edx
    764d:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7651:	89 90 58 01 00 00    	mov    %edx,0x158(%rax)
    7657:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    765b:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
    7662:	48 89 c1             	mov    %rax,%rcx
    7665:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7669:	48 8b 80 48 01 00 00 	mov    0x148(%rax),%rax
    7670:	0f b7 55 b2          	movzwl -0x4e(%rbp),%edx
    7674:	48 c1 e2 06          	shl    $0x6,%rdx
    7678:	48 01 d0             	add    %rdx,%rax
    767b:	48 8b 40 18          	mov    0x18(%rax),%rax
    767f:	48 01 c8             	add    %rcx,%rax
    7682:	48 89 c2             	mov    %rax,%rdx
    7685:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    7689:	48 89 90 50 01 00 00 	mov    %rdx,0x150(%rax)
    7690:	90                   	nop
    7691:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7695:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    769c:	00 00 
    769e:	74 05                	je     76a5 <init_elf64_file+0xa09>
    76a0:	e8 9b ad ff ff       	callq  2440 <__stack_chk_fail@plt>
    76a5:	48 83 c4 68          	add    $0x68,%rsp
    76a9:	5b                   	pop    %rbx
    76aa:	5d                   	pop    %rbp
    76ab:	c3                   	retq   

00000000000076ac <fini_elf64_file>:
    76ac:	f3 0f 1e fa          	endbr64 
    76b0:	55                   	push   %rbp
    76b1:	48 89 e5             	mov    %rsp,%rbp
    76b4:	48 83 ec 20          	sub    $0x20,%rsp
    76b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    76bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76c0:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    76c7:	48 89 c7             	mov    %rax,%rdi
    76ca:	e8 51 ad ff ff       	callq  2420 <fclose@plt>
    76cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76d3:	c7 80 28 01 00 00 01 	movl   $0x1,0x128(%rax)
    76da:	00 00 00 
    76dd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    76e4:	eb 27                	jmp    770d <fini_elf64_file+0x61>
    76e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76ea:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    76f1:	8b 55 fc             	mov    -0x4(%rbp),%edx
    76f4:	48 63 d2             	movslq %edx,%rdx
    76f7:	48 c1 e2 03          	shl    $0x3,%rdx
    76fb:	48 01 d0             	add    %rdx,%rax
    76fe:	48 8b 00             	mov    (%rax),%rax
    7701:	48 89 c7             	mov    %rax,%rdi
    7704:	e8 57 ac ff ff       	callq  2360 <free@plt>
    7709:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    770d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7711:	8b 80 5c 01 00 00    	mov    0x15c(%rax),%eax
    7717:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    771a:	7c ca                	jl     76e6 <fini_elf64_file+0x3a>
    771c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7720:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    7727:	48 89 c7             	mov    %rax,%rdi
    772a:	e8 31 ac ff ff       	callq  2360 <free@plt>
    772f:	90                   	nop
    7730:	c9                   	leaveq 
    7731:	c3                   	retq   

0000000000007732 <get_shdr>:
    7732:	f3 0f 1e fa          	endbr64 
    7736:	55                   	push   %rbp
    7737:	48 89 e5             	mov    %rsp,%rbp
    773a:	48 83 ec 20          	sub    $0x20,%rsp
    773e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7742:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7746:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    774d:	00 
    774e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    7755:	eb 65                	jmp    77bc <get_shdr+0x8a>
    7757:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    775b:	48 8b 80 48 01 00 00 	mov    0x148(%rax),%rax
    7762:	8b 55 f0             	mov    -0x10(%rbp),%edx
    7765:	48 63 d2             	movslq %edx,%rdx
    7768:	48 c1 e2 06          	shl    $0x6,%rdx
    776c:	48 01 d0             	add    %rdx,%rax
    776f:	8b 00                	mov    (%rax),%eax
    7771:	89 45 f4             	mov    %eax,-0xc(%rbp)
    7774:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7778:	48 8b 90 50 01 00 00 	mov    0x150(%rax),%rdx
    777f:	8b 45 f4             	mov    -0xc(%rbp),%eax
    7782:	48 98                	cltq   
    7784:	48 01 c2             	add    %rax,%rdx
    7787:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    778b:	48 89 c6             	mov    %rax,%rsi
    778e:	48 89 d7             	mov    %rdx,%rdi
    7791:	e8 6a ad ff ff       	callq  2500 <strcmp@plt>
    7796:	85 c0                	test   %eax,%eax
    7798:	75 1e                	jne    77b8 <get_shdr+0x86>
    779a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    779e:	48 8b 80 48 01 00 00 	mov    0x148(%rax),%rax
    77a5:	8b 55 f0             	mov    -0x10(%rbp),%edx
    77a8:	48 63 d2             	movslq %edx,%rdx
    77ab:	48 c1 e2 06          	shl    $0x6,%rdx
    77af:	48 01 d0             	add    %rdx,%rax
    77b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    77b6:	eb 1b                	jmp    77d3 <get_shdr+0xa1>
    77b8:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    77bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    77c0:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    77c7:	0f b7 40 3c          	movzwl 0x3c(%rax),%eax
    77cb:	0f b7 c0             	movzwl %ax,%eax
    77ce:	39 45 f0             	cmp    %eax,-0x10(%rbp)
    77d1:	7c 84                	jl     7757 <get_shdr+0x25>
    77d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77d7:	c9                   	leaveq 
    77d8:	c3                   	retq   
    77d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000077e0 <__libc_csu_init>:
    77e0:	f3 0f 1e fa          	endbr64 
    77e4:	41 57                	push   %r15
    77e6:	4c 8d 3d 33 44 00 00 	lea    0x4433(%rip),%r15        # bc20 <__frame_dummy_init_array_entry>
    77ed:	41 56                	push   %r14
    77ef:	49 89 d6             	mov    %rdx,%r14
    77f2:	41 55                	push   %r13
    77f4:	49 89 f5             	mov    %rsi,%r13
    77f7:	41 54                	push   %r12
    77f9:	41 89 fc             	mov    %edi,%r12d
    77fc:	55                   	push   %rbp
    77fd:	48 8d 2d 24 44 00 00 	lea    0x4424(%rip),%rbp        # bc28 <__do_global_dtors_aux_fini_array_entry>
    7804:	53                   	push   %rbx
    7805:	4c 29 fd             	sub    %r15,%rbp
    7808:	48 83 ec 08          	sub    $0x8,%rsp
    780c:	e8 ef a7 ff ff       	callq  2000 <_init>
    7811:	48 c1 fd 03          	sar    $0x3,%rbp
    7815:	74 1f                	je     7836 <__libc_csu_init+0x56>
    7817:	31 db                	xor    %ebx,%ebx
    7819:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7820:	4c 89 f2             	mov    %r14,%rdx
    7823:	4c 89 ee             	mov    %r13,%rsi
    7826:	44 89 e7             	mov    %r12d,%edi
    7829:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    782d:	48 83 c3 01          	add    $0x1,%rbx
    7831:	48 39 dd             	cmp    %rbx,%rbp
    7834:	75 ea                	jne    7820 <__libc_csu_init+0x40>
    7836:	48 83 c4 08          	add    $0x8,%rsp
    783a:	5b                   	pop    %rbx
    783b:	5d                   	pop    %rbp
    783c:	41 5c                	pop    %r12
    783e:	41 5d                	pop    %r13
    7840:	41 5e                	pop    %r14
    7842:	41 5f                	pop    %r15
    7844:	c3                   	retq   
    7845:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    784c:	00 00 00 00 

0000000000007850 <__libc_csu_fini>:
    7850:	f3 0f 1e fa          	endbr64 
    7854:	c3                   	retq   
    7855:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    785c:	00 00 00 
    785f:	90                   	nop

0000000000007860 <__fstat>:
    7860:	f3 0f 1e fa          	endbr64 
    7864:	48 89 f2             	mov    %rsi,%rdx
    7867:	89 fe                	mov    %edi,%esi
    7869:	bf 01 00 00 00       	mov    $0x1,%edi
    786e:	e9 fd ac ff ff       	jmpq   2570 <__fxstat@plt>

Disassembly of section .fini:

0000000000007874 <_fini>:
    7874:	f3 0f 1e fa          	endbr64 
    7878:	48 83 ec 08          	sub    $0x8,%rsp
    787c:	48 83 c4 08          	add    $0x8,%rsp
    7880:	c3                   	retq   

Disassembly of section .rodata:

0000000000008000 <_IO_stdin_used>:
    8000:	01 00                	add    %eax,(%rax)
    8002:	02 00                	add    (%rax),%al
	...
    8020:	74 69                	je     808b <_IO_stdin_used+0x8b>
    8022:	6d                   	insl   (%dx),%es:(%rdi)
    8023:	65 69 74 00 54 69 6d 	imul   $0x6e696d69,%gs:0x54(%rax,%rax,1),%esi
    802a:	69 6e 
    802c:	67 20 74 68 65       	and    %dh,0x65(%eax,%ebp,2)
    8031:	20 66 6f             	and    %ah,0x6f(%rsi)
    8034:	72 6b                	jb     80a1 <_IO_stdin_used+0xa1>
    8036:	20 74 6f 20          	and    %dh,0x20(%rdi,%rbp,2)
    803a:	62                   	(bad)  
    803b:	6f                   	outsl  %ds:(%rsi),(%dx)
    803c:	6f                   	outsl  %ds:(%rsi),(%dx)
    803d:	74 20                	je     805f <_IO_stdin_used+0x5f>
    803f:	74 69                	je     80aa <_IO_stdin_used+0xaa>
    8041:	6d                   	insl   (%dx),%es:(%rdi)
    8042:	65 00 74 73 20       	add    %dh,%gs:0x20(%rbx,%rsi,2)
    8047:	3d 20 25 6c 64       	cmp    $0x646c2520,%eax
    804c:	20 75 73             	and    %dh,0x73(%rbp)
    804f:	0a 00                	or     (%rax),%al
    8051:	25 30 34 64 3a       	and    $0x3a643430,%eax
    8056:	20 25 73 20 3a 00    	and    %ah,0x3a2073(%rip)        # 3aa0cf <_end+0x39cf0f>
    805c:	55                   	push   %rbp
    805d:	6e                   	outsb  %ds:(%rsi),(%dx)
    805e:	61                   	(bad)  
    805f:	62                   	(bad)  
    8060:	6c                   	insb   (%dx),%es:(%rdi)
    8061:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
    8066:	67 65 74 20          	addr32 gs je 808a <_IO_stdin_used+0x8a>
    806a:	61                   	(bad)  
    806b:	20 73 6f             	and    %dh,0x6f(%rbx)
    806e:	63 6b 65             	movslq 0x65(%rbx),%ebp
    8071:	74 00                	je     8073 <_IO_stdin_used+0x73>
    8073:	55                   	push   %rbp
    8074:	6e                   	outsb  %ds:(%rsi),(%dx)
    8075:	61                   	(bad)  
    8076:	62                   	(bad)  
    8077:	6c                   	insb   (%dx),%es:(%rdi)
    8078:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
    807d:	62                   	(bad)  
    807e:	69 6e 64 20 74 68 65 	imul   $0x65687420,0x64(%rsi),%ebp
    8085:	20 73 6f             	and    %dh,0x6f(%rbx)
    8088:	63 6b 65             	movslq 0x65(%rbx),%ebp
    808b:	74 00                	je     808d <_IO_stdin_used+0x8d>
    808d:	6c                   	insb   (%dx),%es:(%rdi)
    808e:	69 73 74 65 6e 20 66 	imul   $0x66206e65,0x74(%rbx),%esi
    8095:	61                   	(bad)  
    8096:	69 6c 65 64 00 70 69 	imul   $0x64697000,0x64(%rbp,%riz,2),%ebp
    809d:	64 
    809e:	20 3d 20 25 64 0a    	and    %bh,0xa642520(%rip)        # a64a5c4 <_end+0xa63d404>
    80a4:	00 41 6c             	add    %al,0x6c(%rcx)
    80a7:	6c                   	insb   (%dx),%es:(%rdi)
    80a8:	20 63 70             	and    %ah,0x70(%rbx)
    80ab:	75 20                	jne    80cd <_IO_stdin_used+0xcd>
    80ad:	74 68                	je     8117 <_IO_stdin_used+0x117>
    80af:	72 65                	jb     8116 <_IO_stdin_used+0x116>
    80b1:	61                   	(bad)  
    80b2:	64 20 6a 6f          	and    %ch,%fs:0x6f(%rdx)
    80b6:	69 6e 65 64 00 00 00 	imul   $0x64,0x65(%rsi),%ebp
    80bd:	00 00                	add    %al,(%rax)
    80bf:	00 70 72             	add    %dh,0x72(%rax)
    80c2:	69 76 61 74 65 5f 63 	imul   $0x635f6574,0x61(%rsi),%esi
    80c9:	6c                   	insb   (%dx),%es:(%rdi)
    80ca:	65 61                	gs (bad) 
    80cc:	6e                   	outsb  %ds:(%rsi),(%dx)
    80cd:	20 2b                	and    %ch,(%rbx)
    80cf:	20 70 72             	and    %dh,0x72(%rax)
    80d2:	69 76 61 74 65 5f 64 	imul   $0x645f6574,0x61(%rsi),%esi
    80d9:	69 72 74 79 20 2b 20 	imul   $0x202b2079,0x74(%rdx),%esi
    80e0:	70 72                	jo     8154 <_IO_stdin_used+0x154>
    80e2:	69 76 61 74 65 5f 68 	imul   $0x685f6574,0x61(%rsi),%esi
    80e9:	75 67                	jne    8152 <_IO_stdin_used+0x152>
    80eb:	65 74 6c             	gs je  815a <_IO_stdin_used+0x15a>
    80ee:	62                   	(bad)  
    80ef:	3a 00                	cmp    (%rax),%al
    80f1:	00 00                	add    %al,(%rax)
    80f3:	00 00                	add    %al,(%rax)
    80f5:	00 00                	add    %al,(%rax)
    80f7:	00 63 61             	add    %ah,0x61(%rbx)
    80fa:	74 20                	je     811c <_IO_stdin_used+0x11c>
    80fc:	2f                   	(bad)  
    80fd:	70 72                	jo     8171 <_IO_stdin_used+0x171>
    80ff:	6f                   	outsl  %ds:(%rsi),(%dx)
    8100:	63 2f                	movslq (%rdi),%ebp
    8102:	73 65                	jae    8169 <_IO_stdin_used+0x169>
    8104:	6c                   	insb   (%dx),%es:(%rdi)
    8105:	66 2f                	data16 (bad) 
    8107:	73 6d                	jae    8176 <_IO_stdin_used+0x176>
    8109:	61                   	(bad)  
    810a:	70 73                	jo     817f <_IO_stdin_used+0x17f>
    810c:	20 20                	and    %ah,(%rax)
    810e:	7c 20                	jl     8130 <_IO_stdin_used+0x130>
    8110:	67 72 65             	addr32 jb 8178 <_IO_stdin_used+0x178>
    8113:	70 20                	jo     8135 <_IO_stdin_used+0x135>
    8115:	2d 69 20 2d 45       	sub    $0x452d2069,%eax
    811a:	20 27                	and    %ah,(%rdi)
    811c:	5e                   	pop    %rsi
    811d:	50                   	push   %rax
    811e:	72 69                	jb     8189 <_IO_stdin_used+0x189>
    8120:	76 61                	jbe    8183 <_IO_stdin_used+0x183>
    8122:	74 65                	je     8189 <_IO_stdin_used+0x189>
    8124:	5f                   	pop    %rdi
    8125:	2e 2a 3a             	sub    %cs:(%rdx),%bh
    8128:	27                   	(bad)  
    8129:	20 7c 20 61          	and    %bh,0x61(%rax,%riz,1)
    812d:	77 6b                	ja     819a <_IO_stdin_used+0x19a>
    812f:	20 27                	and    %ah,(%rdi)
    8131:	2f                   	(bad)  
    8132:	2f                   	(bad)  
    8133:	7b 73                	jnp    81a8 <_IO_stdin_used+0x1a8>
    8135:	2b 3d 24 32 7d 45    	sub    0x457d3224(%rip),%edi        # 457db35f <_end+0x457ce19f>
    813b:	4e                   	rex.WRX
    813c:	44 7b 70             	rex.R jnp 81af <_IO_stdin_used+0x1af>
    813f:	72 69                	jb     81aa <_IO_stdin_used+0x1aa>
    8141:	6e                   	outsb  %ds:(%rsi),(%dx)
    8142:	74 20                	je     8164 <_IO_stdin_used+0x164>
    8144:	73 7d                	jae    81c3 <_IO_stdin_used+0x1c3>
    8146:	27                   	(bad)  
    8147:	00 70 73             	add    %dh,0x73(%rax)
    814a:	73 3a                	jae    8186 <_IO_stdin_used+0x186>
    814c:	00 00                	add    %al,(%rax)
    814e:	00 00                	add    %al,(%rax)
    8150:	63 61 74             	movslq 0x74(%rcx),%esp
    8153:	20 2f                	and    %ch,(%rdi)
    8155:	70 72                	jo     81c9 <_IO_stdin_used+0x1c9>
    8157:	6f                   	outsl  %ds:(%rsi),(%dx)
    8158:	63 2f                	movslq (%rdi),%ebp
    815a:	73 65                	jae    81c1 <_IO_stdin_used+0x1c1>
    815c:	6c                   	insb   (%dx),%es:(%rdi)
    815d:	66 2f                	data16 (bad) 
    815f:	73 6d                	jae    81ce <_IO_stdin_used+0x1ce>
    8161:	61                   	(bad)  
    8162:	70 73                	jo     81d7 <_IO_stdin_used+0x1d7>
    8164:	20 7c 20 67          	and    %bh,0x67(%rax,%riz,1)
    8168:	72 65                	jb     81cf <_IO_stdin_used+0x1cf>
    816a:	70 20                	jo     818c <_IO_stdin_used+0x18c>
    816c:	2d 69 20 27 5e       	sub    $0x5e272069,%eax
    8171:	70 73                	jo     81e6 <_IO_stdin_used+0x1e6>
    8173:	73 27                	jae    819c <_IO_stdin_used+0x19c>
    8175:	20 7c 20 61          	and    %bh,0x61(%rax,%riz,1)
    8179:	77 6b                	ja     81e6 <_IO_stdin_used+0x1e6>
    817b:	20 27                	and    %ah,(%rdi)
    817d:	2f                   	(bad)  
    817e:	2f                   	(bad)  
    817f:	7b 73                	jnp    81f4 <_IO_stdin_used+0x1f4>
    8181:	2b 3d 24 32 7d 45    	sub    0x457d3224(%rip),%edi        # 457db3ab <_end+0x457ce1eb>
    8187:	4e                   	rex.WRX
    8188:	44 7b 70             	rex.R jnp 81fb <_IO_stdin_used+0x1fb>
    818b:	72 69                	jb     81f6 <_IO_stdin_used+0x1f6>
    818d:	6e                   	outsb  %ds:(%rsi),(%dx)
    818e:	74 20                	je     81b0 <_IO_stdin_used+0x1b0>
    8190:	73 7d                	jae    820f <_IO_stdin_used+0x20f>
    8192:	27                   	(bad)  
    8193:	00 62 61             	add    %ah,0x61(%rdx)
    8196:	64 20 62 75          	and    %ah,%fs:0x75(%rdx)
    819a:	66 6c                	data16 insb (%dx),%es:(%rdi)
    819c:	65 6e                	outsb  %gs:(%rsi),(%dx)
    819e:	20 25 64 0a 00 64    	and    %ah,0x64000a64(%rip)        # 64008c08 <_end+0x63ffba48>
    81a4:	74 20                	je     81c6 <_IO_stdin_used+0x1c6>
    81a6:	3d 20 25 6c 64       	cmp    $0x646c2520,%eax
    81ab:	20 75 73             	and    %dh,0x73(%rbp)
    81ae:	0a 00                	or     (%rax),%al
    81b0:	74 73                	je     8225 <_IO_stdin_used+0x225>
    81b2:	63 32                	movslq (%rdx),%esi
    81b4:	74 73                	je     8229 <_IO_stdin_used+0x229>
    81b6:	20 3d 20 25 6c 66    	and    %bh,0x666c2520(%rip)        # 666ca6dc <_end+0x666bd51c>
    81bc:	2c 20                	sub    $0x20,%al
    81be:	74 73                	je     8233 <_IO_stdin_used+0x233>
    81c0:	63 5f 74             	movslq 0x74(%rdi),%ebx
    81c3:	31 20                	xor    %esp,(%rax)
    81c5:	3d 20 25 6c 75       	cmp    $0x756c2520,%eax
    81ca:	2c 20                	sub    $0x20,%al
    81cc:	74 73                	je     8241 <_IO_stdin_used+0x241>
    81ce:	5f                   	pop    %rdi
    81cf:	74 32                	je     8203 <_IO_stdin_used+0x203>
    81d1:	20 3d 20 25 6c 75    	and    %bh,0x756c2520(%rip)        # 756ca6f7 <_end+0x756bd537>
    81d7:	2c 20                	sub    $0x20,%al
    81d9:	73 75                	jae    8250 <_IO_stdin_used+0x250>
    81db:	62                   	(bad)  
    81dc:	3d 25 6c 75 0a       	cmp    $0xa756c25,%eax
    81e1:	00 66 6e             	add    %ah,0x6e(%rsi)
    81e4:	64 74 5b             	fs je  8242 <_IO_stdin_used+0x242>
    81e7:	25 64 5d 20 3d       	and    $0x3d205d64,%eax
    81ec:	20 25 6c 66 0a 00    	and    %ah,0xa666c(%rip)        # ae85e <_end+0xa169e>
    81f2:	55                   	push   %rbp
    81f3:	6e                   	outsb  %ds:(%rsi),(%dx)
    81f4:	6b 6e 6f 77          	imul   $0x77,0x6f(%rsi),%ebp
    81f8:	6e                   	outsb  %ds:(%rsi),(%dx)
    81f9:	20 6d 73             	and    %ch,0x73(%rbp)
    81fc:	67 20 66 72          	and    %ah,0x72(%esi)
    8200:	6f                   	outsl  %ds:(%rsi),(%dx)
    8201:	6d                   	insl   (%dx),%es:(%rdi)
    8202:	20 74 68 65          	and    %dh,0x65(%rax,%rbp,2)
    8206:	20 67 75             	and    %ah,0x75(%rdi)
    8209:	65 73 74             	gs jae 8280 <_IO_stdin_used+0x280>
    820c:	00 74 69 6d          	add    %dh,0x6d(%rcx,%rbp,2)
    8210:	65 20 3d 20 25 6c 64 	and    %bh,%gs:0x646c2520(%rip)        # 646ca737 <_end+0x646bd577>
    8217:	2c 20                	sub    $0x20,%al
    8219:	74 73                	je     828e <_IO_stdin_used+0x28e>
    821b:	63 5f 74             	movslq 0x74(%rdi),%ebx
    821e:	69 6d 65 20 3d 20 25 	imul   $0x25203d20,0x65(%rbp),%ebp
    8225:	6c                   	insb   (%dx),%es:(%rdi)
    8226:	64 0a 00             	or     %fs:(%rax),%al
    8229:	48 61                	rex.W (bad) 
    822b:	6c                   	insb   (%dx),%es:(%rdi)
    822c:	74 20                	je     824e <_IO_stdin_used+0x24e>
    822e:	70 6f                	jo     829f <_IO_stdin_used+0x29f>
    8230:	72 74                	jb     82a6 <_IO_stdin_used+0x2a6>
    8232:	20 49 4f             	and    %cl,0x4f(%rcx)
    8235:	00 50 4f             	add    %dl,0x4f(%rax)
    8238:	52                   	push   %rdx
    8239:	54                   	push   %rsp
    823a:	5f                   	pop    %rdi
    823b:	50                   	push   %rax
    823c:	52                   	push   %rdx
    823d:	49                   	rex.WB
    823e:	4e 54                	rex.WRX push %rsp
    8240:	5f                   	pop    %rdi
    8241:	52                   	push   %rdx
    8242:	45                   	rex.RB
    8243:	47 53                	rex.RXB push %r11
    8245:	20 49 4f             	and    %cl,0x4f(%rcx)
    8248:	3a 00                	cmp    (%rax),%al
    824a:	75 6e                	jne    82ba <_IO_stdin_used+0x2ba>
    824c:	68 61 6e 64 6c       	pushq  $0x6c646e61
    8251:	65 64 20 4b 56       	gs and %cl,%fs:0x56(%rbx)
    8256:	4d 5f                	rex.WRB pop %r15
    8258:	45 58                	rex.RB pop %r8
    825a:	49 54                	rex.WB push %r12
    825c:	5f                   	pop    %rdi
    825d:	49                   	rex.WB
    825e:	4f 2c 20             	rex.WRXB sub $0x20,%al
    8261:	25 58 0a 00 00       	and    $0xa58,%eax
    8266:	00 00                	add    %al,(%rax)
    8268:	b0 ad                	mov    $0xad,%al
    826a:	ff                   	(bad)  
    826b:	ff 19                	lcall  *(%rcx)
    826d:	ae                   	scas   %es:(%rdi),%al
    826e:	ff                   	(bad)  
    826f:	ff 2a                	ljmp   *(%rdx)
    8271:	ae                   	scas   %es:(%rdi),%al
    8272:	ff                   	(bad)  
    8273:	ff                   	(bad)  
    8274:	d9 ae ff ff f6 ae    	fldcw  -0x51090001(%rsi)
    827a:	ff                   	(bad)  
    827b:	ff 29                	ljmp   *(%rcx)
    827d:	b0 ff                	mov    $0xff,%al
    827f:	ff                   	(bad)  
    8280:	b8 af ff ff 63       	mov    $0x63ffffaf,%eax
    8285:	61                   	(bad)  
    8286:	6e                   	outsb  %ds:(%rsi),(%dx)
    8287:	74 20                	je     82a9 <_IO_stdin_used+0x2a9>
    8289:	6d                   	insl   (%dx),%es:(%rdi)
    828a:	6d                   	insl   (%dx),%es:(%rdi)
    828b:	61                   	(bad)  
    828c:	70 00                	jo     828e <_IO_stdin_used+0x28e>
    828e:	2f                   	(bad)  
    828f:	64 65 76 2f          	fs gs jbe 82c2 <_IO_stdin_used+0x2c2>
    8293:	6b 76 6d 00          	imul   $0x0,0x6d(%rsi),%esi
    8297:	55                   	push   %rbp
    8298:	6e                   	outsb  %ds:(%rsi),(%dx)
    8299:	61                   	(bad)  
    829a:	62                   	(bad)  
    829b:	6c                   	insb   (%dx),%es:(%rdi)
    829c:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
    82a1:	6f                   	outsl  %ds:(%rsi),(%dx)
    82a2:	70 65                	jo     8309 <_IO_stdin_used+0x309>
    82a4:	6e                   	outsb  %ds:(%rsi),(%dx)
    82a5:	20 6b 76             	and    %ch,0x76(%rbx)
    82a8:	6d                   	insl   (%dx),%es:(%rdi)
    82a9:	00 41 50             	add    %al,0x50(%rcx)
    82ac:	49 20 65 72          	rex.WB and %spl,0x72(%r13)
    82b0:	72 6f                	jb     8321 <_IO_stdin_used+0x321>
    82b2:	72 00                	jb     82b4 <_IO_stdin_used+0x2b4>
    82b4:	63 61 6e             	movslq 0x6e(%rcx),%esp
    82b7:	74 20                	je     82d9 <_IO_stdin_used+0x2d9>
    82b9:	63 72 65             	movslq 0x65(%rdx),%esi
    82bc:	61                   	(bad)  
    82bd:	74 65                	je     8324 <_IO_stdin_used+0x324>
    82bf:	20 56 4d             	and    %dl,0x4d(%rsi)
    82c2:	00 6b 76             	add    %ch,0x76(%rbx)
    82c5:	6d                   	insl   (%dx),%es:(%rdi)
    82c6:	20 6d 6d             	and    %ch,0x6d(%rbp)
    82c9:	61                   	(bad)  
    82ca:	70 20                	jo     82ec <_IO_stdin_used+0x2ec>
    82cc:	73 69                	jae    8337 <_IO_stdin_used+0x337>
    82ce:	7a 65                	jp     8335 <_IO_stdin_used+0x335>
    82d0:	20 65 72             	and    %ah,0x72(%rbp)
    82d3:	72 6f                	jb     8344 <_IO_stdin_used+0x344>
    82d5:	72 00                	jb     82d7 <_IO_stdin_used+0x2d7>
    82d7:	72 65                	jb     833e <_IO_stdin_used+0x33e>
    82d9:	61                   	(bad)  
    82da:	6c                   	insb   (%dx),%es:(%rdi)
    82db:	6c                   	insb   (%dx),%es:(%rdi)
    82dc:	79 21                	jns    82ff <_IO_stdin_used+0x2ff>
    82de:	20 6d 6d             	and    %ch,0x6d(%rbp)
    82e1:	61                   	(bad)  
    82e2:	70 5f                	jo     8343 <_IO_stdin_used+0x343>
    82e4:	73 69                	jae    834f <_IO_stdin_used+0x34f>
    82e6:	7a 65                	jp     834d <_IO_stdin_used+0x34d>
    82e8:	20 3c 20             	and    %bh,(%rax,%riz,1)
    82eb:	72 75                	jb     8362 <_IO_stdin_used+0x362>
    82ed:	6e                   	outsb  %ds:(%rsi),(%dx)
    82ee:	2e 20 57 68          	and    %dl,%cs:0x68(%rdi)
    82f2:	79 3f                	jns    8333 <_IO_stdin_used+0x333>
    82f4:	00 63 61             	add    %ah,0x61(%rbx)
    82f7:	6e                   	outsb  %ds:(%rsi),(%dx)
    82f8:	74 20                	je     831a <_IO_stdin_used+0x31a>
    82fa:	67 65 74 20          	addr32 gs je 831e <_IO_stdin_used+0x31e>
    82fe:	63 70 75             	movslq 0x75(%rax),%esi
    8301:	69 64 00 55 6e 61 62 	imul   $0x6c62616e,0x55(%rax,%rax,1),%esp
    8308:	6c 
    8309:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
    830e:	63 72 65             	movslq 0x65(%rdx),%esi
    8311:	61                   	(bad)  
    8312:	74 65                	je     8379 <_IO_stdin_used+0x379>
    8314:	20 49 52             	and    %cl,0x52(%rcx)
    8317:	51                   	push   %rcx
    8318:	43                   	rex.XB
    8319:	48                   	rex.W
    831a:	49 50                	rex.WB push %r8
    831c:	00 62 72             	add    %ah,0x72(%rdx)
    831f:	30 00                	xor    %al,(%rax)
    8321:	00 00                	add    %al,(%rax)
    8323:	00 00                	add    %al,(%rax)
    8325:	00 00                	add    %al,(%rax)
    8327:	00 63 61             	add    %ah,0x61(%rbx)
    832a:	6e                   	outsb  %ds:(%rsi),(%dx)
    832b:	6e                   	outsb  %ds:(%rsi),(%dx)
    832c:	6f                   	outsl  %ds:(%rsi),(%dx)
    832d:	74 20                	je     834f <_IO_stdin_used+0x34f>
    832f:	63 72 65             	movslq 0x65(%rdx),%esi
    8332:	61                   	(bad)  
    8333:	74 65                	je     839a <_IO_stdin_used+0x39a>
    8335:	20 73 6f             	and    %dh,0x6f(%rbx)
    8338:	63 6b 20             	movslq 0x20(%rbx),%ebp
    833b:	66 6f                	outsw  %ds:(%rsi),(%dx)
    833d:	72 20                	jb     835f <_IO_stdin_used+0x35f>
    833f:	74 68                	je     83a9 <_IO_stdin_used+0x3a9>
    8341:	65 20 66 6c          	and    %ah,%gs:0x6c(%rsi)
    8345:	6f                   	outsl  %ds:(%rsi),(%dx)
    8346:	77 00                	ja     8348 <_IO_stdin_used+0x348>
    8348:	73 6f                	jae    83b9 <_IO_stdin_used+0x3b9>
    834a:	63 6b 20             	movslq 0x20(%rbx),%ebp
    834d:	6c                   	insb   (%dx),%es:(%rdi)
    834e:	69 73 74 65 6e 69 6e 	imul   $0x6e696e65,0x74(%rbx),%esi
    8355:	67 20 6f 6e          	and    %ch,0x6e(%edi)
    8359:	20 62 72             	and    %ah,0x72(%rdx)
    835c:	30 00                	xor    %al,(%rax)
    835e:	00 00                	add    %al,(%rax)
    8360:	69 6f 63 74 6c 28 4b 	imul   $0x4b286c74,0x63(%rdi),%ebp
    8367:	56                   	push   %rsi
    8368:	4d 5f                	rex.WRB pop %r15
    836a:	53                   	push   %rbx
    836b:	45 54                	rex.RB push %r12
    836d:	5f                   	pop    %rdi
    836e:	55                   	push   %rbp
    836f:	53                   	push   %rbx
    8370:	45 52                	rex.RB push %r10
    8372:	5f                   	pop    %rdi
    8373:	4d                   	rex.WRB
    8374:	45                   	rex.RB
    8375:	4d                   	rex.WRB
    8376:	4f 52                	rex.WRXB push %r10
    8378:	59                   	pop    %rcx
    8379:	5f                   	pop    %rdi
    837a:	52                   	push   %rdx
    837b:	45                   	rex.RB
    837c:	47                   	rex.RXB
    837d:	49                   	rex.WB
    837e:	4f                   	rex.WRXB
    837f:	4e 29 00             	rex.WRX sub %r8,(%rax)
    8382:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    8384:	75 6c                	jne    83f2 <_IO_stdin_used+0x3f2>
    8386:	64 20 6e 6f          	and    %ch,%fs:0x6f(%rsi)
    838a:	74 20                	je     83ac <_IO_stdin_used+0x3ac>
    838c:	67 65 74 20          	addr32 gs je 83b0 <_IO_stdin_used+0x3b0>
    8390:	74 68                	je     83fa <_IO_stdin_used+0x3fa>
    8392:	65 20 6c 61 70       	and    %ch,%gs:0x70(%rcx,%riz,2)
    8397:	69 63 20 73 74 61 74 	imul   $0x74617473,0x20(%rbx),%esp
    839e:	65 00 43 61          	add    %al,%gs:0x61(%rbx)
    83a2:	6e                   	outsb  %ds:(%rsi),(%dx)
    83a3:	6e                   	outsb  %ds:(%rsi),(%dx)
    83a4:	6f                   	outsl  %ds:(%rsi),(%dx)
    83a5:	74 20                	je     83c7 <_IO_stdin_used+0x3c7>
    83a7:	66 65 74 63          	data16 gs je 840e <_IO_stdin_used+0x40e>
    83ab:	68 20 4d 50 5f       	pushq  $0x5f504d20
    83b0:	53                   	push   %rbx
    83b1:	54                   	push   %rsp
    83b2:	41 54                	push   %r12
    83b4:	45 00 63 61          	add    %r12b,0x61(%r11)
    83b8:	6e                   	outsb  %ds:(%rsi),(%dx)
    83b9:	6e                   	outsb  %ds:(%rsi),(%dx)
    83ba:	6f                   	outsl  %ds:(%rsi),(%dx)
    83bb:	74 20                	je     83dd <_IO_stdin_used+0x3dd>
    83bd:	73 65                	jae    8424 <_IO_stdin_used+0x424>
    83bf:	74 20                	je     83e1 <_IO_stdin_used+0x3e1>
    83c1:	63 70 75             	movslq 0x75(%rax),%esi
    83c4:	69 64 20 74 68 69 6e 	imul   $0x676e6968,0x74(%rax,%riz,1),%esp
    83cb:	67 
    83cc:	73 00                	jae    83ce <_IO_stdin_used+0x3ce>
    83ce:	63 61 6e             	movslq 0x6e(%rcx),%esp
    83d1:	74 20                	je     83f3 <_IO_stdin_used+0x3f3>
    83d3:	73 65                	jae    843a <_IO_stdin_used+0x43a>
    83d5:	74 20                	je     83f7 <_IO_stdin_used+0x3f7>
    83d7:	67 65 74 20          	addr32 gs je 83fb <_IO_stdin_used+0x3fb>
    83db:	73 72                	jae    844f <_IO_stdin_used+0x44f>
    83dd:	65 67 73 20          	gs addr32 jae 8401 <_IO_stdin_used+0x401>
    83e1:	74 69                	je     844c <_IO_stdin_used+0x44c>
    83e3:	64 20 3d 20 25 6c 64 	and    %bh,%fs:0x646c2520(%rip)        # 646ca90a <_end+0x646bd74a>
    83ea:	0a 00                	or     (%rax),%al
    83ec:	63 61 6e             	movslq 0x6e(%rcx),%esp
    83ef:	74 20                	je     8411 <_IO_stdin_used+0x411>
    83f1:	73 65                	jae    8458 <_IO_stdin_used+0x458>
    83f3:	74 20                	je     8415 <_IO_stdin_used+0x415>
    83f5:	73 65                	jae    845c <_IO_stdin_used+0x45c>
    83f7:	67 20 73 72          	and    %dh,0x72(%ebx)
    83fb:	65 67 73 20          	gs addr32 jae 841f <_IO_stdin_used+0x41f>
    83ff:	74 69                	je     846a <_IO_stdin_used+0x46a>
    8401:	64 20 3d 20 25 6c 64 	and    %bh,%fs:0x646c2520(%rip)        # 646ca928 <_end+0x646bd768>
    8408:	0a 00                	or     (%rax),%al
    840a:	00 00                	add    %al,(%rax)
    840c:	00 00                	add    %al,(%rax)
    840e:	00 00                	add    %al,(%rax)
    8410:	43 61                	rex.XB (bad) 
    8412:	6e                   	outsb  %ds:(%rsi),(%dx)
    8413:	6e                   	outsb  %ds:(%rsi),(%dx)
    8414:	6f                   	outsl  %ds:(%rsi),(%dx)
    8415:	74 20                	je     8437 <_IO_stdin_used+0x437>
    8417:	73 65                	jae    847e <_IO_stdin_used+0x47e>
    8419:	74 20                	je     843b <_IO_stdin_used+0x43b>
    841b:	72 65                	jb     8482 <_IO_stdin_used+0x482>
    841d:	67 73 20             	addr32 jae 8440 <_IO_stdin_used+0x440>
    8420:	69 6e 20 76 63 70 75 	imul   $0x75706376,0x20(%rsi),%ebp
    8427:	20 74 68 72          	and    %dh,0x72(%rax,%rbp,2)
    842b:	65 61                	gs (bad) 
    842d:	64 00 4b 56          	add    %cl,%fs:0x56(%rbx)
    8431:	4d 5f                	rex.WRB pop %r15
    8433:	52                   	push   %rdx
    8434:	55                   	push   %rbp
    8435:	4e 20 45 52          	rex.WRX and %r8b,0x52(%rbp)
    8439:	52                   	push   %rdx
    843a:	4f 52                	rex.WRXB push %r10
    843c:	00 4b 56             	add    %cl,0x56(%rbx)
    843f:	4d 5f                	rex.WRB pop %r15
    8441:	45 58                	rex.RB pop %r8
    8443:	49 54                	rex.WB push %r12
    8445:	5f                   	pop    %rdi
    8446:	53                   	push   %rbx
    8447:	48 55                	rex.W push %rbp
    8449:	54                   	push   %rsp
    844a:	44                   	rex.R
    844b:	4f 57                	rex.WRXB push %r15
    844d:	4e 00 4b 56          	rex.WRX add %r9b,0x56(%rbx)
    8451:	4d 5f                	rex.WRB pop %r15
    8453:	45 58                	rex.RB pop %r8
    8455:	49 54                	rex.WB push %r12
    8457:	5f                   	pop    %rdi
    8458:	49                   	rex.WB
    8459:	4e 54                	rex.WRX push %rsp
    845b:	45 52                	rex.RB push %r10
    845d:	4e                   	rex.WRX
    845e:	41                   	rex.B
    845f:	4c 5f                	rex.WR pop %rdi
    8461:	45 52                	rex.RB push %r10
    8463:	52                   	push   %rdx
    8464:	4f 52                	rex.WRXB push %r10
    8466:	00 4b 56             	add    %cl,0x56(%rbx)
    8469:	4d 5f                	rex.WRB pop %r15
    846b:	45 58                	rex.RB pop %r8
    846d:	49 54                	rex.WB push %r12
    846f:	5f                   	pop    %rdi
    8470:	46                   	rex.RX
    8471:	41                   	rex.B
    8472:	49                   	rex.WB
    8473:	4c 5f                	rex.WR pop %rdi
    8475:	45                   	rex.RB
    8476:	4e 54                	rex.WRX push %rsp
    8478:	52                   	push   %rdx
    8479:	59                   	pop    %rcx
    847a:	00 65 78             	add    %ah,0x78(%rbp)
    847d:	69 74 5f 72 65 61 73 	imul   $0x6f736165,0x72(%rdi,%rbx,2),%esi
    8484:	6f 
    8485:	6e                   	outsb  %ds:(%rsi),(%dx)
    8486:	20 3d 20 25 64 0a    	and    %bh,0xa642520(%rip)        # a64a9ac <_end+0xa63d7ec>
    848c:	2c 20                	sub    $0x20,%al
    848e:	65 78 69             	gs js  84fa <_IO_stdin_used+0x4fa>
    8491:	74 69                	je     84fc <_IO_stdin_used+0x4fc>
    8493:	6e                   	outsb  %ds:(%rsi),(%dx)
    8494:	67 0a 00             	or     (%eax),%al
    8497:	00 2b                	add    %ch,(%rbx)
    8499:	b9 ff ff 2b b9       	mov    $0xb92bffff,%ecx
    849e:	ff                   	(bad)  
    849f:	ff 49 b8             	decl   -0x48(%rcx)
    84a2:	ff                   	(bad)  
    84a3:	ff 2b                	ljmp   *(%rbx)
    84a5:	b9 ff ff 2b b9       	mov    $0xb92bffff,%ecx
    84aa:	ff                   	(bad)  
    84ab:	ff 92 b9 ff ff 2b    	callq  *0x2bffffb9(%rdx)
    84b1:	b9 ff ff 2b b9       	mov    $0xb92bffff,%ecx
    84b6:	ff                   	(bad)  
    84b7:	ff 65 b8             	jmpq   *-0x48(%rbp)
    84ba:	ff                   	(bad)  
    84bb:	ff                   	(bad)  
    84bc:	ee                   	out    %al,(%dx)
    84bd:	b8 ff ff 2b b9       	mov    $0xb92bffff,%eax
    84c2:	ff                   	(bad)  
    84c3:	ff 2b                	ljmp   *(%rbx)
    84c5:	b9 ff ff 2b b9       	mov    $0xb92bffff,%ecx
    84ca:	ff                   	(bad)  
    84cb:	ff 2b                	ljmp   *(%rbx)
    84cd:	b9 ff ff 2b b9       	mov    $0xb92bffff,%ecx
    84d2:	ff                   	(bad)  
    84d3:	ff 2b                	ljmp   *(%rbx)
    84d5:	b9 ff ff 2b b9       	mov    $0xb92bffff,%ecx
    84da:	ff                   	(bad)  
    84db:	ff b1 b8 ff ff 43    	pushq  0x43ffffb8(%rcx)
    84e1:	61                   	(bad)  
    84e2:	6e                   	outsb  %ds:(%rsi),(%dx)
    84e3:	6e                   	outsb  %ds:(%rsi),(%dx)
    84e4:	6f                   	outsl  %ds:(%rsi),(%dx)
    84e5:	74 20                	je     8507 <_IO_stdin_used+0x507>
    84e7:	61                   	(bad)  
    84e8:	6c                   	insb   (%dx),%es:(%rdi)
    84e9:	6c                   	insb   (%dx),%es:(%rdi)
    84ea:	6f                   	outsl  %ds:(%rsi),(%dx)
    84eb:	63 61 74             	movslq 0x74(%rcx),%esp
    84ee:	65 20 76 6d          	and    %dh,%gs:0x6d(%rsi)
    84f2:	2d 3e 76 63 70       	sub    $0x7063763e,%eax
    84f7:	75 00                	jne    84f9 <_IO_stdin_used+0x4f9>
    84f9:	43 61                	rex.XB (bad) 
    84fb:	6e                   	outsb  %ds:(%rsi),(%dx)
    84fc:	6e                   	outsb  %ds:(%rsi),(%dx)
    84fd:	6f                   	outsl  %ds:(%rsi),(%dx)
    84fe:	74 20                	je     8520 <_IO_stdin_used+0x520>
    8500:	63 72 65             	movslq 0x65(%rdx),%esi
    8503:	61                   	(bad)  
    8504:	74 65                	je     856b <limit_file+0x1b>
    8506:	20 76 63             	and    %dh,0x63(%rsi)
    8509:	70 75                	jo     8580 <executable+0x10>
    850b:	00 72 75             	add    %dh,0x75(%rdx)
    850e:	6e                   	outsb  %ds:(%rsi),(%dx)
    850f:	20 65 72             	and    %ah,0x72(%rbp)
    8512:	72 6f                	jb     8583 <executable+0x13>
    8514:	72 00                	jb     8516 <_IO_stdin_used+0x516>
    8516:	00 00                	add    %al,(%rax)
    8518:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    851a:	75 6c                	jne    8588 <executable+0x18>
    851c:	64 6e                	outsb  %fs:(%rsi),(%dx)
    851e:	74 20                	je     8540 <_IO_stdin_used+0x540>
    8520:	63 72 65             	movslq 0x65(%rdx),%esi
    8523:	61                   	(bad)  
    8524:	74 65                	je     858b <executable+0x1b>
    8526:	20 74 68 72          	and    %dh,0x72(%rax,%rbp,2)
    852a:	65 61                	gs (bad) 
    852c:	64 20 66 6f          	and    %ah,%fs:0x6f(%rsi)
    8530:	72 20                	jb     8552 <limit_file+0x2>
    8532:	75 73                	jne    85a7 <executable+0x37>
    8534:	65 72 20             	gs jb  8557 <limit_file+0x7>
    8537:	63 6f 64             	movslq 0x64(%rdi),%ebp
    853a:	65 20 63 72          	and    %ah,%gs:0x72(%rbx)
    853e:	65 61                	gs (bad) 
    8540:	74 69                	je     85ab <executable+0x3b>
    8542:	6f                   	outsl  %ds:(%rsi),(%dx)
    8543:	6e                   	outsb  %ds:(%rsi),(%dx)
	...

0000000000008550 <limit_file>:
    8550:	2e 2e 2f             	cs cs (bad) 
    8553:	65 6c                	gs insb (%dx),%es:(%rdi)
    8555:	66 2d 72 65          	sub    $0x6572,%ax
    8559:	61                   	(bad)  
    855a:	64 65 72 2f          	fs gs jb 858d <executable+0x1d>
    855e:	6c                   	insb   (%dx),%es:(%rdi)
    855f:	69 6d 69 74 73 2e 74 	imul   $0x742e7374,0x69(%rbp),%ebp
    8566:	78 74                	js     85dc <executable+0x6c>
	...

0000000000008570 <executable>:
    8570:	2e 2e 2f             	cs cs (bad) 
    8573:	62                   	(bad)  
    8574:	6f                   	outsl  %ds:(%rsi),(%dx)
    8575:	6f                   	outsl  %ds:(%rsi),(%dx)
    8576:	74 2f                	je     85a7 <executable+0x37>
    8578:	62                   	(bad)  
    8579:	69 6e 2f 6d 61 69 6e 	imul   $0x6e69616d,0x2f(%rsi),%ebp
    8580:	00 76 61             	add    %dh,0x61(%rsi)
    8583:	64 64 72 20          	fs fs jb 85a7 <executable+0x37>
    8587:	3d 20 25 30 38       	cmp    $0x38302520,%eax
    858c:	6c                   	insb   (%dx),%es:(%rdi)
    858d:	58                   	pop    %rax
    858e:	20 73 61             	and    %dh,0x61(%rbx)
    8591:	64 64 72 20          	fs fs jb 85b5 <executable+0x45>
    8595:	3d 20 25 30 38       	cmp    $0x38302520,%eax
    859a:	6c                   	insb   (%dx),%es:(%rdi)
    859b:	58                   	pop    %rax
    859c:	0a 00                	or     (%rax),%al
    859e:	2e 73 74             	jae,pn 8615 <executable+0xa5>
    85a1:	61                   	(bad)  
    85a2:	63 6b 00             	movslq 0x0(%rbx),%ebp
    85a5:	00 00                	add    %al,(%rax)
    85a7:	00 6e 6f             	add    %ch,0x6f(%rsi)
    85aa:	20 73 74             	and    %dh,0x74(%rbx)
    85ad:	61                   	(bad)  
    85ae:	63 6b 20             	movslq 0x20(%rbx),%ebp
    85b1:	73 65                	jae    8618 <executable+0xa8>
    85b3:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
    85b7:	6e                   	outsb  %ds:(%rsi),(%dx)
    85b8:	20 66 6f             	and    %ah,0x6f(%rsi)
    85bb:	75 6e                	jne    862b <executable+0xbb>
    85bd:	64 20 66 6f          	and    %ah,%fs:0x6f(%rsi)
    85c1:	72 20                	jb     85e3 <executable+0x73>
    85c3:	62                   	(bad)  
    85c4:	6f                   	outsl  %ds:(%rsi),(%dx)
    85c5:	6f                   	outsl  %ds:(%rsi),(%dx)
    85c6:	74 00                	je     85c8 <executable+0x58>
    85c8:	2e 70 61             	jo,pn  862c <executable+0xbc>
    85cb:	67 69 6e 67 00 55 6e 	imul   $0x616e5500,0x67(%esi),%ebp
    85d2:	61 
    85d3:	62                   	(bad)  
    85d4:	6c                   	insb   (%dx),%es:(%rdi)
    85d5:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
    85da:	6f                   	outsl  %ds:(%rsi),(%dx)
    85db:	70 65                	jo     8642 <executable+0xd2>
    85dd:	6e                   	outsb  %ds:(%rsi),(%dx)
    85de:	20 6b 65             	and    %ch,0x65(%rbx)
    85e1:	72 6e                	jb     8651 <executable+0xe1>
    85e3:	65 6c                	gs insb (%dx),%es:(%rdi)
    85e5:	20 63 6f             	and    %ah,0x6f(%rbx)
    85e8:	64 65 00 6d 6d       	fs add %ch,%gs:0x6d(%rbp)
    85ed:	61                   	(bad)  
    85ee:	70 20                	jo     8610 <executable+0xa0>
    85f0:	6f                   	outsl  %ds:(%rsi),(%dx)
    85f1:	66 20 6b 65          	data16 and %ch,0x65(%rbx)
    85f5:	72 6e                	jb     8665 <executable+0xf5>
    85f7:	65 6c                	gs insb (%dx),%es:(%rdi)
    85f9:	20 63 6f             	and    %ah,0x6f(%rbx)
    85fc:	64 65 20 66 61       	fs and %ah,%gs:0x61(%rsi)
    8601:	69 6c 65 64 00 72 00 	imul   $0x75007200,0x64(%rbp,%riz,2),%ebp
    8608:	75 
    8609:	6e                   	outsb  %ds:(%rsi),(%dx)
    860a:	61                   	(bad)  
    860b:	62                   	(bad)  
    860c:	6c                   	insb   (%dx),%es:(%rdi)
    860d:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
    8612:	6f                   	outsl  %ds:(%rsi),(%dx)
    8613:	70 65                	jo     867a <executable+0x10a>
    8615:	6e                   	outsb  %ds:(%rsi),(%dx)
    8616:	20 6b 65             	and    %ch,0x65(%rbx)
    8619:	72 6e                	jb     8689 <executable+0x119>
    861b:	65 6c                	gs insb (%dx),%es:(%rdi)
    861d:	20 63 6f             	and    %ah,0x6f(%rbx)
    8620:	64 65 20 70 72       	fs and %dh,%gs:0x72(%rax)
    8625:	6f                   	outsl  %ds:(%rsi),(%dx)
    8626:	70 65                	jo     868d <executable+0x11d>
    8628:	72 74                	jb     869e <executable+0x12e>
    862a:	69 65 73 00 00 00 43 	imul   $0x43000000,0x73(%rbp),%esp
    8631:	72 6f                	jb     86a2 <executable+0x132>
    8633:	73 73                	jae    86a8 <executable+0x138>
    8635:	65 64 20 6b 65       	gs and %ch,%fs:0x65(%rbx)
    863a:	72 6e                	jb     86aa <executable+0x13a>
    863c:	65 6c                	gs insb (%dx),%es:(%rdi)
    863e:	20 32                	and    %dh,(%rdx)
    8640:	4d                   	rex.WRB
    8641:	42 20 66 6f          	rex.X and %spl,0x6f(%rsi)
    8645:	72 20                	jb     8667 <executable+0xf7>
    8647:	70 61                	jo     86aa <executable+0x13a>
    8649:	67 65 20 74 61 62    	and    %dh,%gs:0x62(%ecx,%eiz,2)
    864f:	6c                   	insb   (%dx),%es:(%rdi)
    8650:	65 73 00             	gs jae 8653 <executable+0xe3>
    8653:	00 00                	add    %al,(%rax)
    8655:	00 00                	add    %al,(%rax)
    8657:	00 46 75             	add    %al,0x75(%rsi)
    865a:	6e                   	outsb  %ds:(%rsi),(%dx)
    865b:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
    865f:	6e                   	outsb  %ds:(%rsi),(%dx)
    8660:	73 20                	jae    8682 <executable+0x112>
    8662:	6e                   	outsb  %ds:(%rsi),(%dx)
    8663:	65 65 64 20 6d 6f    	gs gs and %ch,%fs:0x6f(%rbp)
    8669:	72 65                	jb     86d0 <executable+0x160>
    866b:	20 6d 65             	and    %ch,0x65(%rbp)
    866e:	6d                   	insl   (%dx),%es:(%rdi)
    866f:	6f                   	outsl  %ds:(%rsi),(%dx)
    8670:	72 79                	jb     86eb <executable+0x17b>
    8672:	20 74 68 61          	and    %dh,0x61(%rax,%rbp,2)
    8676:	6e                   	outsb  %ds:(%rsi),(%dx)
    8677:	20 61 6c             	and    %ah,0x6c(%rcx)
    867a:	6c                   	insb   (%dx),%es:(%rdi)
    867b:	6f                   	outsl  %ds:(%rsi),(%dx)
    867c:	63 61 74             	movslq 0x74(%rcx),%esp
    867f:	65 64 00 00          	gs add %al,%fs:(%rax)
	...
    869f:	00 74 6d 70          	add    %dh,0x70(%rbp,%rbp,2)
    86a3:	2f                   	(bad)  
    86a4:	6d                   	insl   (%dx),%es:(%rdi)
    86a5:	61                   	(bad)  
    86a6:	69 6e 00 00 00 00 00 	imul   $0x0,0x0(%rsi),%ebp
	...
    871d:	00 00                	add    %al,(%rax)
    871f:	00 74 6d 70          	add    %dh,0x70(%rbp,%rbp,2)
    8723:	2f                   	(bad)  
    8724:	6d                   	insl   (%dx),%es:(%rdi)
    8725:	61                   	(bad)  
    8726:	69 6e 00 00 00 00 00 	imul   $0x0,0x0(%rsi),%ebp
	...
    879d:	00 00                	add    %al,(%rax)
    879f:	00 74 6d 70          	add    %dh,0x70(%rbp,%rbp,2)
    87a3:	2f                   	(bad)  
    87a4:	6d                   	insl   (%dx),%es:(%rdi)
    87a5:	61                   	(bad)  
    87a6:	69 6e 00 00 00 00 00 	imul   $0x0,0x0(%rsi),%ebp
	...
    881d:	00 00                	add    %al,(%rax)
    881f:	00 74 6d 70          	add    %dh,0x70(%rbp,%rbp,2)
    8823:	2f                   	(bad)  
    8824:	6d                   	insl   (%dx),%es:(%rdi)
    8825:	61                   	(bad)  
    8826:	69 6e 00 00 00 00 00 	imul   $0x0,0x0(%rsi),%ebp
	...
    889d:	00 00                	add    %al,(%rax)
    889f:	00 74 6d 70          	add    %dh,0x70(%rbp,%rbp,2)
    88a3:	2f                   	(bad)  
    88a4:	6d                   	insl   (%dx),%es:(%rdi)
    88a5:	61                   	(bad)  
    88a6:	69 6e 00 00 00 00 00 	imul   $0x0,0x0(%rsi),%ebp
	...
    891d:	00 00                	add    %al,(%rax)
    891f:	00 73 68             	add    %dh,0x68(%rbx)
    8922:	61                   	(bad)  
    8923:	72 65                	jb     898a <executable+0x41a>
    8925:	64 20 6d 61          	and    %ch,%fs:0x61(%rbp)
    8929:	70 70                	jo     899b <executable+0x42b>
    892b:	69 6e 67 20 66 61 69 	imul   $0x69616620,0x67(%rsi),%ebp
    8932:	6c                   	insb   (%dx),%es:(%rdi)
    8933:	65 64 00 75 6e       	gs add %dh,%fs:0x6e(%rbp)
    8938:	61                   	(bad)  
    8939:	62                   	(bad)  
    893a:	6c                   	insb   (%dx),%es:(%rdi)
    893b:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
    8940:	6f                   	outsl  %ds:(%rsi),(%dx)
    8941:	70 65                	jo     89a8 <executable+0x438>
    8943:	6e                   	outsb  %ds:(%rsi),(%dx)
    8944:	20 25 73 0a 00 63    	and    %ah,0x63000a73(%rip)        # 630093bd <_end+0x62ffc1fd>
    894a:	61                   	(bad)  
    894b:	6e                   	outsb  %ds:(%rsi),(%dx)
    894c:	6e                   	outsb  %ds:(%rsi),(%dx)
    894d:	6f                   	outsl  %ds:(%rsi),(%dx)
    894e:	74 20                	je     8970 <executable+0x400>
    8950:	6f                   	outsl  %ds:(%rsi),(%dx)
    8951:	70 65                	jo     89b8 <executable+0x448>
    8953:	6e                   	outsb  %ds:(%rsi),(%dx)
    8954:	20 25 73 0a 00 6d    	and    %ah,0x6d000a73(%rip)        # 6d0093cd <_end+0x6cffc20d>
    895a:	6d                   	insl   (%dx),%es:(%rdi)
    895b:	61                   	(bad)  
    895c:	70 20                	jo     897e <executable+0x40e>
    895e:	6f                   	outsl  %ds:(%rsi),(%dx)
    895f:	66 20 25 73 20 66 61 	data16 and %ah,0x61662073(%rip)        # 6166a9d9 <_end+0x6165d819>
    8966:	69 6c 65 64 0a 00 00 	imul   $0xa,0x64(%rbp,%riz,2),%ebp
    896d:	00 
	...
    897e:	00 00                	add    %al,(%rax)
    8980:	2f                   	(bad)  
    8981:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
    8986:	70 72                	jo     89fa <executable+0x48a>
    8988:	61                   	(bad)  
    8989:	6b 68 61 72          	imul   $0x72,0x61(%rax),%ebp
    898d:	2f                   	(bad)  
    898e:	64 61                	fs (bad) 
    8990:	74 61                	je     89f3 <executable+0x483>
    8992:	2f                   	(bad)  
    8993:	63 6f 64             	movslq 0x64(%rdi),%ebp
    8996:	65 2f                	gs (bad) 
    8998:	6e                   	outsb  %ds:(%rsi),(%dx)
    8999:	66 76 73             	data16 jbe 8a0f <executable+0x49f>
    899c:	2f                   	(bad)  
    899d:	66 69 72 65 77 61    	imul   $0x6177,0x65(%rdx),%si
    89a3:	6c                   	insb   (%dx),%es:(%rdi)
    89a4:	6c                   	insb   (%dx),%es:(%rdi)
    89a5:	2f                   	(bad)  
    89a6:	6d                   	insl   (%dx),%es:(%rdi)
    89a7:	61                   	(bad)  
    89a8:	69 6e 5f 6d 61 70 70 	imul   $0x7070616d,0x5f(%rsi),%ebp
    89af:	65 64 00 00          	gs add %al,%fs:(%rax)
	...
    8d7f:	00 2f                	add    %ch,(%rdi)
    8d81:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
    8d86:	70 72                	jo     8dfa <executable+0x88a>
    8d88:	61                   	(bad)  
    8d89:	6b 68 61 72          	imul   $0x72,0x61(%rax),%ebp
    8d8d:	2f                   	(bad)  
    8d8e:	64 61                	fs (bad) 
    8d90:	74 61                	je     8df3 <executable+0x883>
    8d92:	2f                   	(bad)  
    8d93:	63 6f 64             	movslq 0x64(%rdi),%ebp
    8d96:	65 2f                	gs (bad) 
    8d98:	6e                   	outsb  %ds:(%rsi),(%dx)
    8d99:	66 76 73             	data16 jbe 8e0f <executable+0x89f>
    8d9c:	2f                   	(bad)  
    8d9d:	69 64 73 2f 6d 61 69 	imul   $0x6e69616d,0x2f(%rbx,%rsi,2),%esp
    8da4:	6e 
    8da5:	5f                   	pop    %rdi
    8da6:	6d                   	insl   (%dx),%es:(%rdi)
    8da7:	61                   	(bad)  
    8da8:	70 70                	jo     8e1a <executable+0x8aa>
    8daa:	65 64 00 00          	gs add %al,%fs:(%rax)
	...
    917e:	00 00                	add    %al,(%rax)
    9180:	2f                   	(bad)  
    9181:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
    9186:	70 72                	jo     91fa <executable+0xc8a>
    9188:	61                   	(bad)  
    9189:	6b 68 61 72          	imul   $0x72,0x61(%rax),%ebp
    918d:	2f                   	(bad)  
    918e:	64 61                	fs (bad) 
    9190:	74 61                	je     91f3 <executable+0xc83>
    9192:	2f                   	(bad)  
    9193:	63 6f 64             	movslq 0x64(%rdi),%ebp
    9196:	65 2f                	gs (bad) 
    9198:	6e                   	outsb  %ds:(%rsi),(%dx)
    9199:	66 76 73             	data16 jbe 920f <executable+0xc9f>
    919c:	2f                   	(bad)  
    919d:	65 6e                	outsb  %gs:(%rsi),(%dx)
    919f:	63 72 79             	movslq 0x79(%rdx),%esi
    91a2:	70 74                	jo     9218 <executable+0xca8>
    91a4:	2f                   	(bad)  
    91a5:	6d                   	insl   (%dx),%es:(%rdi)
    91a6:	61                   	(bad)  
    91a7:	69 6e 5f 6d 61 70 70 	imul   $0x7070616d,0x5f(%rsi),%ebp
    91ae:	65 64 00 00          	gs add %al,%fs:(%rax)
	...
    957e:	00 00                	add    %al,(%rax)
    9580:	55                   	push   %rbp
    9581:	6e                   	outsb  %ds:(%rsi),(%dx)
    9582:	61                   	(bad)  
    9583:	62                   	(bad)  
    9584:	6c                   	insb   (%dx),%es:(%rdi)
    9585:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
    958a:	73 65                	jae    95f1 <executable+0x1081>
    958c:	74 20                	je     95ae <executable+0x103e>
    958e:	74 68                	je     95f8 <executable+0x1088>
    9590:	65 20 65 76          	and    %ah,%gs:0x76(%rbp)
    9594:	65 6e                	outsb  %gs:(%rsi),(%dx)
    9596:	74 66                	je     95fe <executable+0x108e>
    9598:	64 00 00             	add    %al,%fs:(%rax)
    959b:	00 00                	add    %al,(%rax)
    959d:	00 00                	add    %al,(%rax)
    959f:	00 55 6e             	add    %dl,0x6e(%rbp)
    95a2:	61                   	(bad)  
    95a3:	62                   	(bad)  
    95a4:	6c                   	insb   (%dx),%es:(%rdi)
    95a5:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
    95aa:	73 65                	jae    9611 <executable+0x10a1>
    95ac:	74 20                	je     95ce <executable+0x105e>
    95ae:	74 68                	je     9618 <executable+0x10a8>
    95b0:	65 20 69 72          	and    %ch,%gs:0x72(%rcx)
    95b4:	71 66                	jno    961c <executable+0x10ac>
    95b6:	64 20 66 6f          	and    %ah,%fs:0x6f(%rsi)
    95ba:	72 20                	jb     95dc <executable+0x106c>
    95bc:	74 68                	je     9626 <executable+0x10b6>
    95be:	65 20 67 73          	and    %ah,%gs:0x73(%rdi)
    95c2:	69 20 3d 20 25 64    	imul   $0x6425203d,(%rax),%esp
    95c8:	0a 00                	or     (%rax),%al
    95ca:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
    95cc:	75 6e                	jne    963c <executable+0x10cc>
    95ce:	74 20                	je     95f0 <executable+0x1080>
    95d0:	63 72 65             	movslq 0x65(%rdx),%esi
    95d3:	61                   	(bad)  
    95d4:	74 65                	je     963b <executable+0x10cb>
    95d6:	20 74 68 72          	and    %dh,0x72(%rax,%rbp,2)
    95da:	65 61                	gs (bad) 
    95dc:	64 20 66 6f          	and    %ah,%fs:0x6f(%rsi)
    95e0:	72 20                	jb     9602 <executable+0x1092>
    95e2:	74 69                	je     964d <executable+0x10dd>
    95e4:	6d                   	insl   (%dx),%es:(%rdi)
    95e5:	65 72 00             	gs jb  95e8 <executable+0x1078>
    95e8:	42 61                	rex.X (bad) 
    95ea:	73 65                	jae    9651 <executable+0x10e1>
    95ec:	20 20                	and    %ah,(%rax)
    95ee:	3a 20                	cmp    (%rax),%ah
    95f0:	30 78 25             	xor    %bh,0x25(%rax)
    95f3:	6c                   	insb   (%dx),%es:(%rdi)
    95f4:	6c                   	insb   (%dx),%es:(%rdi)
    95f5:	78 0a                	js     9601 <executable+0x1091>
    95f7:	00 4c 69 6d          	add    %cl,0x6d(%rcx,%rbp,2)
    95fb:	69 74 20 3a 20 30 78 	imul   $0x25783020,0x3a(%rax,%riz,1),%esi
    9602:	25 
    9603:	78 0a                	js     960f <executable+0x109f>
    9605:	00 00                	add    %al,(%rax)
    9607:	00 2d 2d 2d 2d 2d    	add    %ch,0x2d2d2d2d(%rip)        # 2d2dc33a <_end+0x2d2cf17a>
    960d:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    9612:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    9617:	2d 25 30 33 64       	sub    $0x64333025,%eax
    961c:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    9621:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    9626:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    962b:	2d 0a 00 66 75       	sub    $0x7566000a,%eax
    9630:	6e                   	outsb  %ds:(%rsi),(%dx)
    9631:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
    9635:	6e                   	outsb  %ds:(%rsi),(%dx)
    9636:	20 20                	and    %ah,(%rax)
    9638:	20 20                	and    %ah,(%rax)
    963a:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    963f:	30 38                	xor    %bh,(%rax)
    9641:	78 0a                	js     964d <executable+0x10dd>
    9643:	00 69 6e             	add    %ch,0x6e(%rcx)
    9646:	64 65 78 20          	fs gs js 966a <executable+0x10fa>
    964a:	20 20                	and    %ah,(%rax)
    964c:	20 20                	and    %ah,(%rax)
    964e:	20 20                	and    %ah,(%rax)
    9650:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    9655:	30 38                	xor    %bh,(%rax)
    9657:	78 0a                	js     9663 <executable+0x10f3>
    9659:	00 66 6c             	add    %ah,0x6c(%rsi)
    965c:	61                   	(bad)  
    965d:	67 73 20             	addr32 jae 9680 <executable+0x1110>
    9660:	20 20                	and    %ah,(%rax)
    9662:	20 20                	and    %ah,(%rax)
    9664:	20 20                	and    %ah,(%rax)
    9666:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    966b:	30 38                	xor    %bh,(%rax)
    966d:	78 0a                	js     9679 <executable+0x1109>
    966f:	00 65 61             	add    %ah,0x61(%rbp)
    9672:	78 20                	js     9694 <executable+0x1124>
    9674:	20 20                	and    %ah,(%rax)
    9676:	20 20                	and    %ah,(%rax)
    9678:	20 20                	and    %ah,(%rax)
    967a:	20 20                	and    %ah,(%rax)
    967c:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    9681:	30 38                	xor    %bh,(%rax)
    9683:	78 0a                	js     968f <executable+0x111f>
    9685:	00 65 62             	add    %ah,0x62(%rbp)
    9688:	78 20                	js     96aa <executable+0x113a>
    968a:	20 20                	and    %ah,(%rax)
    968c:	20 20                	and    %ah,(%rax)
    968e:	20 20                	and    %ah,(%rax)
    9690:	20 20                	and    %ah,(%rax)
    9692:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    9697:	30 38                	xor    %bh,(%rax)
    9699:	78 0a                	js     96a5 <executable+0x1135>
    969b:	00 65 63             	add    %ah,0x63(%rbp)
    969e:	78 20                	js     96c0 <executable+0x1150>
    96a0:	20 20                	and    %ah,(%rax)
    96a2:	20 20                	and    %ah,(%rax)
    96a4:	20 20                	and    %ah,(%rax)
    96a6:	20 20                	and    %ah,(%rax)
    96a8:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    96ad:	30 38                	xor    %bh,(%rax)
    96af:	78 0a                	js     96bb <executable+0x114b>
    96b1:	00 65 64             	add    %ah,0x64(%rbp)
    96b4:	78 20                	js     96d6 <executable+0x1166>
    96b6:	20 20                	and    %ah,(%rax)
    96b8:	20 20                	and    %ah,(%rax)
    96ba:	20 20                	and    %ah,(%rax)
    96bc:	20 20                	and    %ah,(%rax)
    96be:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    96c3:	30 38                	xor    %bh,(%rax)
    96c5:	78 0a                	js     96d1 <executable+0x1161>
    96c7:	00 63 61             	add    %ah,0x61(%rbx)
    96ca:	6e                   	outsb  %ds:(%rsi),(%dx)
    96cb:	74 20                	je     96ed <executable+0x117d>
    96cd:	67 65 74 20          	addr32 gs je 96f1 <executable+0x1181>
    96d1:	72 65                	jb     9738 <executable+0x11c8>
    96d3:	67 73 00             	addr32 jae 96d6 <executable+0x1166>
    96d6:	63 61 6e             	movslq 0x6e(%rcx),%esp
    96d9:	74 20                	je     96fb <executable+0x118b>
    96db:	67 65 74 20          	addr32 gs je 96ff <executable+0x118f>
    96df:	64 65 62             	fs gs (bad) 
    96e2:	75 67                	jne    974b <executable+0x11db>
    96e4:	20 72 65             	and    %dh,0x65(%rdx)
    96e7:	67 73 00             	addr32 jae 96ea <executable+0x117a>
    96ea:	00 00                	add    %al,(%rax)
    96ec:	00 00                	add    %al,(%rax)
    96ee:	00 00                	add    %al,(%rax)
    96f0:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    96f5:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    96fa:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    96ff:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    9704:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    9709:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
    970e:	2d 2d 00 69 64       	sub    $0x6469002d,%eax
    9713:	20 20                	and    %ah,(%rax)
    9715:	20 20                	and    %ah,(%rax)
    9717:	20 3d 20 25 64 0a    	and    %bh,0xa642520(%rip)        # a64bc3d <_end+0xa63ea7d>
    971d:	00 72 69             	add    %dh,0x69(%rdx)
    9720:	70 20                	jo     9742 <executable+0x11d2>
    9722:	20 20                	and    %ah,(%rax)
    9724:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c74a <_end+0x2577f58a>
    972a:	30 31                	xor    %dh,(%rcx)
    972c:	36 6c                	ss insb (%dx),%es:(%rdi)
    972e:	6c                   	insb   (%dx),%es:(%rdi)
    972f:	78 09                	js     973a <executable+0x11ca>
    9731:	00 72 61             	add    %dh,0x61(%rdx)
    9734:	78 20                	js     9756 <executable+0x11e6>
    9736:	20 20                	and    %ah,(%rax)
    9738:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c75e <_end+0x2577f59e>
    973e:	30 31                	xor    %dh,(%rcx)
    9740:	36 6c                	ss insb (%dx),%es:(%rdi)
    9742:	6c                   	insb   (%dx),%es:(%rdi)
    9743:	78 09                	js     974e <executable+0x11de>
    9745:	00 72 62             	add    %dh,0x62(%rdx)
    9748:	78 20                	js     976a <executable+0x11fa>
    974a:	20 20                	and    %ah,(%rax)
    974c:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c772 <_end+0x2577f5b2>
    9752:	30 31                	xor    %dh,(%rcx)
    9754:	36 6c                	ss insb (%dx),%es:(%rdi)
    9756:	6c                   	insb   (%dx),%es:(%rdi)
    9757:	78 0a                	js     9763 <executable+0x11f3>
    9759:	00 72 63             	add    %dh,0x63(%rdx)
    975c:	78 20                	js     977e <executable+0x120e>
    975e:	20 20                	and    %ah,(%rax)
    9760:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c786 <_end+0x2577f5c6>
    9766:	30 31                	xor    %dh,(%rcx)
    9768:	36 6c                	ss insb (%dx),%es:(%rdi)
    976a:	6c                   	insb   (%dx),%es:(%rdi)
    976b:	78 09                	js     9776 <executable+0x1206>
    976d:	00 72 64             	add    %dh,0x64(%rdx)
    9770:	78 20                	js     9792 <executable+0x1222>
    9772:	20 20                	and    %ah,(%rax)
    9774:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c79a <_end+0x2577f5da>
    977a:	30 31                	xor    %dh,(%rcx)
    977c:	36 6c                	ss insb (%dx),%es:(%rdi)
    977e:	6c                   	insb   (%dx),%es:(%rdi)
    977f:	78 09                	js     978a <executable+0x121a>
    9781:	00 72 73             	add    %dh,0x73(%rdx)
    9784:	70 20                	jo     97a6 <executable+0x1236>
    9786:	20 20                	and    %ah,(%rax)
    9788:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c7ae <_end+0x2577f5ee>
    978e:	30 31                	xor    %dh,(%rcx)
    9790:	36 6c                	ss insb (%dx),%es:(%rdi)
    9792:	6c                   	insb   (%dx),%es:(%rdi)
    9793:	78 0a                	js     979f <executable+0x122f>
    9795:	00 72 62             	add    %dh,0x62(%rdx)
    9798:	70 20                	jo     97ba <executable+0x124a>
    979a:	20 20                	and    %ah,(%rax)
    979c:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c7c2 <_end+0x2577f602>
    97a2:	30 31                	xor    %dh,(%rcx)
    97a4:	36 6c                	ss insb (%dx),%es:(%rdi)
    97a6:	6c                   	insb   (%dx),%es:(%rdi)
    97a7:	78 09                	js     97b2 <executable+0x1242>
    97a9:	00 72 64             	add    %dh,0x64(%rdx)
    97ac:	69 20 20 20 20 3d    	imul   $0x3d202020,(%rax),%esp
    97b2:	20 30                	and    %dh,(%rax)
    97b4:	78 25                	js     97db <executable+0x126b>
    97b6:	30 31                	xor    %dh,(%rcx)
    97b8:	36 6c                	ss insb (%dx),%es:(%rdi)
    97ba:	6c                   	insb   (%dx),%es:(%rdi)
    97bb:	78 09                	js     97c6 <executable+0x1256>
    97bd:	00 72 73             	add    %dh,0x73(%rdx)
    97c0:	69 20 20 20 20 3d    	imul   $0x3d202020,(%rax),%esp
    97c6:	20 30                	and    %dh,(%rax)
    97c8:	78 25                	js     97ef <executable+0x127f>
    97ca:	30 31                	xor    %dh,(%rcx)
    97cc:	36 6c                	ss insb (%dx),%es:(%rdi)
    97ce:	6c                   	insb   (%dx),%es:(%rdi)
    97cf:	78 0a                	js     97db <executable+0x126b>
    97d1:	00 72 5b             	add    %dh,0x5b(%rdx)
    97d4:	25 30 32 64 5d       	and    $0x5d643230,%eax
    97d9:	20 20                	and    %ah,(%rax)
    97db:	20 20                	and    %ah,(%rax)
    97dd:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    97e2:	30 31                	xor    %dh,(%rcx)
    97e4:	36 6c                	ss insb (%dx),%es:(%rdi)
    97e6:	6c                   	insb   (%dx),%es:(%rdi)
    97e7:	78 0a                	js     97f3 <executable+0x1283>
    97e9:	00 72 66             	add    %dh,0x66(%rdx)
    97ec:	6c                   	insb   (%dx),%es:(%rdi)
    97ed:	61                   	(bad)  
    97ee:	67 73 20             	addr32 jae 9811 <executable+0x12a1>
    97f1:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    97f6:	30 31                	xor    %dh,(%rcx)
    97f8:	36 6c                	ss insb (%dx),%es:(%rdi)
    97fa:	6c                   	insb   (%dx),%es:(%rdi)
    97fb:	78 09                	js     9806 <executable+0x1296>
    97fd:	00 65 66             	add    %ah,0x66(%rbp)
    9800:	65 72 20             	gs jb  9823 <executable+0x12b3>
    9803:	20 20                	and    %ah,(%rax)
    9805:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    980a:	30 31                	xor    %dh,(%rcx)
    980c:	36 6c                	ss insb (%dx),%es:(%rdi)
    980e:	6c                   	insb   (%dx),%es:(%rdi)
    980f:	78 09                	js     981a <executable+0x12aa>
    9811:	00 63 72             	add    %ah,0x72(%rbx)
    9814:	30 20                	xor    %ah,(%rax)
    9816:	20 20                	and    %ah,(%rax)
    9818:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c83e <_end+0x2577f67e>
    981e:	30 31                	xor    %dh,(%rcx)
    9820:	36 6c                	ss insb (%dx),%es:(%rdi)
    9822:	6c                   	insb   (%dx),%es:(%rdi)
    9823:	78 0a                	js     982f <executable+0x12bf>
    9825:	00 63 72             	add    %ah,0x72(%rbx)
    9828:	32 20                	xor    (%rax),%ah
    982a:	20 20                	and    %ah,(%rax)
    982c:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c852 <_end+0x2577f692>
    9832:	30 31                	xor    %dh,(%rcx)
    9834:	36 6c                	ss insb (%dx),%es:(%rdi)
    9836:	6c                   	insb   (%dx),%es:(%rdi)
    9837:	78 09                	js     9842 <executable+0x12d2>
    9839:	00 63 72             	add    %ah,0x72(%rbx)
    983c:	33 20                	xor    (%rax),%esp
    983e:	20 20                	and    %ah,(%rax)
    9840:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c866 <_end+0x2577f6a6>
    9846:	30 31                	xor    %dh,(%rcx)
    9848:	36 6c                	ss insb (%dx),%es:(%rdi)
    984a:	6c                   	insb   (%dx),%es:(%rdi)
    984b:	78 09                	js     9856 <executable+0x12e6>
    984d:	00 63 72             	add    %ah,0x72(%rbx)
    9850:	34 20                	xor    $0x20,%al
    9852:	20 20                	and    %ah,(%rax)
    9854:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c87a <_end+0x2577f6ba>
    985a:	30 31                	xor    %dh,(%rcx)
    985c:	36 6c                	ss insb (%dx),%es:(%rdi)
    985e:	6c                   	insb   (%dx),%es:(%rdi)
    985f:	78 0a                	js     986b <executable+0x12fb>
    9861:	00 64 62 5b          	add    %ah,0x5b(%rdx,%riz,2)
    9865:	25 64 5d 20 20       	and    $0x20205d64,%eax
    986a:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    986f:	30 31                	xor    %dh,(%rcx)
    9871:	36 6c                	ss insb (%dx),%es:(%rdi)
    9873:	6c                   	insb   (%dx),%es:(%rdi)
    9874:	78 0a                	js     9880 <executable+0x1310>
    9876:	00 64 72 36          	add    %ah,0x36(%rdx,%rsi,2)
    987a:	20 20                	and    %ah,(%rax)
    987c:	20 20                	and    %ah,(%rax)
    987e:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    9883:	30 31                	xor    %dh,(%rcx)
    9885:	36 6c                	ss insb (%dx),%es:(%rdi)
    9887:	6c                   	insb   (%dx),%es:(%rdi)
    9888:	78 09                	js     9893 <executable+0x1323>
    988a:	00 64 72 37          	add    %ah,0x37(%rdx,%rsi,2)
    988e:	20 20                	and    %ah,(%rax)
    9890:	20 20                	and    %ah,(%rax)
    9892:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    9897:	30 31                	xor    %dh,(%rcx)
    9899:	36 6c                	ss insb (%dx),%es:(%rdi)
    989b:	6c                   	insb   (%dx),%es:(%rdi)
    989c:	78 09                	js     98a7 <executable+0x1337>
    989e:	00 66 6c             	add    %ah,0x6c(%rsi)
    98a1:	61                   	(bad)  
    98a2:	67 73 20             	addr32 jae 98c5 <executable+0x1355>
    98a5:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578c8cb <_end+0x2577f70b>
    98ab:	30 31                	xor    %dh,(%rcx)
    98ad:	36 6c                	ss insb (%dx),%es:(%rdi)
    98af:	6c                   	insb   (%dx),%es:(%rdi)
    98b0:	78 0a                	js     98bc <executable+0x134c>
    98b2:	00 5b 25             	add    %bl,0x25(%rbx)
    98b5:	30 33                	xor    %dh,(%rbx)
    98b7:	58                   	pop    %rax
    98b8:	5d                   	pop    %rbp
    98b9:	20 3d 20 25 30 38    	and    %bh,0x38302520(%rip)        # 3830bddf <_end+0x382fec1f>
    98bf:	58                   	pop    %rax
    98c0:	0a 00                	or     (%rax),%al
	...
    98ce:	00 00                	add    %al,(%rax)
    98d0:	25 73 2d 25 64       	and    $0x64252d73,%eax
    98d5:	20 3a                	and    %bh,(%rdx)
    98d7:	20 46 61             	and    %al,0x61(%rsi)
    98da:	69 6c 75 72 65 20 73 	imul   $0x6f732065,0x72(%rbp,%rsi,2),%ebp
    98e1:	6f 
    98e2:	63 6b 20             	movslq 0x20(%rbx),%ebp
    98e5:	6f                   	outsl  %ds:(%rsi),(%dx)
    98e6:	70 65                	jo     994d <executable+0x13dd>
    98e8:	6e                   	outsb  %ds:(%rsi),(%dx)
    98e9:	0a 00                	or     (%rax),%al
    98eb:	00 00                	add    %al,(%rax)
    98ed:	00 00                	add    %al,(%rax)
    98ef:	00 25 73 2d 25 64    	add    %ah,0x64252d73(%rip)        # 6425c668 <_end+0x6424f4a8>
    98f5:	20 3a                	and    %bh,(%rdx)
    98f7:	20 46 61             	and    %al,0x61(%rsi)
    98fa:	69 6c 75 72 65 20 73 	imul   $0x65732065,0x72(%rbp,%rsi,2),%ebp
    9901:	65 
    9902:	74 73                	je     9977 <executable+0x1407>
    9904:	6f                   	outsl  %ds:(%rsi),(%dx)
    9905:	63 6b 6f             	movslq 0x6f(%rbx),%ebp
    9908:	70 74                	jo     997e <executable+0x140e>
    990a:	20 62 69             	and    %ah,0x69(%rdx)
    990d:	6e                   	outsb  %ds:(%rsi),(%dx)
    990e:	64 20 64 65 76       	and    %ah,%fs:0x76(%rbp,%riz,2)
    9913:	69 63 65 0a 00 25 73 	imul   $0x7325000a,0x65(%rbx),%esp
    991a:	2d 25 64 20 3a       	sub    $0x3a206425,%eax
    991f:	20 46 61             	and    %al,0x61(%rsi)
    9922:	69 6c 75 72 65 20 69 	imul   $0x6f692065,0x72(%rbp,%rsi,2),%ebp
    9929:	6f 
    992a:	63 74 6c 20          	movslq 0x20(%rsp,%rbp,2),%esi
    992e:	53                   	push   %rbx
    992f:	49                   	rex.WB
    9930:	4f                   	rex.WRXB
    9931:	43                   	rex.XB
    9932:	47                   	rex.RXB
    9933:	49                   	rex.WB
    9934:	46                   	rex.RX
    9935:	46                   	rex.RX
    9936:	4c                   	rex.WR
    9937:	41                   	rex.B
    9938:	47 53                	rex.RXB push %r11
    993a:	2c 20                	sub    $0x20,%al
    993c:	69 66 6e 61 6d 65 3d 	imul   $0x3d656d61,0x6e(%rsi),%esp
    9943:	25 73 0a 00 00       	and    $0xa73,%eax
    9948:	25 73 2d 25 64       	and    $0x64252d73,%eax
    994d:	20 3a                	and    %bh,(%rdx)
    994f:	20 46 61             	and    %al,0x61(%rsi)
    9952:	69 6c 75 72 65 20 69 	imul   $0x6f692065,0x72(%rbp,%rsi,2),%ebp
    9959:	6f 
    995a:	63 74 6c 20          	movslq 0x20(%rsp,%rbp,2),%esi
    995e:	53                   	push   %rbx
    995f:	49                   	rex.WB
    9960:	4f                   	rex.WRXB
    9961:	43 53                	rex.XB push %r11
    9963:	49                   	rex.WB
    9964:	46                   	rex.RX
    9965:	46                   	rex.RX
    9966:	4c                   	rex.WR
    9967:	41                   	rex.B
    9968:	47 53                	rex.RXB push %r11
    996a:	0a 00                	or     (%rax),%al
    996c:	00 00                	add    %al,(%rax)
    996e:	00 00                	add    %al,(%rax)
    9970:	25 73 2d 25 64       	and    $0x64252d73,%eax
    9975:	20 3a                	and    %bh,(%rdx)
    9977:	20 46 61             	and    %al,0x61(%rsi)
    997a:	69 6c 75 72 65 20 73 	imul   $0x65732065,0x72(%rbp,%rsi,2),%ebp
    9981:	65 
    9982:	74 73                	je     99f7 <__FUNCTION__.4623+0x17>
    9984:	6f                   	outsl  %ds:(%rsi),(%dx)
    9985:	63 6b 6f             	movslq 0x6f(%rbx),%ebp
    9988:	70 74                	jo     99fe <__FUNCTION__.4623+0x1e>
    998a:	20 61 74             	and    %ah,0x74(%rcx)
    998d:	74 61                	je     99f0 <__FUNCTION__.4623+0x10>
    998f:	63 68 20             	movslq 0x20(%rax),%ebp
    9992:	62                   	(bad)  
    9993:	70 66                	jo     99fb <__FUNCTION__.4623+0x1b>
    9995:	0a 00                	or     (%rax),%al
    9997:	00 25 30 34 64 20    	add    %ah,0x20643430(%rip)        # 2064cdcd <_end+0x2063fc0d>
    999d:	66 61                	data16 (bad) 
    999f:	74 61                	je     9a02 <str_limit_t+0x2>
    99a1:	6c                   	insb   (%dx),%es:(%rdi)
    99a2:	3a 20                	cmp    (%rax),%ah
    99a4:	00 00                	add    %al,(%rax)
    99a6:	00 00                	add    %al,(%rax)
    99a8:	55                   	push   %rbp
    99a9:	6e                   	outsb  %ds:(%rsi),(%dx)
    99aa:	61                   	(bad)  
    99ab:	62                   	(bad)  
    99ac:	6c                   	insb   (%dx),%es:(%rdi)
    99ad:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
    99b2:	75 6e                	jne    9a22 <str_limit_t+0x22>
    99b4:	62                   	(bad)  
    99b5:	69 6e 64 20 73 6f 63 	imul   $0x636f7320,0x64(%rsi),%ebp
    99bc:	6b 65 74 20          	imul   $0x20,0x74(%rbp),%esp
    99c0:	6e                   	outsb  %ds:(%rsi),(%dx)
    99c1:	6f                   	outsl  %ds:(%rsi),(%dx)
    99c2:	77 2e                	ja     99f2 <__FUNCTION__.4623+0x12>
    99c4:	20 57 69             	and    %dl,0x69(%rdi)
    99c7:	65 72 64             	gs jb  9a2e <str_limit_t+0x2e>
    99ca:	2e 00 0a             	add    %cl,%cs:(%rdx)
    99cd:	65 72 72             	gs jb  9a42 <str_limit_t+0x42>
    99d0:	3a 20                	cmp    (%rax),%ah
    99d2:	25 73 00 00 00       	and    $0x73,%eax
	...

00000000000099e0 <__FUNCTION__.4623>:
    99e0:	67 65 74 5f          	addr32 gs je 9a43 <str_limit_t+0x43>
    99e4:	73 6f                	jae    9a55 <str_limit_t+0x55>
    99e6:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
    99e9:	66 6f                	outsw  %ds:(%rsi),(%dx)
    99eb:	72 5f                	jb     9a4c <str_limit_t+0x4c>
    99ed:	66 6c                	data16 insb (%dx),%es:(%rdi)
    99ef:	6f                   	outsl  %ds:(%rsi),(%dx)
    99f0:	77 00                	ja     99f2 <__FUNCTION__.4623+0x12>
	...

0000000000009a00 <str_limit_t>:
    9a00:	65 70 68             	gs jo  9a6b <str_limit_t+0x6b>
    9a03:	64 72 00             	fs jb  9a06 <str_limit_t+0x6>
	...
    9a7e:	00 00                	add    %al,(%rax)
    9a80:	65 73 68             	gs jae 9aeb <str_limit_t+0xeb>
    9a83:	6e                   	outsb  %ds:(%rsi),(%dx)
    9a84:	75 6d                	jne    9af3 <str_limit_t+0xf3>
	...
    9afe:	00 00                	add    %al,(%rax)
    9b00:	65 73 68             	gs jae 9b6b <str_limit_t+0x16b>
    9b03:	64 72 65             	fs jb  9b6b <str_limit_t+0x16b>
    9b06:	6e                   	outsb  %ds:(%rsi),(%dx)
    9b07:	74 73                	je     9b7c <str_limit_t+0x17c>
    9b09:	69 7a 65 00 00 00 00 	imul   $0x0,0x65(%rdx),%edi
	...

0000000000009b80 <inp_read_str>:
    9b80:	25 64 00 25 64       	and    $0x64250064,%eax
    9b85:	00 25 64 00 00 00    	add    %ah,0x64(%rip)        # 9bef <prot_map+0x4f>
	...

0000000000009ba0 <prot_map>:
    9ba0:	00 00                	add    %al,(%rax)
    9ba2:	00 00                	add    %al,(%rax)
    9ba4:	04 00                	add    $0x0,%al
    9ba6:	00 00                	add    %al,(%rax)
    9ba8:	02 00                	add    (%rax),%al
    9baa:	00 00                	add    %al,(%rax)
    9bac:	06                   	(bad)  
    9bad:	00 00                	add    %al,(%rax)
    9baf:	00 01                	add    %al,(%rcx)
    9bb1:	00 00                	add    %al,(%rax)
    9bb3:	00 05 00 00 00 03    	add    %al,0x3000000(%rip)        # 3009bb9 <_end+0x2ffc9f9>
    9bb9:	00 00                	add    %al,(%rax)
    9bbb:	00 07                	add    %al,(%rdi)
    9bbd:	00 00                	add    %al,(%rax)
    9bbf:	00 25 30 32 58 20    	add    %ah,0x20583230(%rip)        # 2058cdf5 <_end+0x2057fc35>
    9bc5:	00 25 30 34 64 3a    	add    %ah,0x3a643430(%rip)        # 3a64cffb <_end+0x3a63fe3b>
    9bcb:	20 00                	and    %al,(%rax)
    9bcd:	77 72                	ja     9c41 <prot_map+0xa1>
    9bcf:	6f                   	outsl  %ds:(%rsi),(%dx)
    9bd0:	6e                   	outsb  %ds:(%rsi),(%dx)
    9bd1:	67 20 64 61 74       	and    %ah,0x74(%ecx,%eiz,2)
    9bd6:	61                   	(bad)  
    9bd7:	20 74 79 70          	and    %dh,0x70(%rcx,%rdi,2)
    9bdb:	65 00 72 00          	add    %dh,%gs:0x0(%rdx)
    9bdf:	25 73 20 64 6f       	and    $0x6f642073,%eax
    9be4:	65 73 20             	gs jae 9c07 <prot_map+0x67>
    9be7:	6e                   	outsb  %ds:(%rsi),(%dx)
    9be8:	6f                   	outsl  %ds:(%rsi),(%dx)
    9be9:	74 20                	je     9c0b <prot_map+0x6b>
    9beb:	65 78 69             	gs js  9c57 <prot_map+0xb7>
    9bee:	73 74                	jae    9c64 <prot_map+0xc4>
    9bf0:	0a 00                	or     (%rax),%al
    9bf2:	25 73 00 62 61       	and    $0x61620073,%eax
    9bf7:	64 20 69 6e          	and    %ch,%fs:0x6e(%rcx)
    9bfb:	70 75                	jo     9c72 <prot_map+0xd2>
    9bfd:	74 20                	je     9c1f <prot_map+0x7f>
    9bff:	25 73 20 69 6e       	and    $0x6e692073,%eax
    9c04:	20 25 73 2c 20 6d    	and    %ah,0x6d202c73(%rip)        # 6d20c87d <_end+0x6d1ff6bd>
    9c0a:	61                   	(bad)  
    9c0b:	74 63                	je     9c70 <prot_map+0xd0>
    9c0d:	68 3d 25 64 0a       	pushq  $0xa64253d
    9c12:	00 62 61             	add    %ah,0x61(%rdx)
    9c15:	64 20 69 6e          	and    %ch,%fs:0x6e(%rcx)
    9c19:	70 75                	jo     9c90 <prot_map+0xf0>
    9c1b:	74 20                	je     9c3d <prot_map+0x9d>
    9c1d:	69 6e 20 25 73 0a 00 	imul   $0xa7325,0x20(%rsi),%ebp
    9c24:	70 68                	jo     9c8e <prot_map+0xee>
    9c26:	20 25 30 32 64 3a    	and    %ah,0x3a643230(%rip)        # 3a64ce5c <_end+0x3a63fc9c>
    9c2c:	20 00                	and    %al,(%rax)
    9c2e:	00 00                	add    %al,(%rax)
    9c30:	25 30 38 58 20       	and    $0x20583830,%eax
    9c35:	25 30 32 58 20       	and    $0x20583230,%eax
    9c3a:	25 2d 31 30 6c       	and    $0x6c30312d,%eax
    9c3f:	64 20 30             	and    %dh,%fs:(%rax)
    9c42:	78 25                	js     9c69 <prot_map+0xc9>
    9c44:	30 31                	xor    %dh,(%rcx)
    9c46:	36 6c                	ss insb (%dx),%es:(%rdi)
    9c48:	58                   	pop    %rax
    9c49:	20 30                	and    %dh,(%rax)
    9c4b:	78 25                	js     9c72 <prot_map+0xd2>
    9c4d:	30 31                	xor    %dh,(%rcx)
    9c4f:	36 6c                	ss insb (%dx),%es:(%rdi)
    9c51:	58                   	pop    %rax
    9c52:	20 25 30 36 6c 58    	and    %ah,0x586c3630(%rip)        # 586cd288 <_end+0x586c00c8>
    9c58:	20 25 30 36 6c 58    	and    %ah,0x586c3630(%rip)        # 586cd28e <_end+0x586c00ce>
    9c5e:	20 25 30 36 6c 58    	and    %ah,0x586c3630(%rip)        # 586cd294 <_end+0x586c00d4>
    9c64:	0a 00                	or     (%rax),%al
    9c66:	4c 6f                	rex.WR outsl %ds:(%rsi),(%dx)
    9c68:	61                   	(bad)  
    9c69:	64 61                	fs (bad) 
    9c6b:	62                   	(bad)  
    9c6c:	6c                   	insb   (%dx),%es:(%rdi)
    9c6d:	65 20 73 65          	and    %dh,%gs:0x65(%rbx)
    9c71:	67 6d                	insl   (%dx),%es:(%edi)
    9c73:	65 6e                	outsb  %gs:(%rsi),(%dx)
    9c75:	74 73                	je     9cea <prot_map+0x14a>
    9c77:	20 61 72             	and    %ah,0x72(%rcx)
    9c7a:	65 20 3d 20 00 6e 70 	and    %bh,%gs:0x706e0020(%rip)        # 706e9ca1 <_end+0x706dcae1>
    9c81:	61                   	(bad)  
    9c82:	67 65 73 00          	addr32 gs jae 9c86 <prot_map+0xe6>
    9c86:	66 69 6c 65 73 7a 00 	imul   $0x7a,0x73(%rbp,%riz,2),%bp
    9c8d:	6d                   	insl   (%dx),%es:(%rdi)
    9c8e:	65 6d                	gs insl (%dx),%es:(%rdi)
    9c90:	73 7a                	jae    9d0c <prot_map+0x16c>
    9c92:	00 76 61             	add    %dh,0x61(%rsi)
    9c95:	64 64 72 00          	fs fs jb 9c99 <prot_map+0xf9>
    9c99:	4e 75 6d             	rex.WRX jne 9d09 <prot_map+0x169>
    9c9c:	00 00                	add    %al,(%rax)
    9c9e:	00 00                	add    %al,(%rax)
    9ca0:	25 2d 33 73 20       	and    $0x2073332d,%eax
    9ca5:	25 2d 31 36 73       	and    $0x7336312d,%eax
    9caa:	20 25 2d 36 73 20    	and    %ah,0x2073362d(%rip)        # 2073d2dd <_end+0x2073011d>
    9cb0:	25 2d 36 73 20       	and    $0x2073362d,%eax
    9cb5:	25 2d 36 73 20       	and    $0x2073362d,%eax
    9cba:	25 2d 36 73 0a       	and    $0xa73362d,%eax
    9cbf:	00 66 6c             	add    %ah,0x6c(%rsi)
    9cc2:	61                   	(bad)  
    9cc3:	67 73 00             	addr32 jae 9cc6 <prot_map+0x126>
    9cc6:	00 00                	add    %al,(%rax)
    9cc8:	25 30 33 64 20       	and    $0x20643330,%eax
    9ccd:	25 30 31 36 6c       	and    $0x6c363130,%eax
    9cd2:	58                   	pop    %rax
    9cd3:	20 25 30 36 6c 58    	and    %ah,0x586c3630(%rip)        # 586cd309 <_end+0x586c0149>
    9cd9:	20 25 30 36 6c 58    	and    %ah,0x586c3630(%rip)        # 586cd30f <_end+0x586c014f>
    9cdf:	20 25 30 36 58 20    	and    %ah,0x20583630(%rip)        # 2058d315 <_end+0x20580155>
    9ce5:	25 30 36 58 0a       	and    $0xa583630,%eax
    9cea:	00 75 6e             	add    %dh,0x6e(%rbp)
    9ced:	61                   	(bad)  
    9cee:	62                   	(bad)  
    9cef:	6c                   	insb   (%dx),%es:(%rdi)
    9cf0:	65 20 74 6f 20       	and    %dh,%gs:0x20(%rdi,%rbp,2)
    9cf5:	6f                   	outsl  %ds:(%rsi),(%dx)
    9cf6:	70 65                	jo     9d5d <prot_map+0x1bd>
    9cf8:	6e                   	outsb  %ds:(%rsi),(%dx)
    9cf9:	20 25 73 00 00 00    	and    %ah,0x73(%rip)        # 9d72 <prot_map+0x1d2>
    9cff:	00 66 69             	add    %ah,0x69(%rsi)
    9d02:	6c                   	insb   (%dx),%es:(%rdi)
    9d03:	65 6e                	outsb  %gs:(%rsi),(%dx)
    9d05:	6f                   	outsl  %ds:(%rsi),(%dx)
    9d06:	20 66 61             	and    %ah,0x61(%rsi)
    9d09:	69 6c 65 64 2c 20 72 	imul   $0x6572202c,0x64(%rbp,%riz,2),%ebp
    9d10:	65 
    9d11:	74 75                	je     9d88 <prot_map+0x1e8>
    9d13:	72 6e                	jb     9d83 <prot_map+0x1e3>
    9d15:	65 64 20 70 72       	gs and %dh,%fs:0x72(%rax)
    9d1a:	6f                   	outsl  %ds:(%rsi),(%dx)
    9d1b:	62 61                	(bad)  
    9d1d:	62                   	(bad)  
    9d1e:	6c                   	insb   (%dx),%es:(%rdi)
    9d1f:	79 20                	jns    9d41 <prot_map+0x1a1>
    9d21:	2d 31 00 65 72       	sub    $0x72650031,%eax
    9d26:	72 6f                	jb     9d97 <prot_map+0x1f7>
    9d28:	72 20                	jb     9d4a <prot_map+0x1aa>
    9d2a:	69 6e 20 66 73 74 61 	imul   $0x61747366,0x20(%rsi),%ebp
    9d31:	74 00                	je     9d33 <prot_map+0x193>
    9d33:	65 6c                	gs insb (%dx),%es:(%rdi)
    9d35:	66 20 6d 6d          	data16 and %ch,0x6d(%rbp)
    9d39:	61                   	(bad)  
    9d3a:	70 20                	jo     9d5c <prot_map+0x1bc>
    9d3c:	66 61                	data16 (bad) 
    9d3e:	69 6c 65 64 00 00 00 	imul   $0x0,0x64(%rbp,%riz,2),%ebp
    9d45:	00 
    9d46:	00 00                	add    %al,(%rax)
    9d48:	54                   	push   %rsp
    9d49:	72 79                	jb     9dc4 <prot_map+0x224>
    9d4b:	69 6e 67 20 74 6f 20 	imul   $0x206f7420,0x67(%rsi),%ebp
    9d52:	72 65                	jb     9db9 <prot_map+0x219>
    9d54:	61                   	(bad)  
    9d55:	64 20 63 6c          	and    %ah,%fs:0x6c(%rbx)
    9d59:	6f                   	outsl  %ds:(%rsi),(%dx)
    9d5a:	73 65                	jae    9dc1 <prot_map+0x221>
    9d5c:	64 20 66 69          	and    %ah,%fs:0x69(%rsi)
    9d60:	6c                   	insb   (%dx),%es:(%rdi)
    9d61:	65 20 25 73 0a 00 00 	and    %ah,%gs:0xa73(%rip)        # a7db <__FRAME_END__+0x24f>
    9d68:	77 72                	ja     9ddc <prot_map+0x23c>
    9d6a:	6f                   	outsl  %ds:(%rsi),(%dx)
    9d6b:	6e                   	outsb  %ds:(%rsi),(%dx)
    9d6c:	67 20 70 68          	and    %dh,0x68(%eax)
    9d70:	6f                   	outsl  %ds:(%rsi),(%dx)
    9d71:	66 66 2c 20          	data16 data16 sub $0x20,%al
    9d75:	70 68                	jo     9ddf <prot_map+0x23f>
    9d77:	6f                   	outsl  %ds:(%rsi),(%dx)
    9d78:	66 66 3d 20 25       	data16 cmp $0x2520,%ax
    9d7d:	6c                   	insb   (%dx),%es:(%rdi)
    9d7e:	75 2c                	jne    9dac <prot_map+0x20c>
    9d80:	20 66 69             	and    %ah,0x69(%rsi)
    9d83:	6c                   	insb   (%dx),%es:(%rdi)
    9d84:	65 20 73 69          	and    %dh,%gs:0x69(%rbx)
    9d88:	7a 65                	jp     9def <prot_map+0x24f>
    9d8a:	20 3d 20 25 6c 75    	and    %bh,0x756c2520(%rip)        # 756cc2b0 <_end+0x756bf0f0>
    9d90:	0a 00                	or     (%rax),%al
    9d92:	00 00                	add    %al,(%rax)
    9d94:	00 00                	add    %al,(%rax)
    9d96:	00 00                	add    %al,(%rax)
    9d98:	70 68                	jo     9e02 <prot_map+0x262>
    9d9a:	64 72 73             	fs jb  9e10 <prot_map+0x270>
    9d9d:	7a 20                	jp     9dbf <prot_map+0x21f>
    9d9f:	6e                   	outsb  %ds:(%rsi),(%dx)
    9da0:	6f                   	outsl  %ds:(%rsi),(%dx)
    9da1:	74 20                	je     9dc3 <prot_map+0x223>
    9da3:	77 69                	ja     9e0e <prot_map+0x26e>
    9da5:	74 68                	je     9e0f <prot_map+0x26f>
    9da7:	69 6e 20 6c 69 6d 69 	imul   $0x696d696c,0x20(%rsi),%ebp
    9dae:	74 73                	je     9e23 <prot_map+0x283>
    9db0:	2e 20 70 68          	and    %dh,%cs:0x68(%rax)
    9db4:	64 72 73             	fs jb  9e2a <prot_map+0x28a>
    9db7:	7a 20                	jp     9dd9 <prot_map+0x239>
    9db9:	3d 20 30 78 25       	cmp    $0x25783020,%eax
    9dbe:	30 34 58             	xor    %dh,(%rax,%rbx,2)
    9dc1:	0a 00                	or     (%rax),%al
    9dc3:	75 6e                	jne    9e33 <prot_map+0x293>
    9dc5:	65 78 70             	gs js  9e38 <prot_map+0x298>
    9dc8:	65 63 74 65 64       	movslq %gs:0x64(%rbp,%riz,2),%esi
    9dcd:	00 6e 6f             	add    %ch,0x6f(%rsi)
    9dd0:	74 20                	je     9df2 <prot_map+0x252>
    9dd2:	65 78 70             	gs js  9e45 <prot_map+0x2a5>
    9dd5:	65 63 74 65 64       	movslq %gs:0x64(%rbp,%riz,2),%esi
    9dda:	00 00                	add    %al,(%rax)
    9ddc:	00 00                	add    %al,(%rax)
    9dde:	00 00                	add    %al,(%rax)
    9de0:	73 68                	jae    9e4a <prot_map+0x2aa>
    9de2:	64 72 65             	fs jb  9e4a <prot_map+0x2aa>
    9de5:	6e                   	outsb  %ds:(%rsi),(%dx)
    9de6:	74 73                	je     9e5b <prot_map+0x2bb>
    9de8:	69 7a 65 20 6e 6f 74 	imul   $0x746f6e20,0x65(%rdx),%edi
    9def:	20 77 69             	and    %dh,0x69(%rdi)
    9df2:	74 68                	je     9e5c <prot_map+0x2bc>
    9df4:	69 6e 20 6c 69 6d 69 	imul   $0x696d696c,0x20(%rsi),%ebp
    9dfb:	74 73                	je     9e70 <prot_map+0x2d0>
    9dfd:	2e 20 73 68          	and    %dh,%cs:0x68(%rbx)
    9e01:	64 72 65             	fs jb  9e69 <prot_map+0x2c9>
    9e04:	6e                   	outsb  %ds:(%rsi),(%dx)
    9e05:	74 73                	je     9e7a <prot_map+0x2da>
    9e07:	69 7a 65 20 3d 20 30 	imul   $0x30203d20,0x65(%rdx),%edi
    9e0e:	78 25                	js     9e35 <prot_map+0x295>
    9e10:	30 34 58             	xor    %dh,(%rax,%rbx,2)
    9e13:	0a 00                	or     (%rax),%al
    9e15:	73 68                	jae    9e7f <prot_map+0x2df>
    9e17:	73 74                	jae    9e8d <prot_map+0x2ed>
    9e19:	72 6e                	jb     9e89 <prot_map+0x2e9>
    9e1b:	64 78 20             	fs js  9e3e <prot_map+0x29e>
    9e1e:	6e                   	outsb  %ds:(%rsi),(%dx)
    9e1f:	6f                   	outsl  %ds:(%rsi),(%dx)
    9e20:	74 20                	je     9e42 <prot_map+0x2a2>
    9e22:	69 6e 20 74 61 62 6c 	imul   $0x6c626174,0x20(%rsi),%ebp
    9e29:	65 20 72 61          	and    %dh,%gs:0x61(%rdx)
    9e2d:	6e                   	outsb  %ds:(%rsi),(%dx)
    9e2e:	67 65 00 00          	add    %al,%gs:(%eax)
    9e32:	00 00                	add    %al,(%rax)
    9e34:	00 00                	add    %al,(%rax)
    9e36:	00 00                	add    %al,(%rax)
    9e38:	73 68                	jae    9ea2 <__GNU_EH_FRAME_HDR+0xa>
    9e3a:	6e                   	outsb  %ds:(%rsi),(%dx)
    9e3b:	75 6d                	jne    9eaa <__GNU_EH_FRAME_HDR+0x12>
    9e3d:	20 6e 6f             	and    %ch,0x6f(%rsi)
    9e40:	74 20                	je     9e62 <prot_map+0x2c2>
    9e42:	77 69                	ja     9ead <__GNU_EH_FRAME_HDR+0x15>
    9e44:	74 68                	je     9eae <__GNU_EH_FRAME_HDR+0x16>
    9e46:	69 6e 20 6c 69 6d 69 	imul   $0x696d696c,0x20(%rsi),%ebp
    9e4d:	74 73                	je     9ec2 <__GNU_EH_FRAME_HDR+0x2a>
    9e4f:	2e 20 73 68          	and    %dh,%cs:0x68(%rbx)
    9e53:	6e                   	outsb  %ds:(%rsi),(%dx)
    9e54:	75 6d                	jne    9ec3 <__GNU_EH_FRAME_HDR+0x2b>
    9e56:	20 3d 20 30 78 25    	and    %bh,0x25783020(%rip)        # 2578ce7c <_end+0x2577fcbc>
    9e5c:	30 34 58             	xor    %dh,(%rax,%rbx,2)
    9e5f:	0a 00                	or     (%rax),%al
    9e61:	00 00                	add    %al,(%rax)
    9e63:	00 00                	add    %al,(%rax)
    9e65:	00 00                	add    %al,(%rax)
    9e67:	00 73 68             	add    %dh,0x68(%rbx)
    9e6a:	65 6e                	outsb  %gs:(%rsi),(%dx)
    9e6c:	74 73                	je     9ee1 <__GNU_EH_FRAME_HDR+0x49>
    9e6e:	69 7a 65 20 21 3d 20 	imul   $0x203d2120,0x65(%rdx),%edi
    9e75:	73 69                	jae    9ee0 <__GNU_EH_FRAME_HDR+0x48>
    9e77:	7a 65                	jp     9ede <__GNU_EH_FRAME_HDR+0x46>
    9e79:	6f                   	outsl  %ds:(%rsi),(%dx)
    9e7a:	66 28 45 6c          	data16 sub %al,0x6c(%rbp)
    9e7e:	66 36 34 5f          	data16 ss xor $0x5f,%al
    9e82:	53                   	push   %rbx
    9e83:	68 64 72 29 2c       	pushq  $0x2c297264
    9e88:	20 73 74             	and    %dh,0x74(%rbx)
    9e8b:	68 20 69 73 20       	pushq  $0x20736920
    9e90:	66 69 73 68 79 00    	imul   $0x79,0x68(%rbx),%si

Disassembly of section .eh_frame_hdr:

0000000000009e98 <__GNU_EH_FRAME_HDR>:
    9e98:	01 1b                	add    %ebx,(%rbx)
    9e9a:	03 3b                	add    (%rbx),%edi
    9e9c:	64 01 00             	add    %eax,%fs:(%rax)
    9e9f:	00 2b                	add    %ch,(%rbx)
    9ea1:	00 00                	add    %al,(%rax)
    9ea3:	00 88 81 ff ff 98    	add    %cl,-0x6700007f(%rax)
    9ea9:	01 00                	add    %eax,(%rax)
    9eab:	00 b8 84 ff ff c0    	add    %bh,-0x3f00007c(%rax)
    9eb1:	01 00                	add    %eax,(%rax)
    9eb3:	00 c8                	add    %cl,%al
    9eb5:	84 ff                	test   %bh,%bh
    9eb7:	ff                   	(bad)  
    9eb8:	d8 01                	fadds  (%rcx)
    9eba:	00 00                	add    %al,(%rax)
    9ebc:	e8 87 ff ff 80       	callq  ffffffff81009e48 <_end+0xffffffff80ffcc88>
    9ec1:	01 00                	add    %eax,(%rax)
    9ec3:	00 d1                	add    %dl,%cl
    9ec5:	88 ff                	mov    %bh,%bh
    9ec7:	ff f0                	push   %rax
    9ec9:	01 00                	add    %eax,(%rax)
    9ecb:	00 ed                	add    %ch,%ch
    9ecd:	88 ff                	mov    %bh,%bh
    9ecf:	ff 10                	callq  *(%rax)
    9ed1:	02 00                	add    (%rax),%al
    9ed3:	00 e7                	add    %ah,%bh
    9ed5:	8c ff                	mov    %?,%edi
    9ed7:	ff 30                	pushq  (%rax)
    9ed9:	02 00                	add    (%rax),%al
    9edb:	00 34 91             	add    %dh,(%rcx,%rdx,4)
    9ede:	ff                   	(bad)  
    9edf:	ff 50 02             	callq  *0x2(%rax)
    9ee2:	00 00                	add    %al,(%rax)
    9ee4:	66 94                	xchg   %ax,%sp
    9ee6:	ff                   	(bad)  
    9ee7:	ff 70 02             	pushq  0x2(%rax)
    9eea:	00 00                	add    %al,(%rax)
    9eec:	22 95 ff ff 90 02    	and    0x290ffff(%rbp),%dl
    9ef2:	00 00                	add    %al,(%rax)
    9ef4:	04 99                	add    $0x99,%al
    9ef6:	ff                   	(bad)  
    9ef7:	ff b0 02 00 00 d8    	pushq  -0x27fffffe(%rax)
    9efd:	99                   	cltd   
    9efe:	ff                   	(bad)  
    9eff:	ff d0                	callq  *%rax
    9f01:	02 00                	add    (%rax),%al
    9f03:	00 bd 9f ff ff f0    	add    %bh,-0xf000061(%rbp)
    9f09:	02 00                	add    (%rax),%al
    9f0b:	00 89 a4 ff ff 14    	add    %cl,0x14ffffa4(%rcx)
    9f11:	03 00                	add    (%rax),%eax
    9f13:	00 f8                	add    %bh,%al
    9f15:	a6                   	cmpsb  %es:(%rdi),%ds:(%rsi)
    9f16:	ff                   	(bad)  
    9f17:	ff 34 03             	pushq  (%rbx,%rax,1)
    9f1a:	00 00                	add    %al,(%rax)
    9f1c:	dd a9 ff ff 54 03    	(bad)  0x354ffff(%rcx)
    9f22:	00 00                	add    %al,(%rax)
    9f24:	ec                   	in     (%dx),%al
    9f25:	a9 ff ff 74 03       	test   $0x374ffff,%eax
    9f2a:	00 00                	add    %al,(%rax)
    9f2c:	77 b0                	ja     9ede <__GNU_EH_FRAME_HDR+0x46>
    9f2e:	ff                   	(bad)  
    9f2f:	ff 94 03 00 00 ca b4 	callq  *-0x4b360000(%rbx,%rax,1)
    9f36:	ff                   	(bad)  
    9f37:	ff b4 03 00 00 9e b5 	pushq  -0x4a620000(%rbx,%rax,1)
    9f3e:	ff                   	(bad)  
    9f3f:	ff d4                	callq  *%rsp
    9f41:	03 00                	add    (%rax),%eax
    9f43:	00 d5                	add    %dl,%ch
    9f45:	b9 ff ff f4 03       	mov    $0x3f4ffff,%ecx
    9f4a:	00 00                	add    %al,(%rax)
    9f4c:	f0 b9 ff ff 14 04    	lock mov $0x414ffff,%ecx
    9f52:	00 00                	add    %al,(%rax)
    9f54:	12 bb ff ff 34 04    	adc    0x434ffff(%rbx),%bh
    9f5a:	00 00                	add    %al,(%rax)
    9f5c:	54                   	push   %rsp
    9f5d:	bb ff ff 54 04       	mov    $0x454ffff,%ebx
    9f62:	00 00                	add    %al,(%rax)
    9f64:	29 bc ff ff 74 04 00 	sub    %edi,0x474ff(%rdi,%rdi,8)
    9f6b:	00 71 bc             	add    %dh,-0x44(%rcx)
    9f6e:	ff                   	(bad)  
    9f6f:	ff 94 04 00 00 28 be 	callq  *-0x41d80000(%rsp,%rax,1)
    9f76:	ff                   	(bad)  
    9f77:	ff b4 04 00 00 3f c3 	pushq  -0x3cc10000(%rsp,%rax,1)
    9f7e:	ff                   	(bad)  
    9f7f:	ff d4                	callq  *%rsp
    9f81:	04 00                	add    $0x0,%al
    9f83:	00 95 c3 ff ff f4    	add    %dl,-0xb00003d(%rbp)
    9f89:	04 00                	add    $0x0,%al
    9f8b:	00 ec                	add    %ch,%ah
    9f8d:	c3                   	retq   
    9f8e:	ff                   	(bad)  
    9f8f:	ff 14 05 00 00 21 c4 	callq  *-0x3bdf0000(,%rax,1)
    9f96:	ff                   	(bad)  
    9f97:	ff                   	(bad)  
    9f98:	38 05 00 00 d7 c6    	cmp    %al,-0x39290000(%rip)        # ffffffffc6d79f9e <_end+0xffffffffc6d6cdde>
    9f9e:	ff                   	(bad)  
    9f9f:	ff 58 05             	lcall  *0x5(%rax)
    9fa2:	00 00                	add    %al,(%rax)
    9fa4:	5b                   	pop    %rbx
    9fa5:	c7                   	(bad)  
    9fa6:	ff                   	(bad)  
    9fa7:	ff                   	(bad)  
    9fa8:	78 05                	js     9faf <__GNU_EH_FRAME_HDR+0x117>
    9faa:	00 00                	add    %al,(%rax)
    9fac:	ed                   	in     (%dx),%eax
    9fad:	c7                   	(bad)  
    9fae:	ff                   	(bad)  
    9faf:	ff 98 05 00 00 70    	lcall  *0x70000005(%rax)
    9fb5:	c8 ff ff b8          	enterq $0xffff,$0xb8
    9fb9:	05 00 00 d9 c8       	add    $0xc8d90000,%eax
    9fbe:	ff                   	(bad)  
    9fbf:	ff                   	(bad)  
    9fc0:	d8 05 00 00 dd ca    	fadds  -0x35230000(%rip)        # ffffffffcadd9fc6 <_end+0xffffffffcadcce06>
    9fc6:	ff                   	(bad)  
    9fc7:	ff                   	(bad)  
    9fc8:	f8                   	clc    
    9fc9:	05 00 00 04 ce       	add    $0xce040000,%eax
    9fce:	ff                   	(bad)  
    9fcf:	ff 1c 06             	lcall  *(%rsi,%rax,1)
    9fd2:	00 00                	add    %al,(%rax)
    9fd4:	14 d8                	adc    $0xd8,%al
    9fd6:	ff                   	(bad)  
    9fd7:	ff 40 06             	incl   0x6(%rax)
    9fda:	00 00                	add    %al,(%rax)
    9fdc:	9a                   	(bad)  
    9fdd:	d8 ff                	fdivr  %st(7),%st
    9fdf:	ff 60 06             	jmpq   *0x6(%rax)
    9fe2:	00 00                	add    %al,(%rax)
    9fe4:	48 d9 ff             	rex.W fcos 
    9fe7:	ff 80 06 00 00 b8    	incl   -0x47fffffa(%rax)
    9fed:	d9 ff                	fcos   
    9fef:	ff c8                	dec    %eax
    9ff1:	06                   	(bad)  
    9ff2:	00 00                	add    %al,(%rax)
    9ff4:	c8 d9 ff ff          	enterq $0xffd9,$0xff
    9ff8:	e0 06                	loopne a000 <__GNU_EH_FRAME_HDR+0x168>
	...

Disassembly of section .eh_frame:

000000000000a000 <__FRAME_END__-0x58c>:
    a000:	14 00                	adc    $0x0,%al
    a002:	00 00                	add    %al,(%rax)
    a004:	00 00                	add    %al,(%rax)
    a006:	00 00                	add    %al,(%rax)
    a008:	01 7a 52             	add    %edi,0x52(%rdx)
    a00b:	00 01                	add    %al,(%rcx)
    a00d:	78 10                	js     a01f <__GNU_EH_FRAME_HDR+0x187>
    a00f:	01 1b                	add    %ebx,(%rbx)
    a011:	0c 07                	or     $0x7,%al
    a013:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    a019:	00 00                	add    %al,(%rax)
    a01b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a01e:	00 00                	add    %al,(%rax)
    a020:	60                   	(bad)  
    a021:	86 ff                	xchg   %bh,%bh
    a023:	ff 2f                	ljmp   *(%rdi)
    a025:	00 00                	add    %al,(%rax)
    a027:	00 00                	add    %al,(%rax)
    a029:	44 07                	rex.R (bad) 
    a02b:	10 00                	adc    %al,(%rax)
    a02d:	00 00                	add    %al,(%rax)
    a02f:	00 24 00             	add    %ah,(%rax,%rax,1)
    a032:	00 00                	add    %al,(%rax)
    a034:	34 00                	xor    $0x0,%al
    a036:	00 00                	add    %al,(%rax)
    a038:	e8 7f ff ff 30       	callq  31009fbc <_end+0x30ffcdfc>
    a03d:	03 00                	add    (%rax),%eax
    a03f:	00 00                	add    %al,(%rax)
    a041:	0e                   	(bad)  
    a042:	10 46 0e             	adc    %al,0xe(%rsi)
    a045:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    a048:	0b 77 08             	or     0x8(%rdi),%esi
    a04b:	80 00 3f             	addb   $0x3f,(%rax)
    a04e:	1a 3a                	sbb    (%rdx),%bh
    a050:	2a 33                	sub    (%rbx),%dh
    a052:	24 22                	and    $0x22,%al
    a054:	00 00                	add    %al,(%rax)
    a056:	00 00                	add    %al,(%rax)
    a058:	14 00                	adc    $0x0,%al
    a05a:	00 00                	add    %al,(%rax)
    a05c:	5c                   	pop    %rsp
    a05d:	00 00                	add    %al,(%rax)
    a05f:	00 f0                	add    %dh,%al
    a061:	82                   	(bad)  
    a062:	ff                   	(bad)  
    a063:	ff 10                	callq  *(%rax)
	...
    a06d:	00 00                	add    %al,(%rax)
    a06f:	00 14 00             	add    %dl,(%rax,%rax,1)
    a072:	00 00                	add    %al,(%rax)
    a074:	74 00                	je     a076 <__GNU_EH_FRAME_HDR+0x1de>
    a076:	00 00                	add    %al,(%rax)
    a078:	e8 82 ff ff 20       	callq  21009fff <_end+0x20ffce3f>
    a07d:	03 00                	add    (%rax),%eax
	...
    a087:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a08a:	00 00                	add    %al,(%rax)
    a08c:	8c 00                	mov    %es,(%rax)
    a08e:	00 00                	add    %al,(%rax)
    a090:	d9 86 ff ff 1c 00    	flds   0x1cffff(%rsi)
    a096:	00 00                	add    %al,(%rax)
    a098:	00 41 0e             	add    %al,0xe(%rcx)
    a09b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a0a1:	57                   	push   %rdi
    a0a2:	0c 07                	or     $0x7,%al
    a0a4:	08 00                	or     %al,(%rax)
    a0a6:	00 00                	add    %al,(%rax)
    a0a8:	1c 00                	sbb    $0x0,%al
    a0aa:	00 00                	add    %al,(%rax)
    a0ac:	ac                   	lods   %ds:(%rsi),%al
    a0ad:	00 00                	add    %al,(%rax)
    a0af:	00 d5                	add    %dl,%ch
    a0b1:	86 ff                	xchg   %bh,%bh
    a0b3:	ff                   	(bad)  
    a0b4:	fa                   	cli    
    a0b5:	03 00                	add    (%rax),%eax
    a0b7:	00 00                	add    %al,(%rax)
    a0b9:	45 0e                	rex.RB (bad) 
    a0bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a0c1:	03 f1                	add    %ecx,%esi
    a0c3:	03 0c 07             	add    (%rdi,%rax,1),%ecx
    a0c6:	08 00                	or     %al,(%rax)
    a0c8:	1c 00                	sbb    $0x0,%al
    a0ca:	00 00                	add    %al,(%rax)
    a0cc:	cc                   	int3   
    a0cd:	00 00                	add    %al,(%rax)
    a0cf:	00 af 8a ff ff 4d    	add    %ch,0x4dffff8a(%rdi)
    a0d5:	04 00                	add    $0x0,%al
    a0d7:	00 00                	add    %al,(%rax)
    a0d9:	45 0e                	rex.RB (bad) 
    a0db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a0e1:	03 44 04 0c          	add    0xc(%rsp,%rax,1),%eax
    a0e5:	07                   	(bad)  
    a0e6:	08 00                	or     %al,(%rax)
    a0e8:	1c 00                	sbb    $0x0,%al
    a0ea:	00 00                	add    %al,(%rax)
    a0ec:	ec                   	in     (%dx),%al
    a0ed:	00 00                	add    %al,(%rax)
    a0ef:	00 dc                	add    %bl,%ah
    a0f1:	8e ff                	mov    %edi,%?
    a0f3:	ff 32                	pushq  (%rdx)
    a0f5:	03 00                	add    (%rax),%eax
    a0f7:	00 00                	add    %al,(%rax)
    a0f9:	41 0e                	rex.B (bad) 
    a0fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a101:	03 2d 03 0c 07 08    	add    0x8070c03(%rip),%ebp        # 807ad0a <_end+0x806db4a>
    a107:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a10a:	00 00                	add    %al,(%rax)
    a10c:	0c 01                	or     $0x1,%al
    a10e:	00 00                	add    %al,(%rax)
    a110:	ee                   	out    %al,(%dx)
    a111:	91                   	xchg   %eax,%ecx
    a112:	ff                   	(bad)  
    a113:	ff                   	(bad)  
    a114:	bc 00 00 00 00       	mov    $0x0,%esp
    a119:	45 0e                	rex.RB (bad) 
    a11b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a121:	02 b3 0c 07 08 00    	add    0x8070c(%rbx),%dh
    a127:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a12a:	00 00                	add    %al,(%rax)
    a12c:	2c 01                	sub    $0x1,%al
    a12e:	00 00                	add    %al,(%rax)
    a130:	8a 92 ff ff e2 03    	mov    0x3e2ffff(%rdx),%dl
    a136:	00 00                	add    %al,(%rax)
    a138:	00 45 0e             	add    %al,0xe(%rbp)
    a13b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a141:	03 d9                	add    %ecx,%ebx
    a143:	03 0c 07             	add    (%rdi,%rax,1),%ecx
    a146:	08 00                	or     %al,(%rax)
    a148:	1c 00                	sbb    $0x0,%al
    a14a:	00 00                	add    %al,(%rax)
    a14c:	4c 01 00             	add    %r8,(%rax)
    a14f:	00 4c 96 ff          	add    %cl,-0x1(%rsi,%rdx,4)
    a153:	ff d4                	callq  *%rsp
    a155:	00 00                	add    %al,(%rax)
    a157:	00 00                	add    %al,(%rax)
    a159:	45 0e                	rex.RB (bad) 
    a15b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a161:	02 cb                	add    %bl,%cl
    a163:	0c 07                	or     $0x7,%al
    a165:	08 00                	or     %al,(%rax)
    a167:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a16a:	00 00                	add    %al,(%rax)
    a16c:	6c                   	insb   (%dx),%es:(%rdi)
    a16d:	01 00                	add    %eax,(%rax)
    a16f:	00 00                	add    %al,(%rax)
    a171:	97                   	xchg   %eax,%edi
    a172:	ff                   	(bad)  
    a173:	ff e5                	jmpq   *%rbp
    a175:	05 00 00 00 45       	add    $0x45000000,%eax
    a17a:	0e                   	(bad)  
    a17b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a181:	03 dc                	add    %esp,%ebx
    a183:	05 0c 07 08 00       	add    $0x8070c,%eax
    a188:	20 00                	and    %al,(%rax)
    a18a:	00 00                	add    %al,(%rax)
    a18c:	8c 01                	mov    %es,(%rcx)
    a18e:	00 00                	add    %al,(%rax)
    a190:	c5 9c ff             	(bad)
    a193:	ff cc                	dec    %esp
    a195:	04 00                	add    $0x0,%al
    a197:	00 00                	add    %al,(%rax)
    a199:	45 0e                	rex.RB (bad) 
    a19b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a1a1:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    a1a5:	be 04 0c 07 08       	mov    $0x8070c04,%esi
    a1aa:	00 00                	add    %al,(%rax)
    a1ac:	1c 00                	sbb    $0x0,%al
    a1ae:	00 00                	add    %al,(%rax)
    a1b0:	b0 01                	mov    $0x1,%al
    a1b2:	00 00                	add    %al,(%rax)
    a1b4:	6d                   	insl   (%dx),%es:(%rdi)
    a1b5:	a1 ff ff 6f 02 00 00 	movabs 0x45000000026fffff,%eax
    a1bc:	00 45 
    a1be:	0e                   	(bad)  
    a1bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a1c5:	03 66 02             	add    0x2(%rsi),%esp
    a1c8:	0c 07                	or     $0x7,%al
    a1ca:	08 00                	or     %al,(%rax)
    a1cc:	1c 00                	sbb    $0x0,%al
    a1ce:	00 00                	add    %al,(%rax)
    a1d0:	d0 01                	rolb   (%rcx)
    a1d2:	00 00                	add    %al,(%rax)
    a1d4:	bc a3 ff ff e5       	mov    $0xe5ffffa3,%esp
    a1d9:	02 00                	add    (%rax),%al
    a1db:	00 00                	add    %al,(%rax)
    a1dd:	45 0e                	rex.RB (bad) 
    a1df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a1e5:	03 dc                	add    %esp,%ebx
    a1e7:	02 0c 07             	add    (%rdi,%rax,1),%cl
    a1ea:	08 00                	or     %al,(%rax)
    a1ec:	1c 00                	sbb    $0x0,%al
    a1ee:	00 00                	add    %al,(%rax)
    a1f0:	f0 01 00             	lock add %eax,(%rax)
    a1f3:	00 81 a6 ff ff 0f    	add    %al,0xfffffa6(%rcx)
    a1f9:	00 00                	add    %al,(%rax)
    a1fb:	00 00                	add    %al,(%rax)
    a1fd:	45 0e                	rex.RB (bad) 
    a1ff:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a205:	46 0c 07             	rex.RX or $0x7,%al
    a208:	08 00                	or     %al,(%rax)
    a20a:	00 00                	add    %al,(%rax)
    a20c:	1c 00                	sbb    $0x0,%al
    a20e:	00 00                	add    %al,(%rax)
    a210:	10 02                	adc    %al,(%rdx)
    a212:	00 00                	add    %al,(%rax)
    a214:	70 a6                	jo     a1bc <__GNU_EH_FRAME_HDR+0x324>
    a216:	ff                   	(bad)  
    a217:	ff 8b 06 00 00 00    	decl   0x6(%rbx)
    a21d:	45 0e                	rex.RB (bad) 
    a21f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a225:	03 82 06 0c 07 08    	add    0x8070c06(%rdx),%eax
    a22b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a22e:	00 00                	add    %al,(%rax)
    a230:	30 02                	xor    %al,(%rdx)
    a232:	00 00                	add    %al,(%rax)
    a234:	db ac ff ff 53 04 00 	fldt   0x453ff(%rdi,%rdi,8)
    a23b:	00 00                	add    %al,(%rax)
    a23d:	45 0e                	rex.RB (bad) 
    a23f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a245:	03 4a 04             	add    0x4(%rdx),%ecx
    a248:	0c 07                	or     $0x7,%al
    a24a:	08 00                	or     %al,(%rax)
    a24c:	1c 00                	sbb    $0x0,%al
    a24e:	00 00                	add    %al,(%rax)
    a250:	50                   	push   %rax
    a251:	02 00                	add    (%rax),%al
    a253:	00 0e                	add    %cl,(%rsi)
    a255:	b1 ff                	mov    $0xff,%cl
    a257:	ff d4                	callq  *%rsp
    a259:	00 00                	add    %al,(%rax)
    a25b:	00 00                	add    %al,(%rax)
    a25d:	45 0e                	rex.RB (bad) 
    a25f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a265:	02 cb                	add    %bl,%cl
    a267:	0c 07                	or     $0x7,%al
    a269:	08 00                	or     %al,(%rax)
    a26b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a26e:	00 00                	add    %al,(%rax)
    a270:	70 02                	jo     a274 <__GNU_EH_FRAME_HDR+0x3dc>
    a272:	00 00                	add    %al,(%rax)
    a274:	c2 b1 ff             	retq   $0xffb1
    a277:	ff 37                	pushq  (%rdi)
    a279:	04 00                	add    $0x0,%al
    a27b:	00 00                	add    %al,(%rax)
    a27d:	45 0e                	rex.RB (bad) 
    a27f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a285:	03 2e                	add    (%rsi),%ebp
    a287:	04 0c                	add    $0xc,%al
    a289:	07                   	(bad)  
    a28a:	08 00                	or     %al,(%rax)
    a28c:	1c 00                	sbb    $0x0,%al
    a28e:	00 00                	add    %al,(%rax)
    a290:	90                   	nop
    a291:	02 00                	add    (%rax),%al
    a293:	00 d9                	add    %bl,%cl
    a295:	b5 ff                	mov    $0xff,%ch
    a297:	ff 1b                	lcall  *(%rbx)
    a299:	00 00                	add    %al,(%rax)
    a29b:	00 00                	add    %al,(%rax)
    a29d:	45 0e                	rex.RB (bad) 
    a29f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a2a5:	52                   	push   %rdx
    a2a6:	0c 07                	or     $0x7,%al
    a2a8:	08 00                	or     %al,(%rax)
    a2aa:	00 00                	add    %al,(%rax)
    a2ac:	1c 00                	sbb    $0x0,%al
    a2ae:	00 00                	add    %al,(%rax)
    a2b0:	b0 02                	mov    $0x2,%al
    a2b2:	00 00                	add    %al,(%rax)
    a2b4:	d4                   	(bad)  
    a2b5:	b5 ff                	mov    $0xff,%ch
    a2b7:	ff 22                	jmpq   *(%rdx)
    a2b9:	01 00                	add    %eax,(%rax)
    a2bb:	00 00                	add    %al,(%rax)
    a2bd:	45 0e                	rex.RB (bad) 
    a2bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a2c5:	03 19                	add    (%rcx),%ebx
    a2c7:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    a2ca:	08 00                	or     %al,(%rax)
    a2cc:	1c 00                	sbb    $0x0,%al
    a2ce:	00 00                	add    %al,(%rax)
    a2d0:	d0 02                	rolb   (%rdx)
    a2d2:	00 00                	add    %al,(%rax)
    a2d4:	d6                   	(bad)  
    a2d5:	b6 ff                	mov    $0xff,%dh
    a2d7:	ff 42 00             	incl   0x0(%rdx)
    a2da:	00 00                	add    %al,(%rax)
    a2dc:	00 45 0e             	add    %al,0xe(%rbp)
    a2df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a2e5:	79 0c                	jns    a2f3 <__GNU_EH_FRAME_HDR+0x45b>
    a2e7:	07                   	(bad)  
    a2e8:	08 00                	or     %al,(%rax)
    a2ea:	00 00                	add    %al,(%rax)
    a2ec:	1c 00                	sbb    $0x0,%al
    a2ee:	00 00                	add    %al,(%rax)
    a2f0:	f0 02 00             	lock add (%rax),%al
    a2f3:	00 f8                	add    %bh,%al
    a2f5:	b6 ff                	mov    $0xff,%dh
    a2f7:	ff d5                	callq  *%rbp
    a2f9:	00 00                	add    %al,(%rax)
    a2fb:	00 00                	add    %al,(%rax)
    a2fd:	45 0e                	rex.RB (bad) 
    a2ff:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a305:	02 cc                	add    %ah,%cl
    a307:	0c 07                	or     $0x7,%al
    a309:	08 00                	or     %al,(%rax)
    a30b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a30e:	00 00                	add    %al,(%rax)
    a310:	10 03                	adc    %al,(%rbx)
    a312:	00 00                	add    %al,(%rax)
    a314:	ad                   	lods   %ds:(%rsi),%eax
    a315:	b7 ff                	mov    $0xff,%bh
    a317:	ff 48 00             	decl   0x0(%rax)
    a31a:	00 00                	add    %al,(%rax)
    a31c:	00 45 0e             	add    %al,0xe(%rbp)
    a31f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a325:	7f 0c                	jg     a333 <__GNU_EH_FRAME_HDR+0x49b>
    a327:	07                   	(bad)  
    a328:	08 00                	or     %al,(%rax)
    a32a:	00 00                	add    %al,(%rax)
    a32c:	1c 00                	sbb    $0x0,%al
    a32e:	00 00                	add    %al,(%rax)
    a330:	30 03                	xor    %al,(%rbx)
    a332:	00 00                	add    %al,(%rax)
    a334:	d5                   	(bad)  
    a335:	b7 ff                	mov    $0xff,%bh
    a337:	ff b7 01 00 00 00    	pushq  0x1(%rdi)
    a33d:	45 0e                	rex.RB (bad) 
    a33f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a345:	03 ae 01 0c 07 08    	add    0x8070c01(%rsi),%ebp
    a34b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a34e:	00 00                	add    %al,(%rax)
    a350:	50                   	push   %rax
    a351:	03 00                	add    (%rax),%eax
    a353:	00 6c b9 ff          	add    %ch,-0x1(%rcx,%rdi,4)
    a357:	ff 17                	callq  *(%rdi)
    a359:	05 00 00 00 45       	add    $0x45000000,%eax
    a35e:	0e                   	(bad)  
    a35f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a365:	03 0e                	add    (%rsi),%ecx
    a367:	05 0c 07 08 00       	add    $0x8070c,%eax
    a36c:	1c 00                	sbb    $0x0,%al
    a36e:	00 00                	add    %al,(%rax)
    a370:	70 03                	jo     a375 <__GNU_EH_FRAME_HDR+0x4dd>
    a372:	00 00                	add    %al,(%rax)
    a374:	63 be ff ff 56 00    	movslq 0x56ffff(%rsi),%edi
    a37a:	00 00                	add    %al,(%rax)
    a37c:	00 45 0e             	add    %al,0xe(%rbp)
    a37f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a385:	02 4d 0c             	add    0xc(%rbp),%cl
    a388:	07                   	(bad)  
    a389:	08 00                	or     %al,(%rax)
    a38b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a38e:	00 00                	add    %al,(%rax)
    a390:	90                   	nop
    a391:	03 00                	add    (%rax),%eax
    a393:	00 99 be ff ff 57    	add    %bl,0x57ffffbe(%rcx)
    a399:	00 00                	add    %al,(%rax)
    a39b:	00 00                	add    %al,(%rax)
    a39d:	45 0e                	rex.RB (bad) 
    a39f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a3a5:	02 4e 0c             	add    0xc(%rsi),%cl
    a3a8:	07                   	(bad)  
    a3a9:	08 00                	or     %al,(%rax)
    a3ab:	00 20                	add    %ah,(%rax)
    a3ad:	00 00                	add    %al,(%rax)
    a3af:	00 b0 03 00 00 d0    	add    %dh,-0x2ffffffd(%rax)
    a3b5:	be ff ff 35 00       	mov    $0x35ffff,%esi
    a3ba:	00 00                	add    %al,(%rax)
    a3bc:	00 45 0e             	add    %al,0xe(%rbp)
    a3bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a3c5:	6c                   	insb   (%dx),%es:(%rdi)
    a3c6:	0c 07                	or     $0x7,%al
    a3c8:	08 00                	or     %al,(%rax)
    a3ca:	00 00                	add    %al,(%rax)
    a3cc:	00 00                	add    %al,(%rax)
    a3ce:	00 00                	add    %al,(%rax)
    a3d0:	1c 00                	sbb    $0x0,%al
    a3d2:	00 00                	add    %al,(%rax)
    a3d4:	d4                   	(bad)  
    a3d5:	03 00                	add    (%rax),%eax
    a3d7:	00 e1                	add    %ah,%cl
    a3d9:	be ff ff b6 02       	mov    $0x2b6ffff,%esi
    a3de:	00 00                	add    %al,(%rax)
    a3e0:	00 45 0e             	add    %al,0xe(%rbp)
    a3e3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a3e9:	03 ad 02 0c 07 08    	add    0x8070c02(%rbp),%ebp
    a3ef:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a3f2:	00 00                	add    %al,(%rax)
    a3f4:	f4                   	hlt    
    a3f5:	03 00                	add    (%rax),%eax
    a3f7:	00 77 c1             	add    %dh,-0x3f(%rdi)
    a3fa:	ff                   	(bad)  
    a3fb:	ff 84 00 00 00 00 45 	incl   0x45000000(%rax,%rax,1)
    a402:	0e                   	(bad)  
    a403:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a409:	02 7b 0c             	add    0xc(%rbx),%bh
    a40c:	07                   	(bad)  
    a40d:	08 00                	or     %al,(%rax)
    a40f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a412:	00 00                	add    %al,(%rax)
    a414:	14 04                	adc    $0x4,%al
    a416:	00 00                	add    %al,(%rax)
    a418:	db c1                	fcmovnb %st(1),%st
    a41a:	ff                   	(bad)  
    a41b:	ff 92 00 00 00 00    	callq  *0x0(%rdx)
    a421:	45 0e                	rex.RB (bad) 
    a423:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a429:	02 89 0c 07 08 00    	add    0x8070c(%rcx),%cl
    a42f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a432:	00 00                	add    %al,(%rax)
    a434:	34 04                	xor    $0x4,%al
    a436:	00 00                	add    %al,(%rax)
    a438:	4d c2 ff ff          	rex.WRB retq $0xffff
    a43c:	83 00 00             	addl   $0x0,(%rax)
    a43f:	00 00                	add    %al,(%rax)
    a441:	45 0e                	rex.RB (bad) 
    a443:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a449:	02 7a 0c             	add    0xc(%rdx),%bh
    a44c:	07                   	(bad)  
    a44d:	08 00                	or     %al,(%rax)
    a44f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a452:	00 00                	add    %al,(%rax)
    a454:	54                   	push   %rsp
    a455:	04 00                	add    $0x0,%al
    a457:	00 b0 c2 ff ff 69    	add    %dh,0x69ffffc2(%rax)
    a45d:	00 00                	add    %al,(%rax)
    a45f:	00 00                	add    %al,(%rax)
    a461:	45 0e                	rex.RB (bad) 
    a463:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a469:	02 60 0c             	add    0xc(%rax),%ah
    a46c:	07                   	(bad)  
    a46d:	08 00                	or     %al,(%rax)
    a46f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a472:	00 00                	add    %al,(%rax)
    a474:	74 04                	je     a47a <__GNU_EH_FRAME_HDR+0x5e2>
    a476:	00 00                	add    %al,(%rax)
    a478:	f9                   	stc    
    a479:	c2 ff ff             	retq   $0xffff
    a47c:	04 02                	add    $0x2,%al
    a47e:	00 00                	add    %al,(%rax)
    a480:	00 45 0e             	add    %al,0xe(%rbp)
    a483:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a489:	03 fb                	add    %ebx,%edi
    a48b:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    a48e:	08 00                	or     %al,(%rax)
    a490:	20 00                	and    %al,(%rax)
    a492:	00 00                	add    %al,(%rax)
    a494:	94                   	xchg   %eax,%esp
    a495:	04 00                	add    $0x0,%al
    a497:	00 dd                	add    %bl,%ch
    a499:	c4                   	(bad)  
    a49a:	ff                   	(bad)  
    a49b:	ff 27                	jmpq   *(%rdi)
    a49d:	03 00                	add    (%rax),%eax
    a49f:	00 00                	add    %al,(%rax)
    a4a1:	45 0e                	rex.RB (bad) 
    a4a3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a4a9:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    a4ad:	19 03                	sbb    %eax,(%rbx)
    a4af:	0c 07                	or     $0x7,%al
    a4b1:	08 00                	or     %al,(%rax)
    a4b3:	00 20                	add    %ah,(%rax)
    a4b5:	00 00                	add    %al,(%rax)
    a4b7:	00 b8 04 00 00 e0    	add    %bh,-0x1ffffffc(%rax)
    a4bd:	c7                   	(bad)  
    a4be:	ff                   	(bad)  
    a4bf:	ff 10                	callq  *(%rax)
    a4c1:	0a 00                	or     (%rax),%al
    a4c3:	00 00                	add    %al,(%rax)
    a4c5:	45 0e                	rex.RB (bad) 
    a4c7:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a4cd:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    a4d1:	02 0a                	add    (%rdx),%cl
    a4d3:	0c 07                	or     $0x7,%al
    a4d5:	08 00                	or     %al,(%rax)
    a4d7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a4da:	00 00                	add    %al,(%rax)
    a4dc:	dc 04 00             	faddl  (%rax,%rax,1)
    a4df:	00 cc                	add    %cl,%ah
    a4e1:	d1 ff                	sar    %edi
    a4e3:	ff 86 00 00 00 00    	incl   0x0(%rsi)
    a4e9:	45 0e                	rex.RB (bad) 
    a4eb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a4f1:	02 7d 0c             	add    0xc(%rbp),%bh
    a4f4:	07                   	(bad)  
    a4f5:	08 00                	or     %al,(%rax)
    a4f7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    a4fa:	00 00                	add    %al,(%rax)
    a4fc:	fc                   	cld    
    a4fd:	04 00                	add    $0x0,%al
    a4ff:	00 32                	add    %dh,(%rdx)
    a501:	d2 ff                	sar    %cl,%bh
    a503:	ff a7 00 00 00 00    	jmpq   *0x0(%rdi)
    a509:	45 0e                	rex.RB (bad) 
    a50b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    a511:	02 9e 0c 07 08 00    	add    0x8070c(%rsi),%bl
    a517:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    a51b:	00 1c 05 00 00 c0 d2 	add    %bl,-0x2d400000(,%rax,1)
    a522:	ff                   	(bad)  
    a523:	ff 65 00             	jmpq   *0x0(%rbp)
    a526:	00 00                	add    %al,(%rax)
    a528:	00 46 0e             	add    %al,0xe(%rsi)
    a52b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    a531:	8e 03                	mov    (%rbx),%es
    a533:	45 0e                	rex.RB (bad) 
    a535:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    a53b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630b385 <_end+0xffffffff862fe1c5>
    a541:	06                   	(bad)  
    a542:	48 0e                	rex.W (bad) 
    a544:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    a54a:	6e                   	outsb  %ds:(%rsi),(%dx)
    a54b:	0e                   	(bad)  
    a54c:	38 41 0e             	cmp    %al,0xe(%rcx)
    a54f:	30 41 0e             	xor    %al,0xe(%rcx)
    a552:	28 42 0e             	sub    %al,0xe(%rdx)
    a555:	20 42 0e             	and    %al,0xe(%rdx)
    a558:	18 42 0e             	sbb    %al,0xe(%rdx)
    a55b:	10 42 0e             	adc    %al,0xe(%rdx)
    a55e:	08 00                	or     %al,(%rax)
    a560:	14 00                	adc    $0x0,%al
    a562:	00 00                	add    %al,(%rax)
    a564:	64 05 00 00 e8 d2    	fs add $0xd2e80000,%eax
    a56a:	ff                   	(bad)  
    a56b:	ff 05 00 00 00 00    	incl   0x0(%rip)        # a571 <__GNU_EH_FRAME_HDR+0x6d9>
    a571:	00 00                	add    %al,(%rax)
    a573:	00 00                	add    %al,(%rax)
    a575:	00 00                	add    %al,(%rax)
    a577:	00 10                	add    %dl,(%rax)
    a579:	00 00                	add    %al,(%rax)
    a57b:	00 7c 05 00          	add    %bh,0x0(%rbp,%rax,1)
    a57f:	00 e0                	add    %ah,%al
    a581:	d2 ff                	sar    %cl,%bh
    a583:	ff 13                	callq  *(%rbx)
    a585:	00 00                	add    %al,(%rax)
    a587:	00 00                	add    %al,(%rax)
    a589:	00 00                	add    %al,(%rax)
	...

000000000000a58c <__FRAME_END__>:
    a58c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

000000000000bc20 <__frame_dummy_init_array_entry>:
    bc20:	60                   	(bad)  
    bc21:	27                   	(bad)  
    bc22:	00 00                	add    %al,(%rax)
    bc24:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

000000000000bc28 <__do_global_dtors_aux_fini_array_entry>:
    bc28:	20 27                	and    %ah,(%rdi)
    bc2a:	00 00                	add    %al,(%rax)
    bc2c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

000000000000bc30 <_DYNAMIC>:
    bc30:	01 00                	add    %eax,(%rax)
    bc32:	00 00                	add    %al,(%rax)
    bc34:	00 00                	add    %al,(%rax)
    bc36:	00 00                	add    %al,(%rax)
    bc38:	01 00                	add    %eax,(%rax)
    bc3a:	00 00                	add    %al,(%rax)
    bc3c:	00 00                	add    %al,(%rax)
    bc3e:	00 00                	add    %al,(%rax)
    bc40:	01 00                	add    %eax,(%rax)
    bc42:	00 00                	add    %al,(%rax)
    bc44:	00 00                	add    %al,(%rax)
    bc46:	00 00                	add    %al,(%rax)
    bc48:	9e                   	sahf   
    bc49:	00 00                	add    %al,(%rax)
    bc4b:	00 00                	add    %al,(%rax)
    bc4d:	00 00                	add    %al,(%rax)
    bc4f:	00 0c 00             	add    %cl,(%rax,%rax,1)
    bc52:	00 00                	add    %al,(%rax)
    bc54:	00 00                	add    %al,(%rax)
    bc56:	00 00                	add    %al,(%rax)
    bc58:	00 20                	add    %ah,(%rax)
    bc5a:	00 00                	add    %al,(%rax)
    bc5c:	00 00                	add    %al,(%rax)
    bc5e:	00 00                	add    %al,(%rax)
    bc60:	0d 00 00 00 00       	or     $0x0,%eax
    bc65:	00 00                	add    %al,(%rax)
    bc67:	00 74 78 00          	add    %dh,0x0(%rax,%rdi,2)
    bc6b:	00 00                	add    %al,(%rax)
    bc6d:	00 00                	add    %al,(%rax)
    bc6f:	00 19                	add    %bl,(%rcx)
    bc71:	00 00                	add    %al,(%rax)
    bc73:	00 00                	add    %al,(%rax)
    bc75:	00 00                	add    %al,(%rax)
    bc77:	00 20                	add    %ah,(%rax)
    bc79:	bc 00 00 00 00       	mov    $0x0,%esp
    bc7e:	00 00                	add    %al,(%rax)
    bc80:	1b 00                	sbb    (%rax),%eax
    bc82:	00 00                	add    %al,(%rax)
    bc84:	00 00                	add    %al,(%rax)
    bc86:	00 00                	add    %al,(%rax)
    bc88:	08 00                	or     %al,(%rax)
    bc8a:	00 00                	add    %al,(%rax)
    bc8c:	00 00                	add    %al,(%rax)
    bc8e:	00 00                	add    %al,(%rax)
    bc90:	1a 00                	sbb    (%rax),%al
    bc92:	00 00                	add    %al,(%rax)
    bc94:	00 00                	add    %al,(%rax)
    bc96:	00 00                	add    %al,(%rax)
    bc98:	28 bc 00 00 00 00 00 	sub    %bh,0x0(%rax,%rax,1)
    bc9f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    bca2:	00 00                	add    %al,(%rax)
    bca4:	00 00                	add    %al,(%rax)
    bca6:	00 00                	add    %al,(%rax)
    bca8:	08 00                	or     %al,(%rax)
    bcaa:	00 00                	add    %al,(%rax)
    bcac:	00 00                	add    %al,(%rax)
    bcae:	00 00                	add    %al,(%rax)
    bcb0:	f5                   	cmc    
    bcb1:	fe                   	(bad)  
    bcb2:	ff 6f 00             	ljmp   *0x0(%rdi)
    bcb5:	00 00                	add    %al,(%rax)
    bcb7:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    bcbd:	00 00                	add    %al,(%rax)
    bcbf:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # bcc5 <_DYNAMIC+0x95>
    bcc5:	00 00                	add    %al,(%rax)
    bcc7:	00 08                	add    %cl,(%rax)
    bcc9:	09 00                	or     %eax,(%rax)
    bccb:	00 00                	add    %al,(%rax)
    bccd:	00 00                	add    %al,(%rax)
    bccf:	00 06                	add    %al,(%rsi)
    bcd1:	00 00                	add    %al,(%rax)
    bcd3:	00 00                	add    %al,(%rax)
    bcd5:	00 00                	add    %al,(%rax)
    bcd7:	00 c8                	add    %cl,%al
    bcd9:	03 00                	add    (%rax),%eax
    bcdb:	00 00                	add    %al,(%rax)
    bcdd:	00 00                	add    %al,(%rax)
    bcdf:	00 0a                	add    %cl,(%rdx)
    bce1:	00 00                	add    %al,(%rax)
    bce3:	00 00                	add    %al,(%rax)
    bce5:	00 00                	add    %al,(%rax)
    bce7:	00 29                	add    %ch,(%rcx)
    bce9:	02 00                	add    (%rax),%al
    bceb:	00 00                	add    %al,(%rax)
    bced:	00 00                	add    %al,(%rax)
    bcef:	00 0b                	add    %cl,(%rbx)
    bcf1:	00 00                	add    %al,(%rax)
    bcf3:	00 00                	add    %al,(%rax)
    bcf5:	00 00                	add    %al,(%rax)
    bcf7:	00 18                	add    %bl,(%rax)
    bcf9:	00 00                	add    %al,(%rax)
    bcfb:	00 00                	add    %al,(%rax)
    bcfd:	00 00                	add    %al,(%rax)
    bcff:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # bd05 <_DYNAMIC+0xd5>
	...
    bd0d:	00 00                	add    %al,(%rax)
    bd0f:	00 03                	add    %al,(%rbx)
    bd11:	00 00                	add    %al,(%rax)
    bd13:	00 00                	add    %al,(%rax)
    bd15:	00 00                	add    %al,(%rax)
    bd17:	00 30                	add    %dh,(%rax)
    bd19:	be 00 00 00 00       	mov    $0x0,%esi
    bd1e:	00 00                	add    %al,(%rax)
    bd20:	02 00                	add    (%rax),%al
    bd22:	00 00                	add    %al,(%rax)
    bd24:	00 00                	add    %al,(%rax)
    bd26:	00 00                	add    %al,(%rax)
    bd28:	b0 04                	mov    $0x4,%al
    bd2a:	00 00                	add    %al,(%rax)
    bd2c:	00 00                	add    %al,(%rax)
    bd2e:	00 00                	add    %al,(%rax)
    bd30:	14 00                	adc    $0x0,%al
    bd32:	00 00                	add    %al,(%rax)
    bd34:	00 00                	add    %al,(%rax)
    bd36:	00 00                	add    %al,(%rax)
    bd38:	07                   	(bad)  
    bd39:	00 00                	add    %al,(%rax)
    bd3b:	00 00                	add    %al,(%rax)
    bd3d:	00 00                	add    %al,(%rax)
    bd3f:	00 17                	add    %dl,(%rdi)
    bd41:	00 00                	add    %al,(%rax)
    bd43:	00 00                	add    %al,(%rax)
    bd45:	00 00                	add    %al,(%rax)
    bd47:	00 d8                	add    %bl,%al
    bd49:	0c 00                	or     $0x0,%al
    bd4b:	00 00                	add    %al,(%rax)
    bd4d:	00 00                	add    %al,(%rax)
    bd4f:	00 07                	add    %al,(%rdi)
    bd51:	00 00                	add    %al,(%rax)
    bd53:	00 00                	add    %al,(%rax)
    bd55:	00 00                	add    %al,(%rax)
    bd57:	00 18                	add    %bl,(%rax)
    bd59:	0c 00                	or     $0x0,%al
    bd5b:	00 00                	add    %al,(%rax)
    bd5d:	00 00                	add    %al,(%rax)
    bd5f:	00 08                	add    %cl,(%rax)
    bd61:	00 00                	add    %al,(%rax)
    bd63:	00 00                	add    %al,(%rax)
    bd65:	00 00                	add    %al,(%rax)
    bd67:	00 c0                	add    %al,%al
    bd69:	00 00                	add    %al,(%rax)
    bd6b:	00 00                	add    %al,(%rax)
    bd6d:	00 00                	add    %al,(%rax)
    bd6f:	00 09                	add    %cl,(%rcx)
    bd71:	00 00                	add    %al,(%rax)
    bd73:	00 00                	add    %al,(%rax)
    bd75:	00 00                	add    %al,(%rax)
    bd77:	00 18                	add    %bl,(%rax)
    bd79:	00 00                	add    %al,(%rax)
    bd7b:	00 00                	add    %al,(%rax)
    bd7d:	00 00                	add    %al,(%rax)
    bd7f:	00 1e                	add    %bl,(%rsi)
    bd81:	00 00                	add    %al,(%rax)
    bd83:	00 00                	add    %al,(%rax)
    bd85:	00 00                	add    %al,(%rax)
    bd87:	00 08                	add    %cl,(%rax)
    bd89:	00 00                	add    %al,(%rax)
    bd8b:	00 00                	add    %al,(%rax)
    bd8d:	00 00                	add    %al,(%rax)
    bd8f:	00 fb                	add    %bh,%bl
    bd91:	ff                   	(bad)  
    bd92:	ff 6f 00             	ljmp   *0x0(%rdi)
    bd95:	00 00                	add    %al,(%rax)
    bd97:	00 01                	add    %al,(%rcx)
    bd99:	00 00                	add    %al,(%rax)
    bd9b:	08 00                	or     %al,(%rax)
    bd9d:	00 00                	add    %al,(%rax)
    bd9f:	00 fe                	add    %bh,%dh
    bda1:	ff                   	(bad)  
    bda2:	ff 6f 00             	ljmp   *0x0(%rdi)
    bda5:	00 00                	add    %al,(%rax)
    bda7:	00 a8 0b 00 00 00    	add    %ch,0xb(%rax)
    bdad:	00 00                	add    %al,(%rax)
    bdaf:	00 ff                	add    %bh,%bh
    bdb1:	ff                   	(bad)  
    bdb2:	ff 6f 00             	ljmp   *0x0(%rdi)
    bdb5:	00 00                	add    %al,(%rax)
    bdb7:	00 02                	add    %al,(%rdx)
    bdb9:	00 00                	add    %al,(%rax)
    bdbb:	00 00                	add    %al,(%rax)
    bdbd:	00 00                	add    %al,(%rax)
    bdbf:	00 f0                	add    %dh,%al
    bdc1:	ff                   	(bad)  
    bdc2:	ff 6f 00             	ljmp   *0x0(%rdi)
    bdc5:	00 00                	add    %al,(%rax)
    bdc7:	00 32                	add    %dh,(%rdx)
    bdc9:	0b 00                	or     (%rax),%eax
    bdcb:	00 00                	add    %al,(%rax)
    bdcd:	00 00                	add    %al,(%rax)
    bdcf:	00 f9                	add    %bh,%cl
    bdd1:	ff                   	(bad)  
    bdd2:	ff 6f 00             	ljmp   *0x0(%rdi)
    bdd5:	00 00                	add    %al,(%rax)
    bdd7:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

000000000000be30 <_GLOBAL_OFFSET_TABLE_>:
    be30:	30 bc 00 00 00 00 00 	xor    %bh,0x0(%rax,%rax,1)
	...
    be47:	00 30                	add    %dh,(%rax)
    be49:	20 00                	and    %al,(%rax)
    be4b:	00 00                	add    %al,(%rax)
    be4d:	00 00                	add    %al,(%rax)
    be4f:	00 40 20             	add    %al,0x20(%rax)
    be52:	00 00                	add    %al,(%rax)
    be54:	00 00                	add    %al,(%rax)
    be56:	00 00                	add    %al,(%rax)
    be58:	50                   	push   %rax
    be59:	20 00                	and    %al,(%rax)
    be5b:	00 00                	add    %al,(%rax)
    be5d:	00 00                	add    %al,(%rax)
    be5f:	00 60 20             	add    %ah,0x20(%rax)
    be62:	00 00                	add    %al,(%rax)
    be64:	00 00                	add    %al,(%rax)
    be66:	00 00                	add    %al,(%rax)
    be68:	70 20                	jo     be8a <_GLOBAL_OFFSET_TABLE_+0x5a>
    be6a:	00 00                	add    %al,(%rax)
    be6c:	00 00                	add    %al,(%rax)
    be6e:	00 00                	add    %al,(%rax)
    be70:	80 20 00             	andb   $0x0,(%rax)
    be73:	00 00                	add    %al,(%rax)
    be75:	00 00                	add    %al,(%rax)
    be77:	00 90 20 00 00 00    	add    %dl,0x20(%rax)
    be7d:	00 00                	add    %al,(%rax)
    be7f:	00 a0 20 00 00 00    	add    %ah,0x20(%rax)
    be85:	00 00                	add    %al,(%rax)
    be87:	00 b0 20 00 00 00    	add    %dh,0x20(%rax)
    be8d:	00 00                	add    %al,(%rax)
    be8f:	00 c0                	add    %al,%al
    be91:	20 00                	and    %al,(%rax)
    be93:	00 00                	add    %al,(%rax)
    be95:	00 00                	add    %al,(%rax)
    be97:	00 d0                	add    %dl,%al
    be99:	20 00                	and    %al,(%rax)
    be9b:	00 00                	add    %al,(%rax)
    be9d:	00 00                	add    %al,(%rax)
    be9f:	00 e0                	add    %ah,%al
    bea1:	20 00                	and    %al,(%rax)
    bea3:	00 00                	add    %al,(%rax)
    bea5:	00 00                	add    %al,(%rax)
    bea7:	00 f0                	add    %dh,%al
    bea9:	20 00                	and    %al,(%rax)
    beab:	00 00                	add    %al,(%rax)
    bead:	00 00                	add    %al,(%rax)
    beaf:	00 00                	add    %al,(%rax)
    beb1:	21 00                	and    %eax,(%rax)
    beb3:	00 00                	add    %al,(%rax)
    beb5:	00 00                	add    %al,(%rax)
    beb7:	00 10                	add    %dl,(%rax)
    beb9:	21 00                	and    %eax,(%rax)
    bebb:	00 00                	add    %al,(%rax)
    bebd:	00 00                	add    %al,(%rax)
    bebf:	00 20                	add    %ah,(%rax)
    bec1:	21 00                	and    %eax,(%rax)
    bec3:	00 00                	add    %al,(%rax)
    bec5:	00 00                	add    %al,(%rax)
    bec7:	00 30                	add    %dh,(%rax)
    bec9:	21 00                	and    %eax,(%rax)
    becb:	00 00                	add    %al,(%rax)
    becd:	00 00                	add    %al,(%rax)
    becf:	00 40 21             	add    %al,0x21(%rax)
    bed2:	00 00                	add    %al,(%rax)
    bed4:	00 00                	add    %al,(%rax)
    bed6:	00 00                	add    %al,(%rax)
    bed8:	50                   	push   %rax
    bed9:	21 00                	and    %eax,(%rax)
    bedb:	00 00                	add    %al,(%rax)
    bedd:	00 00                	add    %al,(%rax)
    bedf:	00 60 21             	add    %ah,0x21(%rax)
    bee2:	00 00                	add    %al,(%rax)
    bee4:	00 00                	add    %al,(%rax)
    bee6:	00 00                	add    %al,(%rax)
    bee8:	70 21                	jo     bf0b <_GLOBAL_OFFSET_TABLE_+0xdb>
    beea:	00 00                	add    %al,(%rax)
    beec:	00 00                	add    %al,(%rax)
    beee:	00 00                	add    %al,(%rax)
    bef0:	80 21 00             	andb   $0x0,(%rcx)
    bef3:	00 00                	add    %al,(%rax)
    bef5:	00 00                	add    %al,(%rax)
    bef7:	00 90 21 00 00 00    	add    %dl,0x21(%rax)
    befd:	00 00                	add    %al,(%rax)
    beff:	00 a0 21 00 00 00    	add    %ah,0x21(%rax)
    bf05:	00 00                	add    %al,(%rax)
    bf07:	00 b0 21 00 00 00    	add    %dh,0x21(%rax)
    bf0d:	00 00                	add    %al,(%rax)
    bf0f:	00 c0                	add    %al,%al
    bf11:	21 00                	and    %eax,(%rax)
    bf13:	00 00                	add    %al,(%rax)
    bf15:	00 00                	add    %al,(%rax)
    bf17:	00 d0                	add    %dl,%al
    bf19:	21 00                	and    %eax,(%rax)
    bf1b:	00 00                	add    %al,(%rax)
    bf1d:	00 00                	add    %al,(%rax)
    bf1f:	00 e0                	add    %ah,%al
    bf21:	21 00                	and    %eax,(%rax)
    bf23:	00 00                	add    %al,(%rax)
    bf25:	00 00                	add    %al,(%rax)
    bf27:	00 f0                	add    %dh,%al
    bf29:	21 00                	and    %eax,(%rax)
    bf2b:	00 00                	add    %al,(%rax)
    bf2d:	00 00                	add    %al,(%rax)
    bf2f:	00 00                	add    %al,(%rax)
    bf31:	22 00                	and    (%rax),%al
    bf33:	00 00                	add    %al,(%rax)
    bf35:	00 00                	add    %al,(%rax)
    bf37:	00 10                	add    %dl,(%rax)
    bf39:	22 00                	and    (%rax),%al
    bf3b:	00 00                	add    %al,(%rax)
    bf3d:	00 00                	add    %al,(%rax)
    bf3f:	00 20                	add    %ah,(%rax)
    bf41:	22 00                	and    (%rax),%al
    bf43:	00 00                	add    %al,(%rax)
    bf45:	00 00                	add    %al,(%rax)
    bf47:	00 30                	add    %dh,(%rax)
    bf49:	22 00                	and    (%rax),%al
    bf4b:	00 00                	add    %al,(%rax)
    bf4d:	00 00                	add    %al,(%rax)
    bf4f:	00 40 22             	add    %al,0x22(%rax)
    bf52:	00 00                	add    %al,(%rax)
    bf54:	00 00                	add    %al,(%rax)
    bf56:	00 00                	add    %al,(%rax)
    bf58:	50                   	push   %rax
    bf59:	22 00                	and    (%rax),%al
    bf5b:	00 00                	add    %al,(%rax)
    bf5d:	00 00                	add    %al,(%rax)
    bf5f:	00 60 22             	add    %ah,0x22(%rax)
    bf62:	00 00                	add    %al,(%rax)
    bf64:	00 00                	add    %al,(%rax)
    bf66:	00 00                	add    %al,(%rax)
    bf68:	70 22                	jo     bf8c <_GLOBAL_OFFSET_TABLE_+0x15c>
    bf6a:	00 00                	add    %al,(%rax)
    bf6c:	00 00                	add    %al,(%rax)
    bf6e:	00 00                	add    %al,(%rax)
    bf70:	80 22 00             	andb   $0x0,(%rdx)
    bf73:	00 00                	add    %al,(%rax)
    bf75:	00 00                	add    %al,(%rax)
    bf77:	00 90 22 00 00 00    	add    %dl,0x22(%rax)
    bf7d:	00 00                	add    %al,(%rax)
    bf7f:	00 a0 22 00 00 00    	add    %ah,0x22(%rax)
    bf85:	00 00                	add    %al,(%rax)
    bf87:	00 b0 22 00 00 00    	add    %dh,0x22(%rax)
    bf8d:	00 00                	add    %al,(%rax)
    bf8f:	00 c0                	add    %al,%al
    bf91:	22 00                	and    (%rax),%al
    bf93:	00 00                	add    %al,(%rax)
    bf95:	00 00                	add    %al,(%rax)
    bf97:	00 d0                	add    %dl,%al
    bf99:	22 00                	and    (%rax),%al
    bf9b:	00 00                	add    %al,(%rax)
    bf9d:	00 00                	add    %al,(%rax)
    bf9f:	00 e0                	add    %ah,%al
    bfa1:	22 00                	and    (%rax),%al
    bfa3:	00 00                	add    %al,(%rax)
    bfa5:	00 00                	add    %al,(%rax)
    bfa7:	00 f0                	add    %dh,%al
    bfa9:	22 00                	and    (%rax),%al
    bfab:	00 00                	add    %al,(%rax)
    bfad:	00 00                	add    %al,(%rax)
    bfaf:	00 00                	add    %al,(%rax)
    bfb1:	23 00                	and    (%rax),%eax
    bfb3:	00 00                	add    %al,(%rax)
    bfb5:	00 00                	add    %al,(%rax)
    bfb7:	00 10                	add    %dl,(%rax)
    bfb9:	23 00                	and    (%rax),%eax
    bfbb:	00 00                	add    %al,(%rax)
    bfbd:	00 00                	add    %al,(%rax)
    bfbf:	00 20                	add    %ah,(%rax)
    bfc1:	23 00                	and    (%rax),%eax
    bfc3:	00 00                	add    %al,(%rax)
    bfc5:	00 00                	add    %al,(%rax)
    bfc7:	00 30                	add    %dh,(%rax)
    bfc9:	23 00                	and    (%rax),%eax
    bfcb:	00 00                	add    %al,(%rax)
    bfcd:	00 00                	add    %al,(%rax)
    bfcf:	00 40 23             	add    %al,0x23(%rax)
	...

Disassembly of section .data:

000000000000c000 <__data_start>:
	...

000000000000c008 <__dso_handle>:
    c008:	08 c0                	or     %al,%al
	...

000000000000c020 <code>:
    c020:	28 00                	sub    %al,(%rax)
    c022:	00 00                	add    %al,(%rax)
    c024:	0c 00                	or     $0x0,%al
    c026:	00 00                	add    %al,(%rax)
    c028:	15 00 00 04 00       	adc    $0x40000,%eax
    c02d:	08 00                	or     %al,(%rax)
    c02f:	00 20                	add    %ah,(%rax)
    c031:	00 00                	add    %al,(%rax)
    c033:	00 1a                	add    %bl,(%rdx)
    c035:	00 00                	add    %al,(%rax)
    c037:	00 15 00 08 00 f0    	add    %dl,-0xffff800(%rip)        # fffffffff000c83d <_end+0xffffffffeffff67d>
    c03d:	46 10 0a             	rex.RX adc %r9b,(%rdx)
    c040:	20 00                	and    %al,(%rax)
    c042:	00 00                	add    %al,(%rax)
    c044:	1e                   	(bad)  
    c045:	00 00                	add    %al,(%rax)
    c047:	00 15 00 06 07 f0    	add    %dl,-0xff8fa00(%rip)        # fffffffff007c64d <_end+0xfffffffff006f48d>
    c04d:	46 10 0a             	rex.RX adc %r9b,(%rdx)
    c050:	15 00 01 00 06       	adc    $0x6000100,%eax
    c055:	08 00                	or     %al,(%rax)
    c057:	00 15 00 00 05 35    	add    %dl,0x35050000(%rip)        # 3505c05d <_end+0x3504ee9d>
    c05d:	80 00 00             	addb   $0x0,(%rax)
    c060:	20 00                	and    %al,(%rax)
    c062:	00 00                	add    %al,(%rax)
    c064:	1c 00                	sbb    $0x0,%al
    c066:	00 00                	add    %al,(%rax)
    c068:	15 00 02 00 f0       	adc    $0xf0000200,%eax
    c06d:	46 10 0a             	rex.RX adc %r9b,(%rdx)
    c070:	20 00                	and    %al,(%rax)
    c072:	00 00                	add    %al,(%rax)
    c074:	26 00 00             	add    %al,%es:(%rax)
    c077:	00 15 00 00 01 f0    	add    %dl,-0xfff0000(%rip)        # fffffffff001c07d <_end+0xfffffffff000eebd>
    c07d:	46 10 0a             	rex.RX adc %r9b,(%rdx)
    c080:	06                   	(bad)  
    c081:	00 00                	add    %al,(%rax)
    c083:	00 00                	add    %al,(%rax)
    c085:	00 04 00             	add    %al,(%rax,%rax,1)
    c088:	06                   	(bad)  
    c089:	00 00                	add    %al,(%rax)
    c08b:	00 00                	add    %al,(%rax)
    c08d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

000000000000c0a0 <completed.8061>:
    c0a0:	00 00                	add    %al,(%rax)
	...

000000000000c0a4 <pktcnt>:
	...

000000000000c0c0 <limits>:
	...

000000000000c100 <tsc_t2>:
	...

000000000000c110 <t1>:
	...

000000000000c120 <sem_work_fin>:
	...

000000000000c140 <sem_usercode_loaded>:
	...

000000000000c160 <sem_booted>:
	...

000000000000c180 <vm>:
	...

000000000000c938 <tsc_t1>:
	...

000000000000c940 <t2>:
	...

000000000000c960 <vcpu_init_barrier>:
	...

000000000000c980 <sem_work_wait>:
	...

000000000000c9a0 <tsc2ts>:
	...

000000000000c9c0 <sem_vcpu_init>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0x1f88>
   a:	74 75                	je     81 <_init-0x1f7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 34 2e             	cs xor $0x2e,%al
  11:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627548 <_end+0x7561a388>
  17:	6e                   	outsb  %ds:(%rsi),(%dx)
  18:	74 75                	je     8f <_init-0x1f71>
  1a:	31 7e 32             	xor    %edi,0x32(%rsi)
  1d:	30 2e                	xor    %ch,(%rsi)
  1f:	30 34 2e             	xor    %dh,(%rsi,%rbp,1)
  22:	31 29                	xor    %ebp,(%rcx)
  24:	20 39                	and    %bh,(%rcx)
  26:	2e 34 2e             	cs xor $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
